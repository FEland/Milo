{"ast":null,"code":"import _objectSpread from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Ropes_8.js\";\nimport React from 'react';\nimport FlashcardList from \"./FlashcardList_8\"; // import {allTropes, Samples} from './Tropes3';\n\nimport { Samples } from './Tropes3';\nimport SimpleModal from \"./SimpleModal_8\";\nimport Grid from '@material-ui/core/Grid';\nimport AllTropesBox from \"./AllTropesBox\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function () {\n  return createStyles({\n    root: {\n      flexGrow: 1\n    },\n    container: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    }\n  });\n});\n\nfunction detectDevice() {\n  var detectObj = {\n    device: !!navigator.maxTouchPoints ? 'mobile' : 'computer',\n    orientation: !navigator.maxTouchPoints ? 'desktop' : !window.screen.orientation.angle ? 'portrait' : 'landscape',\n    browser: navigator.vendor.includes('Apple') ? 'safari' : 'chrome'\n  };\n  return detectObj;\n}\n\nfunction makeResp(msg) {\n  var body = {\n    \"message\": msg + \", \" + detectDevice().device + \" , \" + detectDevice().orientation + \" , \" + detectDevice().browser + \", \" + new Date()\n  };\n  var headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  var options = {\n    method: \"POST\",\n    headers,\n    mode: \"cors\",\n    body: JSON.stringify(body)\n  };\n  return options;\n}\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(msg) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://76103417c60b0ff306268dcb81ecf967.m.pipedream.net\", makeResp(msg));\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function fetchData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // function prePopulateItems(){\n//   let items = new Map();\n//   Samples.forEach(element => {\n//     items.set(element.id, element);\n//   });\n//   return items;\n// }\n// let songList = prePopulateItems();\n// let songList = Samples;\n\n\nexport default function Ropes() {\n  var classes = useStyles(); // let songList = [];\n  // let songList = prePopulateItems(Samples);\n  // let songList = {...Samples};\n  // const [checked, setChecked] = React.useState({songList});\n\n  var _React$useState = React.useState(_objectSpread({}, Samples)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var callBack4 = function callBack4() {\n    var _console;\n\n    for (var _len = arguments.length, val = new Array(_len), _key = 0; _key < _len; _key++) {\n      val[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, [\"in Ropes callback4 starting w\" + val].concat(val));\n  };\n\n  var callBack1 = function callBack1() {\n    var _console2;\n\n    for (var _len2 = arguments.length, val = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      val[_key2] = arguments[_key2];\n    }\n\n    (_console2 = console).log.apply(_console2, [\"in Ropes callback1 starting w\" + val].concat(val)); // songList = {...val};\n\n\n    setChecked.apply(void 0, val); // console.log(\"in Ropes callback1 invoked\", songList);\n    // console.log(\"in Ropes callback1 invoked\" + songList);\n    // addFlashcardToQuiz(flashcard);\n    // Quiz.reloadQuiz(createQuiz(flashcard, 1));\n    // if (!songList.includes(val.id)) {songList.push(val.id)}\n    // else {songList.pop(val.id) }\n    // Quiz.items = songList;\n    // console.log(val);\n    // return (<p>HELP</p>);\n  }; // setChecked(songList);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Practice the Tropes!\")), /*#__PURE__*/React.createElement(AllTropesBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Quiz Yourself\", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SimpleModal, {\n    flashcards: checked,\n    level: false,\n    name: \"Level 1\",\n    onClick: function onClick() {\n      return fetchData(\"Quiz1 button\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SimpleModal, {\n    flashcards: checked,\n    level: true,\n    name: \"Level 2\",\n    onClick: function onClick() {\n      return fetchData(\"Quiz2 button\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Press any trope below to hear the recording and view transliteration\"), /*#__PURE__*/React.createElement(FlashcardList, {\n    callBack1: callBack1,\n    callBack4: callBack4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Ropes_8.js"],"names":["React","FlashcardList","Samples","SimpleModal","Grid","AllTropesBox","makeStyles","createStyles","useStyles","root","flexGrow","container","padding","textAlign","detectDevice","detectObj","device","navigator","maxTouchPoints","orientation","window","screen","angle","browser","vendor","includes","makeResp","msg","body","Date","headers","Headers","append","options","method","mode","JSON","stringify","fetchData","fetch","resp","Ropes","classes","useState","checked","setChecked","callBack4","val","console","log","callBack1","color"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport FlashcardList from \"./FlashcardList_8\";\n// import {allTropes, Samples} from './Tropes3';\nimport {Samples} from './Tropes3';\n\nimport SimpleModal from \"./SimpleModal_8\";\nimport Grid from '@material-ui/core/Grid';\nimport AllTropesBox from \"./AllTropesBox\"\n\nimport {\n    makeStyles,\n    createStyles,\n  } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n  })\n);\n\nfunction detectDevice(){\n  let detectObj = {\n    device: !!navigator.maxTouchPoints ? 'mobile' : 'computer',\n    orientation: !navigator.maxTouchPoints ? 'desktop' : !window.screen.orientation.angle ? 'portrait' : 'landscape',\n    browser: navigator.vendor.includes('Apple')? 'safari' : 'chrome',\n  }\n  return detectObj\n}\n\nfunction makeResp(msg) {\n  var body = {\"message\": msg + \", \" + detectDevice().device + \" , \" +  detectDevice().orientation + \" , \" +  detectDevice().browser +  \", \" + new Date() }\n  var headers = new Headers()\n  headers.append(\"Content-Type\", \"application/json\")\n  var options = {method: \"POST\", headers, mode: \"cors\", body: JSON.stringify(body),}\n  return options;\n}\n\nconst fetchData = async (msg) => {\n    try {const resp = await fetch(\"https://76103417c60b0ff306268dcb81ecf967.m.pipedream.net\", makeResp(msg));} \n    catch(err) {// console.log('failed webhook')\n    }\n};\n\n\n// function prePopulateItems(){\n//   let items = new Map();\n//   Samples.forEach(element => {\n//     items.set(element.id, element);\n//   });\n//   return items;\n// }\n// let songList = prePopulateItems();\n\n// let songList = Samples;\n\nexport default function Ropes ( ) {\n\n    const classes = useStyles();\n\n\n    // let songList = [];\n    // let songList = prePopulateItems(Samples);\n\n\n    // let songList = {...Samples};\n    \n    // const [checked, setChecked] = React.useState({songList});\n    const [checked, setChecked] = React.useState({...Samples});\n\n    \n    const callBack4 = (...val) => {\n      console.log(\"in Ropes callback4 starting w\" + val, ...val);\n    }\n\n    const callBack1 = (...val) => {\n      console.log(\"in Ropes callback1 starting w\" + val, ...val);\n      // songList = {...val};\n      setChecked(...val);\n      // console.log(\"in Ropes callback1 invoked\", songList);\n\n      // console.log(\"in Ropes callback1 invoked\" + songList);\n\n      // addFlashcardToQuiz(flashcard);\n      // Quiz.reloadQuiz(createQuiz(flashcard, 1));\n      // if (!songList.includes(val.id)) {songList.push(val.id)}\n      // else {songList.pop(val.id) }\n      // Quiz.items = songList;\n      // console.log(val);\n      // return (<p>HELP</p>);\n    \n    };\n\n    // setChecked(songList);\n    \n    return (\n\n        <div className={classes.root} style={{ color: 'white' }}>\n\n            <div > \n              <h1>Practice the Tropes!</h1>\n            </div>\n            {/* <frontpage> */}\n\n            <AllTropesBox/>\n            {/* </frontpage>  */}\n\n            <h5>Quiz Yourself\n              {/* <p>HERE {{Samples}.length}</p> */}\n                  {/* <p>{{songList}.map(i => {\n                    return (<p>{i.id}</p>) })}\n                  </p> */}\n\n                  <Grid container spacing={2} justify=\"center\" alignItems=\"center\"> \n                    <Grid item  >\n                      \n                      <SimpleModal flashcards = {checked} level = {false} name = 'Level 1' onClick={() => fetchData(\"Quiz1 button\")}></SimpleModal>\n                    </Grid>\n                    <Grid item  >\n                      <SimpleModal flashcards = {checked} level = {true} name = 'Level 2' onClick={() => fetchData(\"Quiz2 button\")}></SimpleModal>\n                    </Grid>\n                  </Grid>\n            </h5> \n\n\n        <h2>\n        Press any trope below to hear the recording and view transliteration\n        </h2>\n\n        <FlashcardList callBack1={callBack1} callBack4={callBack4}/>\n\n        <br/>\n        \n\n\n        </div>\n\n    );\n    \n}"]},"metadata":{},"sourceType":"module"}