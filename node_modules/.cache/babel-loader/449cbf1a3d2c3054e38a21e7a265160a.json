{"ast":null,"code":"import _slicedToArray from\"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Flashcard from\"./Flashcard_8\";import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import{Samples}from'./Tropes3';import Switch from'@material-ui/core/Switch';import open from\"./sounds/ui_lock.wav\";import close from\"./sounds/ui_unlock.wav\";import Hidden from'@material-ui/core/Hidden';import Tooltip from'@material-ui/core/Tooltip';import{blue}from'@material-ui/core/colors';import{withStyles}from'@material-ui/core/styles';// import Slider from \"@material-ui/core/Slider\";\nvar useStyles=makeStyles(function(theme){return{root:{display:'flex',flexWrap:'wrap',justifyContent:'space-around',overflow:'hidden'},grid:{width:500,height:450,direction:\"row\",justify:\"center\",alignItems:\"center\"}// demo: {\n//   width: 100,\n// }\n};});//   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\nvar songList=Samples;export default function FlashcardList(_ref){var callBack1=_ref.callBack1;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),flip=_React$useState2[0],setFlip=_React$useState2[1];var openAudio=new Audio(open);var closeAudio=new Audio(close);var playSound=function playSound(audioFile){audioFile.play();};var handleChange=function handleChange(event){if(event.target.flip){playSound(closeAudio);}else{playSound(openAudio);}setFlip(!flip);// setState({ ...state, [event.target.name]: event.target.checked });\nvar arrayLength=songList.length;for(var i=0;i<arrayLength;i++){songList[i].checked^=true;}callBack1(songList);};var BlueSwitch=withStyles({switchBase:{color:'white','&$checked':{color:blue[500]},'&$checked + $track':{backgroundColor:blue[600]}},checked:{},track:{}})(Switch);var callBack2=function callBack2(val){songList[val-1].checked^=true;callBack1(songList);};//TODO Volume\nvar volume=.5;//delete me later and uncomment below\n// const [volume, setVolume] = React.useState(.5);\n//   const handleVolumeChange = (event, newValue) => {\n//     setVolume(newValue);\n//     // console.log(\"vol in list is \", volume);\n// };\nvar classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Tooltip,{title:\"Select Tropes to quiz yourself on\",arrow:true,placement:\"right\"},/*#__PURE__*/React.createElement(BlueSwitch,{checked:flip,onChange:handleChange,name:\"toggle\",inputProps:{'aria-label':'secondary checkbox'}})),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,direction:\"row-reverse\"},songList.map(function(flash){return/*#__PURE__*/ (// <Hidden smUp>\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Hidden,{smDown:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Flashcard,{flashcard:flash,key:flash.id,callBack2:callBack2,flip:flip,volume:volume},\" \"))),/*#__PURE__*/React.createElement(Hidden,{mdUp:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4},/*#__PURE__*/React.createElement(Flashcard,{flashcard:flash,key:flash.id,callBack2:callBack2,flip:flip,volume:volume},\" \")))));}))));}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/FlashcardList_8.js"],"names":["React","Flashcard","makeStyles","Grid","Samples","Switch","open","close","Hidden","Tooltip","blue","withStyles","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","songList","FlashcardList","callBack1","useState","flip","setFlip","openAudio","Audio","closeAudio","playSound","audioFile","play","handleChange","event","target","arrayLength","length","i","checked","BlueSwitch","switchBase","color","backgroundColor","track","callBack2","val","volume","classes","map","flash","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from \"./Flashcard_8\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Samples} from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\nimport Hidden from '@material-ui/core/Hidden';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {  blue } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\n// import Slider from \"@material-ui/core/Slider\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n    },\n    // demo: {\n    //   width: 100,\n    // }\n  }));\n\n//   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n\n  let songList = Samples;\n\nexport default function FlashcardList( { callBack1} ) {\n\n\n  const [flip, setFlip] = React.useState(false);\n\n  const openAudio = new Audio(open);\n  const closeAudio = new Audio(close);\n\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n\n\n  const handleChange = (event) => {\n\n    if (event.target.flip) {\n      playSound(closeAudio);  \n    } else {\n      playSound(openAudio);\n    }\n\n    setFlip(!flip);\n    // setState({ ...state, [event.target.name]: event.target.checked });\n    var arrayLength = songList.length;\n    for (var i = 0; i < arrayLength; i++) {\n        songList[i].checked ^= true;\n    }\n    callBack1(songList);\n  };\n\n  const BlueSwitch = withStyles({\n    switchBase: {\n      color: 'white',\n      '&$checked': {color: blue[500],},\n      '&$checked + $track': {backgroundColor: blue[600],},\n    }, checked: {},track: {},\n  })(Switch);\n  \n\n  const callBack2 = (val) => {\n    \n    songList[val-1].checked ^= true;\n\n    callBack1(songList);\n\n  };\n  //TODO Volume\n    let volume = .5; //delete me later and uncomment below\n  // const [volume, setVolume] = React.useState(.5);\n//   const handleVolumeChange = (event, newValue) => {\n//     setVolume(newValue);\n//     // console.log(\"vol in list is \", volume);\n// };\n\n    const classes = useStyles();\n    \n\n    return (\n\n        \n    <div>\n\n\n         <div className={classes.root}>\n        {/* TODO volume control */}\n         {/* <Grid container spacing={2} \n                justify=\"center\"\n                  alignItems=\"baseline\"> \n         <Grid item xs={2} >\n\n            <Switch\n            checked={flip}\n            onChange={handleChange}\n            name=\"toggle\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n                  </Grid> \n                  <Grid item xs={2} >\n\n                  <Slider  volume={volume} onChange={handleVolumeChange} \n                    defaultValue={.5} step={.1} min={0} max={1} />\n          </Grid>      \n          </Grid> */}\n\n      <Tooltip title=\"Select Tropes to quiz yourself on\" arrow placement=\"right\">\n            <BlueSwitch\n            checked={flip}\n            onChange={handleChange}\n            name=\"toggle\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </Tooltip>\n\n\n\n      {/* style= { !state.toggle ? { 'font-family': 'Times New Roman'} : { }} > */}\n      <Grid container spacing={2} direction='row-reverse' > \n      {songList.map(flash => {\n                  return (\n                    // <Hidden smUp>\n                    <>\n                    <Hidden smDown>\n\n                    <Grid item xs={3} >\n                      \n                      <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} flip={flip} volume={volume}> </Flashcard>\n                    </Grid>\n                  </Hidden>\n                  <Hidden mdUp>\n\n                  <Grid item xs={4} >\n                    \n                    <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} flip={flip} volume={volume}> </Flashcard>\n                  </Grid>\n                </Hidden>\n                  </>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}