{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/QuizShapes_2.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState, useRef } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport { Samples } from './Tropes'; // import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider'; //   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\nfunction shuffleTropes(items, num) {\n  //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n  var nums = [];\n  items.forEach(function (element) {\n    if (element.checked) {\n      nums.push(element);\n    }\n  });\n  var ranNums = [];\n  var i = nums.length;\n  var j = 0;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    ranNums.push(nums[j]);\n    nums.splice(j, 1);\n  }\n\n  return ranNums.slice(0, num);\n}\n\nfunction createQuiz(items, num) {\n  var order = shuffleTropes(items, num);\n  return order;\n}\n\nvar audio = new Audio();\nexport default function QuizShapes(_ref) {\n  var _this = this;\n\n  var props = Object.assign({}, _ref);\n  // let audio = new Audio();\n  var oldTropes = props.flashcards;\n  var items = [];\n  var arrayLength = oldTropes.length;\n\n  for (var x = 0; x < arrayLength; x++) {\n    if (oldTropes[x].checked === 1) {\n      items.push(oldTropes[x]);\n    }\n  }\n\n  if (oldTropes.length === undefined) {\n    items = Samples;\n  } // let fast = 1;\n  // const speeds = [.5, 1, 1.5, 2, 2.5];\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      flag = _useState2[0],\n      _setFlag = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trope = _useState4[0],\n      _setTrope = _useState4[1]; // const [myState, _setMyState] = React.useState(0);\n\n\n  var tropeRef = React.useRef(trope);\n\n  var setTrope = function setTrope(data) {\n    tropeRef.current = data;\n\n    _setTrope(data);\n  };\n\n  var flagRef = React.useRef(flag);\n\n  var setFlag = function setFlag(data) {\n    flagRef.current = data;\n\n    _setFlag(data);\n  }; // const [speed, setSpeed] = useState(1);\n  // const handleSpeed = (val) => {\n  //     // setSpeed(speed => speed = val);\n  //     setSpeed(val);\n  //   }\n  // let i = items.length;\n\n\n  var i = 0;\n  var myflag = false; // var speed = 1;\n  // function getSpeed(){\n  //     return speed;\n  // }\n  // const [count, setCount] = useState(0);\n  // const [yesQuiz, setQuizTrue] = useState(0);\n\n  function continuous(index) {\n    if (index < quiz.length) {\n      setTrope(index);\n      audio.src = quiz[index].sound;\n      var playPromise = audio.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(function (_) {// Automatic playback started!\n          // Show playing UI.\n          // console.log(\"playing \", next_trope);\n        }).catch(function (error) {// Auto-play was prevented\n          // Show paused UI.\n          // console.log(\"promise broke in playnext\");\n        });\n      }\n\n      continuous(index + 1);\n      return;\n    } else {\n      audio.pause();\n    }\n  }\n\n  function findIndex(src) {\n    // console.log(quiz)\n    var w = -1;\n\n    for (w = 0; w < quiz.length; w++) {\n      // console.log(\"w: \", w, \"quiz[w].sound \", quiz[w].sound, \" soruce is \", src, \" \", src.replace(/^.*(\\\\|\\/|\\:)/, ''))\n      var file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '');\n\n      if (quiz[w].sound === file) {\n        // console.log(\"here\")\n        return w;\n      }\n    }\n\n    return w;\n  }\n\n  function playNext(next_trope) {\n    audio.src = null;\n    audio.src = quiz[next_trope].sound; // setTrope(next_trope);\n\n    var playPromise = audio.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(function (_) {// Automatic playback started!\n        // Show playing UI.\n        // console.log(\"playing \", next_trope);\n      }).catch(function (error) {// Auto-play was prevented\n        // Show paused UI.\n        // console.log(\"promise broke in playnext\");\n      });\n    }\n  }\n\n  audio.addEventListener('ended', function () {\n    // console.log(\"ended w i, \", i)\n    // // ++i;\n    // setTrope(i);\n    // console.log(\"calling next w i, \", i)\n    // audio.pause();\n    // console.log(audio.src, \" ended\")\n    // let d = findIndex(audio.src);\n    // console.log(d);\n    // i = d + 1;\n    // let j = i + 1;\n    // i++;\n    // setTrope(d + 1);\n    // tropeRef.current = d + 1;\n    // tropeRef.current = (i+1) % quiz.length;\n    // if (flagRef) {\n    // handlePlay();\n    // console.log(\"now here\")\n    // setTimeout(function(){  }, 5000);\n    var nextIndex = (findIndex(audio.src) + 1) % quiz.length;\n    setTrope(nextIndex); // playNext(nextIndex);\n    // playNext((findIndex(audio.src)+1) % quiz.length);\n    // playNext(j);\n    // }\n  }, false);\n\n  var _useState5 = useState(createQuiz(items, Math.min(Math.floor(items.length / 2), 8))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quiz = _useState6[0],\n      reloadQuiz = _useState6[1];\n\n  var _React$useState = React.useState(4),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // playFromSong\n\n\n  var playFromSong = function playFromSong(index) {\n    setFlag(true);\n    myflag = true; // enableHighlight(true);\n\n    i = index;\n    setTrope(index);\n    playNext(index); // audio.src = \"\";\n    // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n    // i = index;\n    // setTrope(i);\n    // console.log('trope now ', trope);\n    // playNext();\n  };\n\n  function handlePlay() {\n    // myflag = 0;\n    // setTrope(quiz.length);\n    // i = quiz.length;\n    // setTrope(0);\n    // printc(\"handlePlay b4 PlayNext\");\n    // playNext();\n    i = trope;\n    setFlag(true);\n    myflag = true; // playNext(i);\n\n    continuous(0); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    // myflag = 1;\n    // // audio.pause();\n    // audio.pause()\n    // audio.currentTime = 0\n    // audio = null;\n    myflag = false;\n    setFlag(false);\n    audio.pause(); // killAudio();\n    // i = 0;\n    // setTrope(0);\n  } // function handlePlay(){\n  //     myflag = 0;\n  //     // setTrope(quiz.length);\n  //     // i = quiz.length;\n  //     setTrope(0);\n  //     // printc(\"handlePlay b4 PlayNext\");\n  // playNext();\n  //     setFlag(true); \n  //     // makeSongList(quiz);\n  // }\n  // function handlePause(){\n  //     myflag = 1;\n  //     // audio.pause();\n  //     audio.pause()\n  //     audio.currentTime = 0\n  //     audio = null;\n  //     // printc(\"handlePause after setFlag\");\n  //     setFlag(false);\n  //     i = 0;\n  //     setTrope(0);\n  // }\n  // const enableHighlight = (e) => {\n  //                 console.log(\"do\");\n  // audio.addEventListener('timeupdate', function () {\n  // if (!myflag) {\n  //     playNext();\n  //     }\n  // else {\n  //     audio.pause();\n  // }\n  // console.log(audio.currentTime.toFixed(1));\n  // }, false);\n  // }\n\n\n  function killAudio() {\n    audio.pause(); // audio = null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 10\n    }\n  }, \"Quiz Yourself!\", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: function onClick() {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: Math.min(Math.floor((items.length + 1) / 2), 4),\n    step: 1,\n    min: 0,\n    max: Math.min(items.length, 8),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  })), !flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        return handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: function onClick() {\n        return handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, quiz.map(function (songName, index) {\n    return trope === index ?\n    /*#__PURE__*/\n    // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    // <img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return continuous(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'opacity': '.5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return continuous(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'border': '0px solid black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 14\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/QuizShapes_2.js"],"names":["React","useState","useRef","Button","PauseCircleFilled","PlayCircleFilled","Samples","CachedIcon","Slider","shuffleTropes","items","num","nums","forEach","element","checked","push","ranNums","i","length","j","Math","floor","random","splice","slice","createQuiz","order","audio","Audio","QuizShapes","props","oldTropes","flashcards","arrayLength","x","undefined","flag","_setFlag","trope","_setTrope","tropeRef","setTrope","data","current","flagRef","setFlag","myflag","continuous","index","quiz","src","sound","playPromise","play","then","_","catch","error","pause","findIndex","w","file","replace","playNext","next_trope","addEventListener","nextIndex","min","reloadQuiz","value","setValue","handleChange","event","newValue","playFromSong","handlePlay","handlePause","killAudio","map","songName","image"],"mappings":"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","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState, useRef} from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport {Samples} from './Tropes';\n\n// import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n//   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\n  function shuffleTropes(items, num){ //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n    let nums = [];\n    items.forEach(element => {\n        if (element.checked){\n            nums.push(element);\n            }\n        });\n\n    let ranNums = [];\n    let i = nums.length;\n    let j = 0;\n\n    while (i--) {\n        j = Math.floor(Math.random() * (i+1));\n        ranNums.push(nums[j]);\n        nums.splice(j,1);\n    }\n    return ranNums.slice(0,num);\n\n  }\n\n\n  function createQuiz(items, num) {\n    let order = shuffleTropes(items, num);\n    return order;\n  }\n  let audio = new Audio();\n\nexport default function QuizShapes( { ...props} ) {\n\n    // let audio = new Audio();\n    let oldTropes = props.flashcards;\n    let items = [];\n    var arrayLength = oldTropes.length;\n    for (var x = 0; x < arrayLength; x++) {\n        if (oldTropes[x].checked === 1){\n            items.push(oldTropes[x]);\n        }\n    }\n    if (oldTropes.length === undefined){\n        items = Samples;\n    }\n\n    // let fast = 1;\n    // const speeds = [.5, 1, 1.5, 2, 2.5];\n    const [flag, _setFlag] = useState(false);\n    const [trope, _setTrope] = useState(0);\n\n    // const [myState, _setMyState] = React.useState(0);\n\n    const tropeRef = React.useRef(trope);\n    const setTrope = data => {\n        tropeRef.current = data;\n        _setTrope(data);\n    };\n\n    const flagRef = React.useRef(flag);\n    const setFlag = data => {\n        flagRef.current = data;\n        _setFlag(data);\n    };\n    // const [speed, setSpeed] = useState(1);\n\n    // const handleSpeed = (val) => {\n    //     // setSpeed(speed => speed = val);\n    //     setSpeed(val);\n    //   }\n  \n      \n    // let i = items.length;\n    let i = 0;\n    let myflag = false;\n    // var speed = 1;\n\n    // function getSpeed(){\n    //     return speed;\n    // }\n\n    // const [count, setCount] = useState(0);\n    // const [yesQuiz, setQuizTrue] = useState(0);\n\n    function continuous (index){\n\n        if (index < quiz.length){\n            setTrope(index);\n\n            audio.src = quiz[index].sound;\n            var playPromise = audio.play();\n\n            if (playPromise !== undefined) {\n                playPromise.then(_ => {\n                // Automatic playback started!\n                // Show playing UI.\n                    // console.log(\"playing \", next_trope);\n\n                })\n                .catch(error => {\n                // Auto-play was prevented\n                // Show paused UI.\n                    // console.log(\"promise broke in playnext\");\n                });\n            }\n            continuous(index+1);\n            return;\n        }\n        else{\n            audio.pause();\n        }\n    }\n\n    function findIndex (src){\n        // console.log(quiz)\n        var w = -1;\n        for (w = 0; w < quiz.length; w++){\n            // console.log(\"w: \", w, \"quiz[w].sound \", quiz[w].sound, \" soruce is \", src, \" \", src.replace(/^.*(\\\\|\\/|\\:)/, ''))\n            let file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '')\n            if (quiz[w].sound === file){\n                // console.log(\"here\")\n                return w;\n            }\n        }\n        return w;\n        \n\n\n    }\n\n\n    function playNext (next_trope){\n\n        audio.src = null;\n        audio.src = quiz[next_trope].sound;\n        // setTrope(next_trope);\n\n        var playPromise = audio.play();\n\n        if (playPromise !== undefined) {\n            playPromise.then(_ => {\n            // Automatic playback started!\n            // Show playing UI.\n                // console.log(\"playing \", next_trope);\n\n            })\n            .catch(error => {\n            // Auto-play was prevented\n            // Show paused UI.\n                // console.log(\"promise broke in playnext\");\n            });\n        }\n        \n    }\n\n    audio.addEventListener('ended', function(){\n\n        // console.log(\"ended w i, \", i)\n        // // ++i;\n        // setTrope(i);\n        // console.log(\"calling next w i, \", i)\n        // audio.pause();\n        // console.log(audio.src, \" ended\")\n\n        // let d = findIndex(audio.src);\n        // console.log(d);\n        // i = d + 1;\n        // let j = i + 1;\n        // i++;\n        // setTrope(d + 1);\n        // tropeRef.current = d + 1;\n        // tropeRef.current = (i+1) % quiz.length;\n\n        // if (flagRef) {\n        // handlePlay();\n        // console.log(\"now here\")\n        // setTimeout(function(){  }, 5000);\n\n        var nextIndex = (findIndex(audio.src)+1) % quiz.length;\n        \n        setTrope(nextIndex);\n        // playNext(nextIndex);\n        // playNext((findIndex(audio.src)+1) % quiz.length);\n        // playNext(j);\n\n        // }\n\n    }, false);\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, Math.min(Math.floor(items.length/2),8)));\n    const [value, setValue] = React.useState(4);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // playFromSong\n    const playFromSong = (index) => {\n        \n        setFlag(true);\n        myflag = true;\n        // enableHighlight(true);\n        i = index;\n        setTrope(index);\n        playNext(index);\n\n        // audio.src = \"\";\n        // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n        // i = index;\n        // setTrope(i);\n        // console.log('trope now ', trope);\n        // playNext();\n    };\n\n    function handlePlay(){\n        // myflag = 0;\n        // setTrope(quiz.length);\n        // i = quiz.length;\n        // setTrope(0);\n\n        // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n        i = trope;\n        setFlag(true); \n        myflag = true;\n        // playNext(i);\n        continuous(0);\n\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        // myflag = 1;\n        // // audio.pause();\n        // audio.pause()\n        // audio.currentTime = 0\n        // audio = null;\n\n        myflag = false;\n        setFlag(false);\n        audio.pause();\n\n        // killAudio();\n        // i = 0;\n        // setTrope(0);\n\n\n\n    }\n\n    // function handlePlay(){\n    //     myflag = 0;\n    //     // setTrope(quiz.length);\n    //     // i = quiz.length;\n    //     setTrope(0);\n\n    //     // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n    //     setFlag(true); \n\n    //     // makeSongList(quiz);\n    // }\n\n    // function handlePause(){\n    //     myflag = 1;\n    //     // audio.pause();\n    //     audio.pause()\n    //     audio.currentTime = 0\n    //     audio = null;\n\n    //     // printc(\"handlePause after setFlag\");\n    //     setFlag(false);\n    //     i = 0;\n    //     setTrope(0);\n\n\n\n    // }\n    // const enableHighlight = (e) => {\n    //                 console.log(\"do\");\n\n        // audio.addEventListener('timeupdate', function () {\n            // if (!myflag) {\n            //     playNext();\n            //     }\n            // else {\n            //     audio.pause();\n            // }\n            // console.log(audio.currentTime.toFixed(1));\n\n        // }, false);\n\n    // }\n\n    function killAudio(){\n        audio.pause();\n        // audio = null;\n    }\n\n\n    return (\n        \n         <quiz>Quiz Yourself!\n            <h5> \n\n            <div className=\"controls\" >\n            \n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));}}/>}>\n                </Button> \n\n                {/* <Button variant=\"contained\" color=\"primary\"\n                    startIcon = {<DoubleArrowIcon onChange={() => { handleSpeed(2) ;}} />}>\n                        {speed}\n                </Button> \n */}\n\n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={Math.min(Math.floor((items.length+1)/2),4)}\n                            step={1}  min={0} max={Math.min(items.length, 8)} valueLabelDisplay=\"auto\" />\n                            </Button>\n\n                    \n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {!flag ?  <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => handlePlay()}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => handlePause()}/>}>\n                    </Button>\n                }\n            </div>\n\n            </h5>\n\n            <p>\n        {quiz.map((songName, index)=> {return ( \n            (trope === index) ?\n\n            // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            // <img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            <img src={songName.image} onClick={() => continuous(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            :<img src={songName.image} onClick={() => continuous(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n\n           )})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}