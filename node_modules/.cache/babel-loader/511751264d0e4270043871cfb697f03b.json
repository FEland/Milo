{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/QuizShapes_2.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport { Samples } from './Tropes'; // import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider'; //   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\nfunction shuffleTropes(items, num) {\n  //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n  var nums = [];\n  items.forEach(function (element) {\n    if (element.checked) {\n      nums.push(element);\n    }\n  });\n  var ranNums = [];\n  var i = nums.length;\n  var j = 0;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    ranNums.push(nums[j]);\n    nums.splice(j, 1);\n  }\n\n  return ranNums.slice(0, num);\n}\n\nfunction createQuiz(items, num) {\n  var order = shuffleTropes(items, num);\n  return order;\n}\n\nvar audio = new Audio();\nexport default function QuizShapes(_ref) {\n  var _this = this;\n\n  var props = Object.assign({}, _ref);\n  // let audio = new Audio();\n  var oldTropes = props.flashcards;\n  var items = [];\n  var arrayLength = oldTropes.length;\n\n  for (var x = 0; x < arrayLength; x++) {\n    if (oldTropes[x].checked === 1) {\n      items.push(oldTropes[x]);\n    }\n  }\n\n  if (oldTropes.length === undefined) {\n    items = Samples;\n  } // let fast = 1;\n  // const speeds = [.5, 1, 1.5, 2, 2.5];\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      restartFlag = _useState2[0],\n      setRestartFlag = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flag = _useState4[0],\n      _setFlag = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      trope = _useState6[0],\n      _setTrope = _useState6[1]; // const [myState, _setMyState] = React.useState(0);\n\n\n  var tropeRef = React.useRef(trope);\n\n  var setTrope = function setTrope(data) {\n    tropeRef.current = data;\n\n    _setTrope(data);\n  };\n\n  var flagRef = React.useRef(flag);\n\n  var setFlag = function setFlag(data) {\n    flagRef.current = data;\n\n    _setFlag(data);\n  }; // const [speed, setSpeed] = useState(1);\n  // const handleSpeed = (val) => {\n  //     // setSpeed(speed => speed = val);\n  //     setSpeed(val);\n  //   }\n  // let i = items.length;\n\n\n  var i = 0;\n  var myflag = false; // var speed = 1;\n  // function getSpeed(){\n  //     return speed;\n  // }\n\n  function cont() {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    // var index = 1;\n    // console.log(\"HEA\", index, quiz[index].sound, quiz)\n    // audio.src = quiz[index].sound;\n    if (myflag && index < quiz.length) {\n      setTrope(index);\n      setRestartFlag(false);\n      audio.src = quiz[index].sound;\n      audio.playbackRate = 2;\n      var playPromise = audio.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(function (_) {// Automatic playback started!\n          // Show playing UI.\n          // console.log(\"playing \", next_trope);\n          // if (index === quiz.length-1){\n          //     setRestartFlag(true)\n          // }\n          // resetFlag();\n          // setFlag(false);\n          // console.log(\"last cont\")\n          // setFlag(false);\n          // myflag = false;\n        }).catch(function (error) {// Auto-play was prevented\n          // Show paused UI.\n          // console.log(\"promise broke in playnext\");\n        });\n      }\n    }\n  }\n\n  ;\n\n  var resetFlag = function resetFlag() {\n    flagRef.current = false;\n\n    _setFlag(false);\n\n    myflag = false;\n    setFlag(false);\n  }; // function findIndex (src){\n  //     var w = -1;\n  //     for (w = 0; w < quiz.length; w++){\n  //         let file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '')\n  //         if (quiz[w].sound === file){\n  //             return w;\n  //         }\n  //     }\n  //     return quiz.length-1;\n  // }\n  // audio.addEventListener('ended', cont((findIndex(audio.src)+1)), false);\n\n\n  audio.addEventListener('ended', function () {\n    // cont((findIndex(audio.src)+1));\n    // cont((findIndex(audio.src)+1));\n    i = i + 1;\n\n    if (i < quiz.length) {\n      //todo try or = 1\n      if (i !== quiz.length - 1) {\n        setFlag(true);\n      }\n\n      cont(i);\n    } else {\n      // setFlag(false);\n      // myflag = false;\n      audio.pause();\n      i = 0;\n      setTrope(0);\n      resetFlag();\n      setRestartFlag(true); // console.log(\"last end\")\n      // // flag = false;\n      // _setFlag(false);\n      // setFlag(false);\n      // // audio.pause();\n      // myflag = false;\n    }\n  }, false);\n\n  var _React$useState = React.useState(createQuiz(items, Math.min(Math.floor(items.length / 2), 8))),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      quiz = _React$useState2[0],\n      _reloadQuiz = _React$useState2[1];\n\n  var _React$useState3 = React.useState(4),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var quizRef = React.useRef(quiz);\n\n  var reloadQuiz = function reloadQuiz(data) {\n    quizRef.current = data;\n\n    _reloadQuiz(data);\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // playFromSong\n\n\n  var playFromSong = function playFromSong(index) {\n    myflag = true;\n    setFlag(true); // enableHighlight(true);\n\n    i = index;\n    setTrope(index);\n    cont(i);\n  };\n\n  function handlePlay() {\n    // myflag = 0;\n    // setTrope(quiz.length);\n    // i = quiz.length;\n    // setTrope(0);\n    // printc(\"handlePlay b4 PlayNext\");\n    // playNext();\n    i = trope;\n    myflag = true;\n    setFlag(true); // playNext(i);\n    // continuous(0);\n\n    cont(i); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    // myflag = 1;\n    // // audio.pause();\n    // audio.pause()\n    // audio.currentTime = 0\n    // audio = null;\n    // setTrope(i);\n    myflag = false;\n    setFlag(false);\n    audio.pause(); // killAudio();\n    // i = 0;\n    // setTrope(0);\n  } // function handlePlay(){\n  //     myflag = 0;\n  //     // setTrope(quiz.length);\n  //     // i = quiz.length;\n  //     setTrope(0);\n  //     // printc(\"handlePlay b4 PlayNext\");\n  // playNext();\n  //     setFlag(true); \n  //     // makeSongList(quiz);\n  // }\n  // function handlePause(){\n  //     myflag = 1;\n  //     // audio.pause();\n  //     audio.pause()\n  //     audio.currentTime = 0\n  //     audio = null;\n  //     // printc(\"handlePause after setFlag\");\n  //     setFlag(false);\n  //     i = 0;\n  //     setTrope(0);\n  // }\n  // const enableHighlight = (e) => {\n  //                 console.log(\"do\");\n  // audio.addEventListener('timeupdate', function () {\n  // if (!myflag) {\n  //     playNext();\n  //     }\n  // else {\n  //     audio.pause();\n  // }\n  // console.log(audio.currentTime.toFixed(1));\n  // }, false);\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 10\n    }\n  }, \"Quiz Yourself!\", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: function onClick() {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: Math.min(Math.floor((items.length + 1) / 2), 4),\n    step: 1,\n    min: 0,\n    max: Math.min(items.length, 8),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  })), !restartFlag ? !flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        return handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: function onClick() {\n        return handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        return handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, quiz.map(function (songName, index) {\n    return trope === index ?\n    /*#__PURE__*/\n    // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'opacity': '.5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'border': '0px solid black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 14\n      }\n    }) // <img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    ;\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/QuizShapes_2.js"],"names":["React","useState","Button","PauseCircleFilled","PlayCircleFilled","Samples","CachedIcon","Slider","shuffleTropes","items","num","nums","forEach","element","checked","push","ranNums","i","length","j","Math","floor","random","splice","slice","createQuiz","order","audio","Audio","QuizShapes","props","oldTropes","flashcards","arrayLength","x","undefined","restartFlag","setRestartFlag","flag","_setFlag","trope","_setTrope","tropeRef","useRef","setTrope","data","current","flagRef","setFlag","myflag","cont","index","quiz","src","sound","playbackRate","playPromise","play","then","_","catch","error","resetFlag","addEventListener","pause","min","_reloadQuiz","value","setValue","quizRef","reloadQuiz","handleChange","event","newValue","playFromSong","handlePlay","handlePause","map","songName","image"],"mappings":"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","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState} from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport {Samples} from './Tropes';\n\n// import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n//   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\n  function shuffleTropes(items, num){ //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n    let nums = [];\n    items.forEach(element => {\n        if (element.checked){\n            nums.push(element);\n            }\n        });\n\n    let ranNums = [];\n    let i = nums.length;\n    let j = 0;\n\n    while (i--) {\n        j = Math.floor(Math.random() * (i+1));\n        ranNums.push(nums[j]);\n        nums.splice(j,1);\n    }\n    return ranNums.slice(0,num);\n\n  }\n\n\n  function createQuiz(items, num) {\n    let order = shuffleTropes(items, num);\n    return order;\n  }\n\n  let audio = new Audio();\n\nexport default function QuizShapes( { ...props} ) {\n\n    // let audio = new Audio();\n    let oldTropes = props.flashcards;\n    let items = [];\n    var arrayLength = oldTropes.length;\n    for (var x = 0; x < arrayLength; x++) {\n        if (oldTropes[x].checked === 1){\n            items.push(oldTropes[x]);\n        }\n    }\n    if (oldTropes.length === undefined){\n        items = Samples;\n    }\n\n    // let fast = 1;\n    // const speeds = [.5, 1, 1.5, 2, 2.5];\n    const [restartFlag, setRestartFlag] = useState(false);\n    const [flag, _setFlag] = useState(false);\n    const [trope, _setTrope] = useState(0);\n\n    // const [myState, _setMyState] = React.useState(0);\n\n    const tropeRef = React.useRef(trope);\n    const setTrope = data => {\n        tropeRef.current = data;\n        _setTrope(data);\n    };\n\n    const flagRef = React.useRef(flag);\n    const setFlag = data => {\n        flagRef.current = data;\n        _setFlag(data);\n    };\n    // const [speed, setSpeed] = useState(1);\n\n    // const handleSpeed = (val) => {\n    //     // setSpeed(speed => speed = val);\n    //     setSpeed(val);\n    //   }\n  \n      \n    // let i = items.length;\n    var i = 0;\n    var myflag = false;\n    // var speed = 1;\n\n    // function getSpeed(){\n    //     return speed;\n    // }\n\n    function cont (index = 0) {\n        // var index = 1;\n        // console.log(\"HEA\", index, quiz[index].sound, quiz)\n        // audio.src = quiz[index].sound;\n\n        if(myflag && index < quiz.length) {\n            setTrope(index);\n            setRestartFlag(false)\n\n            audio.src = quiz[index].sound;\n            audio.playbackRate = 2;\n\n\n            var playPromise = audio.play();\n\n            if (playPromise !== undefined) {\n                playPromise.then(_ => {\n                // Automatic playback started!\n                // Show playing UI.\n                    // console.log(\"playing \", next_trope);\n                    // if (index === quiz.length-1){\n                    //     setRestartFlag(true)\n                    // }\n                        // resetFlag();\n                        // setFlag(false);\n                        // console.log(\"last cont\")\n        \n                        // setFlag(false);\n                        // myflag = false;\n                    \n                })\n                .catch(error => {\n                // Auto-play was prevented\n                // Show paused UI.\n                    // console.log(\"promise broke in playnext\");\n                });\n            }\n            \n        }\n    };\n\n\n    const resetFlag = () => {\n        flagRef.current = false;\n        _setFlag(false);\n        myflag = false;\n        setFlag(false);\n    };\n\n    // function findIndex (src){\n    //     var w = -1;\n    //     for (w = 0; w < quiz.length; w++){\n    //         let file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '')\n    //         if (quiz[w].sound === file){\n    //             return w;\n    //         }\n    //     }\n    //     return quiz.length-1;\n    // }\n\n    // audio.addEventListener('ended', cont((findIndex(audio.src)+1)), false);\n    audio.addEventListener('ended', function(){\n        // cont((findIndex(audio.src)+1));\n        // cont((findIndex(audio.src)+1));\n        i = i + 1;\n        if (i < quiz.length){\n            //todo try or = 1\n            if (i !== quiz.length-1 ){\n                setFlag(true); \n            }\n            cont(i);\n        } \n        else{\n            // setFlag(false);\n            // myflag = false;\n            audio.pause();\n            i = 0;\n            setTrope(0);\n\n            resetFlag()\n            setRestartFlag(true)\n            // console.log(\"last end\")\n            // // flag = false;\n            // _setFlag(false);\n            // setFlag(false);\n            // // audio.pause();\n\n            // myflag = false;\n        }\n\n    }, false);\n\n\n    const [quiz, _reloadQuiz] = React.useState(createQuiz(items, Math.min(Math.floor(items.length/2),8)));\n    const [value, setValue] = React.useState(4);\n    const quizRef = React.useRef(quiz);\n\n    const reloadQuiz = data => {\n        quizRef.current = data;\n        _reloadQuiz(data);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // playFromSong\n    const playFromSong = (index) => {\n        \n        myflag = true;\n        setFlag(true);\n        // enableHighlight(true);\n        i = index;\n        setTrope(index);\n        cont(i);\n\n    };\n\n    function handlePlay(){\n        // myflag = 0;\n        // setTrope(quiz.length);\n        // i = quiz.length;\n        // setTrope(0);\n\n        // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n        i = trope;\n        myflag = true;\n        setFlag(true); \n        // playNext(i);\n        // continuous(0);\n        cont(i);\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        // myflag = 1;\n        // // audio.pause();\n        // audio.pause()\n        // audio.currentTime = 0\n        // audio = null;\n        // setTrope(i);\n        myflag = false;\n        setFlag(false);\n        audio.pause();\n\n        // killAudio();\n        // i = 0;\n        // setTrope(0);\n\n\n\n    }\n\n    // function handlePlay(){\n    //     myflag = 0;\n    //     // setTrope(quiz.length);\n    //     // i = quiz.length;\n    //     setTrope(0);\n\n    //     // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n    //     setFlag(true); \n\n    //     // makeSongList(quiz);\n    // }\n\n    // function handlePause(){\n    //     myflag = 1;\n    //     // audio.pause();\n    //     audio.pause()\n    //     audio.currentTime = 0\n    //     audio = null;\n\n    //     // printc(\"handlePause after setFlag\");\n    //     setFlag(false);\n    //     i = 0;\n    //     setTrope(0);\n\n\n\n    // }\n    // const enableHighlight = (e) => {\n    //                 console.log(\"do\");\n\n        // audio.addEventListener('timeupdate', function () {\n            // if (!myflag) {\n            //     playNext();\n            //     }\n            // else {\n            //     audio.pause();\n            // }\n            // console.log(audio.currentTime.toFixed(1));\n\n        // }, false);\n\n    // }\n\n\n\n    return (\n        \n         <quiz>Quiz Yourself!\n            <h5> \n\n            <div className=\"controls\" >\n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));}}/>}>\n                </Button> \n\n                {/* <Button variant=\"contained\" color=\"primary\"\n                    startIcon = {<DoubleArrowIcon onChange={() => { handleSpeed(2) ;}} />}>\n                        {speed}\n                </Button> \n */}\n\n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={Math.min(Math.floor((items.length+1)/2),4)}\n                            step={1}  min={0} max={Math.min(items.length, 8)} valueLabelDisplay=\"auto\" />\n                            </Button>\n\n                    \n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {!restartFlag ? \n                    !flag ? \n                    <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => handlePlay()}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => handlePause()}/>}>\n                    </Button>\n                : \n                <Button variant=\"contained\" color=\"primary\" \n                endIcon={<PlayCircleFilled onClick={() => handlePlay()}/>}>\n                </Button>\n                }\n\n            </div>\n\n            </h5>\n\n            <p>\n        {quiz.map((songName, index)=> {return ( \n            (trope === index) ?\n\n            // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            <img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            :<img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            // <img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n\n           )})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}