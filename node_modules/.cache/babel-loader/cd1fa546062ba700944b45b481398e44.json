{"ast":null,"code":"import _objectSpread from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Ropes_8.js\";\nimport React from 'react';\nimport FlashcardList from \"./FlashcardList_8\"; // import {allTropes, Samples} from './Tropes3';\n\nimport { Samples } from './Tropes3';\nimport SimpleModal from \"./SimpleModal_8\";\nimport Grid from '@material-ui/core/Grid';\nimport AllTropesBox from \"./AllTropesBox\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function () {\n  return createStyles({\n    root: {\n      flexGrow: 1\n    },\n    container: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    }\n  });\n}); // function prePopulateItems(){\n//   let items = new Map();\n//   Samples.forEach(element => {\n//     items.set(element.id, element);\n//   });\n//   return items;\n// }\n// let songList = prePopulateItems();\n\nvar songList = Samples;\nexport default function Ropes() {\n  var classes = useStyles(); // let songList = [];\n  // let songList = prePopulateItems(Samples);\n  // let songList = {...Samples};\n\n  var _React$useState = React.useState({\n    songList\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var callBack4 = function callBack4() {\n    var _console;\n\n    for (var _len = arguments.length, val = new Array(_len), _key = 0; _key < _len; _key++) {\n      val[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, [\"in Ropes callback4 starting w\" + val].concat(val));\n  };\n\n  var callBack1 = function callBack1() {\n    for (var _len2 = arguments.length, val = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      val[_key2] = arguments[_key2];\n    }\n\n    // console.log(\"in Ropes callback1 starting w\" + val, ...val);\n    songList = _objectSpread({}, val);\n    setChecked.apply(void 0, val); // console.log(\"in Ropes callback1 invoked\", songList);\n    // console.log(\"in Ropes callback1 invoked\" + songList);\n    // addFlashcardToQuiz(flashcard);\n    // Quiz.reloadQuiz(createQuiz(flashcard, 1));\n    // if (!songList.includes(val.id)) {songList.push(val.id)}\n    // else {songList.pop(val.id) }\n    // Quiz.items = songList;\n    // console.log(val);\n    // return (<p>HELP</p>);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Practice the Tropes!\")), /*#__PURE__*/React.createElement(AllTropesBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Quiz Yourself\", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SimpleModal, {\n    flashcards: checked,\n    level: false,\n    name: \"Level 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SimpleModal, {\n    flashcards: checked,\n    level: true,\n    name: \"Level 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Press any trope below to hear the recording and view transliteration\"), /*#__PURE__*/React.createElement(FlashcardList, {\n    callBack1: callBack1,\n    callBack4: callBack4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Ropes_8.js"],"names":["React","FlashcardList","Samples","SimpleModal","Grid","AllTropesBox","makeStyles","createStyles","useStyles","root","flexGrow","container","padding","textAlign","songList","Ropes","classes","useState","checked","setChecked","callBack4","val","console","log","callBack1","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CACA;;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACIC,UADJ,EAEIC,YAFJ,QAGS,0BAHT;AAKA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AAAA,SAC3BC,YAAY,CAAC;AACXE,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KADK;AAIXC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,SAAS,EAAE;AAFF;AAJA,GAAD,CADe;AAAA,CAAD,CAA5B,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GAAGZ,OAAf;AAEA,eAAe,SAASa,KAAT,GAAmB;AAE9B,MAAMC,OAAO,GAAGR,SAAS,EAAzB,CAF8B,CAK9B;AACA;AAGA;;AAT8B,wBAUAR,KAAK,CAACiB,QAAN,CAAe;AAACH,IAAAA;AAAD,GAAf,CAVA;AAAA;AAAA,MAUvBI,OAVuB;AAAA,MAUdC,UAVc;;AAY9B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAY;AAAA;;AAAA,sCAARC,GAAQ;AAARA,MAAAA,GAAQ;AAAA;;AAC5B,gBAAAC,OAAO,EAACC,GAAR,kBAAY,kCAAkCF,GAA9C,SAAsDA,GAAtD;AACD,GAFD;;AAIA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAY;AAAA,uCAARH,GAAQ;AAARA,MAAAA,GAAQ;AAAA;;AAC5B;AACAP,IAAAA,QAAQ,qBAAOO,GAAP,CAAR;AACAF,IAAAA,UAAU,MAAV,SAAcE,GAAd,EAH4B,CAI5B;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD;;AAiBA,sBAEI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACP,IAAxB;AAA8B,IAAA,KAAK,EAAE;AAAEgB,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAFJ,eAOI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAMM,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAA6C,IAAA,UAAU,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAIP,OAA3B;AAAoC,IAAA,KAAK,EAAI,KAA7C;AAAoD,IAAA,IAAI,EAAG,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAIA,OAA3B;AAAoC,IAAA,KAAK,EAAI,IAA7C;AAAmD,IAAA,IAAI,EAAG,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CANN,CAVJ,eA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EA5BA,eAgCA,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEM,SAA1B;AAAqC,IAAA,SAAS,EAAEJ,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCA,eAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCA,CAFJ;AA4CH","sourcesContent":["import React from 'react'; \nimport FlashcardList from \"./FlashcardList_8\";\n// import {allTropes, Samples} from './Tropes3';\nimport {Samples} from './Tropes3';\n\nimport SimpleModal from \"./SimpleModal_8\";\nimport Grid from '@material-ui/core/Grid';\nimport AllTropesBox from \"./AllTropesBox\"\n\nimport {\n    makeStyles,\n    createStyles,\n  } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n  })\n);\n\n\n// function prePopulateItems(){\n//   let items = new Map();\n//   Samples.forEach(element => {\n//     items.set(element.id, element);\n//   });\n//   return items;\n// }\n// let songList = prePopulateItems();\n\nlet songList = Samples;\n\nexport default function Ropes ( ) {\n\n    const classes = useStyles();\n\n\n    // let songList = [];\n    // let songList = prePopulateItems(Samples);\n\n\n    // let songList = {...Samples};\n    const [checked, setChecked] = React.useState({songList});\n    \n    const callBack4 = (...val) => {\n      console.log(\"in Ropes callback4 starting w\" + val, ...val);\n    }\n\n    const callBack1 = (...val) => {\n      // console.log(\"in Ropes callback1 starting w\" + val, ...val);\n      songList = {...val};\n      setChecked(...val);\n      // console.log(\"in Ropes callback1 invoked\", songList);\n\n      // console.log(\"in Ropes callback1 invoked\" + songList);\n\n      // addFlashcardToQuiz(flashcard);\n      // Quiz.reloadQuiz(createQuiz(flashcard, 1));\n      // if (!songList.includes(val.id)) {songList.push(val.id)}\n      // else {songList.pop(val.id) }\n      // Quiz.items = songList;\n      // console.log(val);\n      // return (<p>HELP</p>);\n    };\n    \n    return (\n\n        <div className={classes.root} style={{ color: 'white' }}>\n\n            <div > \n              <h1>Practice the Tropes!</h1>\n            </div>\n            {/* <frontpage> */}\n\n            <AllTropesBox/>\n            {/* </frontpage>  */}\n\n            <h5>Quiz Yourself\n              {/* <p>HERE {{Samples}.length}</p> */}\n                  {/* <p>{{songList}.map(i => {\n                    return (<p>{i.id}</p>) })}\n                  </p> */}\n\n                  <Grid container spacing={2} justify=\"center\" alignItems=\"center\"> \n                    <Grid item  >\n                      \n                      <SimpleModal flashcards = {checked} level = {false} name = 'Level 1'></SimpleModal>\n                    </Grid>\n                    <Grid item  >\n                      <SimpleModal flashcards = {checked} level = {true} name = 'Level 2'></SimpleModal>\n                    </Grid>\n                  </Grid>\n            </h5> \n\n\n        <h2>\n        Press any trope below to hear the recording and view transliteration\n        </h2>\n\n        <FlashcardList callBack1={callBack1} callBack4={callBack4}/>\n\n        <br/>\n        \n\n\n        </div>\n\n    );\n    \n}"]},"metadata":{},"sourceType":"module"}