{"ast":null,"code":"import _toConsumableArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/ConsecutiveSnackbars.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    close: {\n      padding: theme.spacing(0.5)\n    }\n  };\n});\nexport default function ConsecutiveSnackbars(_ref) {\n  var props = Object.assign({}, _ref);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      snackPack = _React$useState2[0],\n      setSnackPack = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(undefined),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      messageInfo = _React$useState6[0],\n      setMessageInfo = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo(_objectSpread({}, snackPack[0]));\n      setSnackPack(function (prev) {\n        return prev.slice(1);\n      });\n      setOpen(true);\n    } else if (snackPack.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [snackPack, messageInfo, open]);\n\n  var handleClick = function handleClick(message) {\n    return function () {\n      setSnackPack(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          message,\n          key: new Date().getTime()\n        }]);\n      });\n    };\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  var handleExited = function handleExited() {\n    setMessageInfo(undefined);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick(props.msg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Show message A\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick('lol'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Show message B\"), /*#__PURE__*/React.createElement(Snackbar, {\n    key: messageInfo ? messageInfo.key : undefined,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    onExited: handleExited,\n    message: messageInfo ? messageInfo.message : undefined,\n    action: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/ConsecutiveSnackbars.js"],"names":["React","makeStyles","Button","Snackbar","IconButton","CloseIcon","useStyles","theme","close","padding","spacing","ConsecutiveSnackbars","props","useState","snackPack","setSnackPack","open","setOpen","undefined","messageInfo","setMessageInfo","useEffect","length","prev","slice","handleClick","message","key","Date","getTime","handleClose","event","reason","handleExited","classes","msg","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nexport default function ConsecutiveSnackbars( { ...props}) {\n  const [snackPack, setSnackPack] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setOpen(true);\n    } else if (snackPack.length && messageInfo && open) {\n      // Close an active snack when a new one is added\n      setOpen(false);\n    }\n  }, [snackPack, messageInfo, open]);\n\n  const handleClick = (message) => () => {\n    setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <Button onClick={handleClick(props.msg)}>Show message A</Button>\n      <Button onClick={handleClick('lol')}>Show message B</Button>\n      <Snackbar\n        key={messageInfo ? messageInfo.key : undefined}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        onExited={handleExited}\n        message={messageInfo ? messageInfo.message : undefined}\n        action={\n          <React.Fragment>\n            \n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}