{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Flashcard_8.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: 'brown',\n    color: 'white'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    // padding: '5% 10%',\n    padding: '5%',\n    // margin: 'auto',\n    border: '4px solid green',\n    color: 'white',\n    // maxHeight: '%50',\n    backgroundColor: 'brown'\n  },\n  image: {\n    // width: 100,\n    height: 100\n  },\n  img: {\n    margin: 'auto',\n    // display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\nexport default function Flashcard(_ref) {\n  let props = Object.assign({}, _ref);\n  const classes = useStyles();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1]; // const [checked, setChecked] = React.useState(props.state);\n\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        flip = _useState2[0],\n        setFlip = _useState2[1];\n\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n\n  const song = new Audio(props.flashcard.sound);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    loading: \"lazy\",\n    src: props.flashcard.image,\n    onClick: () => {\n      playSound(song);\n    },\n    onMouseOver: () => {\n      setFlip(!flip);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      playSound(song);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"fl\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, flip ? props.flashcard.eng : props.flashcard.heb, \" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Flashcard_8.js"],"names":["React","useState","makeStyles","Grid","Paper","ButtonBase","Checkbox","useStyles","theme","root","color","paper","padding","border","backgroundColor","image","height","img","margin","maxWidth","maxHeight","Flashcard","props","classes","checked","setChecked","handleChange","event","target","callBack2","flashcard","id","console","log","flip","setFlip","playSound","audioFile","play","song","Audio","sound","cursor","eng","heb"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: 'brown',\n    color: 'white',\n\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    // padding: '5% 10%',\n    padding: '5%',\n    // margin: 'auto',\n    border: '4px solid green',\n    color: 'white',\n\n\n    // maxHeight: '%50',\n    backgroundColor: 'brown',\n  },\n  image: {\n    // width: 100,\n    height: 100,\n  },\n  img: {\n    margin: 'auto',\n    // display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Flashcard( {...props}) {\n    const classes = useStyles();\n      \n    const [checked, setChecked] = React.useState(true);\n    // const [checked, setChecked] = React.useState(props.state);\n  \n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  const [flip, setFlip] = useState(false);\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n  const song =  new Audio(props.flashcard.sound)\n\n\n  return (\n    \n    <div className={classes.root}>\n      <Paper className={classes.paper} >\n        <Grid container spacing={2}>\n          {/* <Grid item> */}\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" loading=\"lazy\" src={props.flashcard.image}  onClick={() => {playSound(song) }}  onMouseOver={() => {setFlip(!flip)}}/>\n            </ButtonBase>\n          {/* </Grid> */}\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item style={{ cursor: 'pointer' }} onClick = {() => {playSound(song)}} >\n                    <fl>{flip ? props.flashcard.eng : props.flashcard.heb} </fl> \n                \n              </Grid>\n\n            </Grid>\n            <Grid item>\n              {/* <Typography variant=\"subtitle1\"> */}\n              <Checkbox checked={checked} onChange={handleChange}/>\n              {/* </Typography> */}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}