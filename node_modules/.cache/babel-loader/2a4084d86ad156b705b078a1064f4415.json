{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _readOnlyError from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/QuizShapes_2.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport { Samples } from './Tropes'; // import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider'; //   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\nfunction shuffleTropes(items, num) {\n  //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n  var nums = [];\n  items.forEach(function (element) {\n    if (element.checked) {\n      nums.push(element);\n    }\n  });\n  var ranNums = [];\n  var i = nums.length;\n  var j = 0;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    ranNums.push(nums[j]);\n    nums.splice(j, 1);\n  }\n\n  return ranNums.slice(0, num);\n}\n\nfunction createQuiz(items, num) {\n  var order = shuffleTropes(items, num);\n  return order;\n}\n\nexport default function QuizShapes(_ref) {\n  var _this = this;\n\n  var props = Object.assign({}, _ref);\n  var audio = new Audio();\n  var oldTropes = props.flashcards;\n  var items = [];\n  var arrayLength = oldTropes.length;\n\n  for (var x = 0; x < arrayLength; x++) {\n    if (oldTropes[x].checked === 1) {\n      items.push(oldTropes[x]);\n    }\n  }\n\n  if (oldTropes.length === undefined) {\n    items = Samples;\n  } // let fast = 1;\n  // const speeds = [.5, 1, 1.5, 2, 2.5];\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      flag = _useState2[0],\n      setFlag = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trope = _useState4[0],\n      setTrope = _useState4[1]; // const [speed, setSpeed] = useState(1);\n  // const handleSpeed = (val) => {\n  //     // setSpeed(speed => speed = val);\n  //     setSpeed(val);\n  //   }\n  // let i = items.length;\n\n\n  var i = -1;\n  var myflag = 0; // var speed = 1;\n  // function getSpeed(){\n  //     return speed;\n  // }\n  // const [count, setCount] = useState(0);\n  // const [yesQuiz, setQuizTrue] = useState(0);\n\n  function playNext(next_trope) {\n    // if (!myflag) printc(\"JACKSA\");\n    // var i = trope;\n    // --i;\n    // if (flag){\n    //     console.log()\n    // }\n    // ++i;\n    // if (i  > -1){\n    if (!flag) {\n      // if (trope + 1 < quiz.length){\n      //     // audio.preload = \"auto\";\n      //     // audio.volume = 0.3;\n      //     // console.log(\"nextSongSpeed\", getSpeed());\n      audio.src = quiz[next_trope].sound;\n      setTrope(next_trope);\n      audio.play(); // setTrope((trope+1) % quiz.length);\n      // audio.playbackRate = speed;\n      // else{ \n      //     setFlag(!flag);\n      //     // setTrope((trope+1) % quiz.length);\n      // }\n      // setTrope(trope+1);\n    }\n  }\n\n  audio.addEventListener('ended', function () {\n    // if (!myflag) {\n    //     console.log(\"yep\");\n    trope = (_readOnlyError(\"trope\"), setTrope((trope + 1) % quiz.length));\n    playNext(trope); //     }\n    // else {\n    //     console.log(\"nope\");\n    //     audio.pause();\n    // }\n  }, false); // audio.addEventListener('pause', function () {\n  //     if (!myflag) {\n  //         console.log(\"paused\");\n  //         playNext();\n  //         }\n  //     else {\n  //         audio.pause();\n  //     }\n  // }, false);\n\n  audio.addEventListener('timeupdate', function () {\n    // if (!myflag) {\n    //     playNext();\n    //     }\n    // else {\n    //     audio.pause();\n    // }\n    console.log(audio.currentTime.toFixed(1));\n  }, false); // let items = flashcards;\n\n  var _useState5 = useState(createQuiz(items, Math.min(Math.floor(items.length / 2), 8))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quiz = _useState6[0],\n      reloadQuiz = _useState6[1];\n\n  var _React$useState = React.useState(4),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // playFromSong\n\n\n  var playFromSong = function playFromSong(index) {\n    setFlag(true); // enableHighlight(true);\n\n    setTrope(index); // audio.src = \"\";\n    // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n    // i = index;\n    // setTrope(i);\n    // console.log('trope now ', trope);\n    // playNext();\n  }; //   const song =  new Audio(flashcard.sound)\n  // function printc(calledBy){\n  //     console.log(calledBy, \"i= \", i, \"myflag= \", myflag);\n  //     // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n  // }\n\n\n  function handlePlay() {\n    // myflag = 0;\n    // setTrope(quiz.length);\n    // i = quiz.length;\n    // setTrope(0);\n    // printc(\"handlePlay b4 PlayNext\");\n    // playNext();\n    setFlag(true);\n    playNext(trope); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    // myflag = 1;\n    // // audio.pause();\n    // audio.pause()\n    // audio.currentTime = 0\n    // audio = null;\n    setFlag(false); // i = 0;\n    // setTrope(0);\n  } // function handlePlay(){\n  //     myflag = 0;\n  //     // setTrope(quiz.length);\n  //     // i = quiz.length;\n  //     setTrope(0);\n  //     // printc(\"handlePlay b4 PlayNext\");\n  // playNext();\n  //     setFlag(true); \n  //     // makeSongList(quiz);\n  // }\n  // function handlePause(){\n  //     myflag = 1;\n  //     // audio.pause();\n  //     audio.pause()\n  //     audio.currentTime = 0\n  //     audio = null;\n  //     // printc(\"handlePause after setFlag\");\n  //     setFlag(false);\n  //     i = 0;\n  //     setTrope(0);\n  // }\n  // const enableHighlight = (e) => {\n  //                 console.log(\"do\");\n  // audio.addEventListener('timeupdate', function () {\n  // if (!myflag) {\n  //     playNext();\n  //     }\n  // else {\n  //     audio.pause();\n  // }\n  // console.log(audio.currentTime.toFixed(1));\n  // }, false);\n  // }\n  // function killAudio(){\n  //     audio.pause();\n  //     audio = null;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 10\n    }\n  }, \"Quiz Yourself!\", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: function onClick() {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: Math.min(Math.floor((items.length + 1) / 2), 4),\n    step: 1,\n    min: 0,\n    max: Math.min(items.length, 8),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  })), !flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        return handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: function onClick() {\n        return handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, quiz.map(function (songName, index) {\n    return trope === index ?\n    /*#__PURE__*/\n    // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'opacity': '.5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'border': '0px solid black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 14\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/QuizShapes_2.js"],"names":["React","useState","Button","PauseCircleFilled","PlayCircleFilled","Samples","CachedIcon","Slider","shuffleTropes","items","num","nums","forEach","element","checked","push","ranNums","i","length","j","Math","floor","random","splice","slice","createQuiz","order","QuizShapes","props","audio","Audio","oldTropes","flashcards","arrayLength","x","undefined","flag","setFlag","trope","setTrope","myflag","playNext","next_trope","src","quiz","sound","play","addEventListener","console","log","currentTime","toFixed","min","reloadQuiz","value","setValue","handleChange","event","newValue","playFromSong","index","handlePlay","handlePause","map","songName","image"],"mappings":"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","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState} from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport {Samples} from './Tropes';\n\n// import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n//   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\n  function shuffleTropes(items, num){ //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n    let nums = [];\n    items.forEach(element => {\n        if (element.checked){\n            nums.push(element);\n            }\n        });\n\n    let ranNums = [];\n    let i = nums.length;\n    let j = 0;\n\n    while (i--) {\n        j = Math.floor(Math.random() * (i+1));\n        ranNums.push(nums[j]);\n        nums.splice(j,1);\n    }\n    return ranNums.slice(0,num);\n\n  }\n\n\n  function createQuiz(items, num) {\n    let order = shuffleTropes(items, num);\n    return order;\n  }\n  \nexport default function QuizShapes( { ...props} ) {\n\n    let audio = new Audio();\n    let oldTropes = props.flashcards;\n    let items = [];\n    var arrayLength = oldTropes.length;\n    for (var x = 0; x < arrayLength; x++) {\n        if (oldTropes[x].checked === 1){\n            items.push(oldTropes[x]);\n        }\n    }\n    if (oldTropes.length === undefined){\n        items = Samples;\n    }\n\n    // let fast = 1;\n    // const speeds = [.5, 1, 1.5, 2, 2.5];\n    const [flag, setFlag] = useState(false);\n    const [trope, setTrope] = useState(0);\n\n    // const [speed, setSpeed] = useState(1);\n\n    // const handleSpeed = (val) => {\n    //     // setSpeed(speed => speed = val);\n    //     setSpeed(val);\n    //   }\n  \n      \n    // let i = items.length;\n    let i = -1;\n    let myflag = 0;\n    // var speed = 1;\n\n    // function getSpeed(){\n    //     return speed;\n    // }\n\n    // const [count, setCount] = useState(0);\n    // const [yesQuiz, setQuizTrue] = useState(0);\n\n\n\n    function playNext (next_trope){\n        // if (!myflag) printc(\"JACKSA\");\n        // var i = trope;\n        // --i;\n        \n        // if (flag){\n        //     console.log()\n        // }\n        // ++i;\n        // if (i  > -1){\n        if (!flag){\n            // if (trope + 1 < quiz.length){\n            //     // audio.preload = \"auto\";\n            //     // audio.volume = 0.3;\n            //     // console.log(\"nextSongSpeed\", getSpeed());\n                audio.src = quiz[next_trope].sound;\n                setTrope(next_trope);\n                audio.play();\n\n                // setTrope((trope+1) % quiz.length);\n                // audio.playbackRate = speed;\n            \n            // else{ \n            //     setFlag(!flag);\n            //     // setTrope((trope+1) % quiz.length);\n            // }\n            // setTrope(trope+1);\n\n        }\n        \n    }\n    audio.addEventListener('ended', function () {\n        // if (!myflag) {\n        //     console.log(\"yep\");\n            trope = setTrope((trope+1) % quiz.length);\n            playNext(trope);\n        //     }\n        // else {\n        //     console.log(\"nope\");\n\n        //     audio.pause();\n        // }\n    }, false);\n\n    // audio.addEventListener('pause', function () {\n    //     if (!myflag) {\n    //         console.log(\"paused\");\n\n    //         playNext();\n    //         }\n    //     else {\n    //         audio.pause();\n    //     }\n    // }, false);\n    audio.addEventListener('timeupdate', function () {\n        // if (!myflag) {\n        //     playNext();\n        //     }\n        // else {\n        //     audio.pause();\n        // }\n        console.log(audio.currentTime.toFixed(1));\n\n    }, false);\n    // let items = flashcards;\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, Math.min(Math.floor(items.length/2),8)));\n    const [value, setValue] = React.useState(4);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // playFromSong\n    const playFromSong = index => {\n        setFlag(true); \n        // enableHighlight(true);\n        setTrope(index);\n\n        // audio.src = \"\";\n        // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n        // i = index;\n        // setTrope(i);\n        // console.log('trope now ', trope);\n        // playNext();\n    };\n    //   const song =  new Audio(flashcard.sound)\n\n    // function printc(calledBy){\n    //     console.log(calledBy, \"i= \", i, \"myflag= \", myflag);\n    //     // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n    // }\n\n    function handlePlay(){\n        // myflag = 0;\n        // setTrope(quiz.length);\n        // i = quiz.length;\n        // setTrope(0);\n\n        // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n        setFlag(true); \n        playNext(trope);\n\n\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        // myflag = 1;\n        // // audio.pause();\n        // audio.pause()\n        // audio.currentTime = 0\n        // audio = null;\n\n        setFlag(false);\n        // i = 0;\n        // setTrope(0);\n\n\n\n    }\n\n    // function handlePlay(){\n    //     myflag = 0;\n    //     // setTrope(quiz.length);\n    //     // i = quiz.length;\n    //     setTrope(0);\n\n    //     // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n    //     setFlag(true); \n\n    //     // makeSongList(quiz);\n    // }\n\n    // function handlePause(){\n    //     myflag = 1;\n    //     // audio.pause();\n    //     audio.pause()\n    //     audio.currentTime = 0\n    //     audio = null;\n\n    //     // printc(\"handlePause after setFlag\");\n    //     setFlag(false);\n    //     i = 0;\n    //     setTrope(0);\n\n\n\n    // }\n    // const enableHighlight = (e) => {\n    //                 console.log(\"do\");\n\n        // audio.addEventListener('timeupdate', function () {\n            // if (!myflag) {\n            //     playNext();\n            //     }\n            // else {\n            //     audio.pause();\n            // }\n            // console.log(audio.currentTime.toFixed(1));\n\n        // }, false);\n\n    // }\n\n    // function killAudio(){\n    //     audio.pause();\n    //     audio = null;\n    // }\n\n\n    return (\n        \n         <quiz>Quiz Yourself!\n            <h5> \n\n            <div className=\"controls\" >\n            \n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));}}/>}>\n                </Button> \n\n                {/* <Button variant=\"contained\" color=\"primary\"\n                    startIcon = {<DoubleArrowIcon onChange={() => { handleSpeed(2) ;}} />}>\n                        {speed}\n                </Button> \n */}\n\n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={Math.min(Math.floor((items.length+1)/2),4)}\n                            step={1}  min={0} max={Math.min(items.length, 8)} valueLabelDisplay=\"auto\" />\n                            </Button>\n\n                    \n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {!flag ?  <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => handlePlay()}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => handlePause()}/>}>\n                    </Button>\n                }\n            </div>\n\n            </h5>\n\n            <p>\n        {quiz.map((songName, index)=> {return ( \n            (trope === index) ?\n\n            // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            <img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            :<img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n\n           )})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}