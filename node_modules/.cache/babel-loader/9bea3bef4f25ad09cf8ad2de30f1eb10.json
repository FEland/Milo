{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/FlashcardList_8.js\";\nimport React from 'react';\nimport Flashcard from \"./Flashcard_8\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Samples } from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\nimport Hidden from '@material-ui/core/Hidden';\nimport Tooltip from '@material-ui/core/Tooltip'; // import Slider from \"@material-ui/core/Slider\";\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\"\n    } // demo: {\n    //   width: 100,\n    // }\n\n  };\n}); //   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n\nvar songList = Samples;\nexport default function FlashcardList(_ref) {\n  var _this = this;\n\n  var callBack1 = _ref.callBack1;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flip = _React$useState2[0],\n      setFlip = _React$useState2[1];\n\n  var openAudio = new Audio(open);\n  var closeAudio = new Audio(close);\n\n  var playSound = function playSound(audioFile) {\n    audioFile.play();\n  };\n\n  var handleChange = function handleChange(event) {\n    if (event.target.flip) {\n      playSound(closeAudio);\n    } else {\n      playSound(openAudio);\n    }\n\n    setFlip(!flip); // setState({ ...state, [event.target.name]: event.target.checked });\n\n    var arrayLength = songList.length;\n\n    for (var i = 0; i < arrayLength; i++) {\n      songList[i].checked ^= true;\n    }\n\n    callBack1(songList);\n  };\n\n  var callBack2 = function callBack2(val) {\n    songList[val - 1].checked ^= true;\n    callBack1(songList);\n  }; //TODO Volume\n\n\n  var volume = .5; //delete me later and uncomment below\n  // const [volume, setVolume] = React.useState(.5);\n  //   const handleVolumeChange = (event, newValue) => {\n  //     setVolume(newValue);\n  //     // console.log(\"vol in list is \", volume);\n  // };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Select Tropes to quiz yourself on\",\n    arrow: true,\n    placement: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: flip,\n    onChange: handleChange,\n    name: \"toggle\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, songList.map(function (flash) {\n    return (\n      /*#__PURE__*/\n      // <Hidden smUp>\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Hidden, {\n        smDown: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Flashcard, {\n        flashcard: flash,\n        key: flash.id,\n        callBack2: callBack2,\n        flip: flip,\n        volume: volume,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, \" \"))), /*#__PURE__*/React.createElement(Hidden, {\n        mdUp: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Flashcard, {\n        flashcard: flash,\n        key: flash.id,\n        callBack2: callBack2,\n        flip: flip,\n        volume: volume,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, \" \"))))\n    );\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/FlashcardList_8.js"],"names":["React","Flashcard","makeStyles","Grid","Samples","Switch","open","close","Hidden","Tooltip","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","songList","FlashcardList","callBack1","useState","flip","setFlip","openAudio","Audio","closeAudio","playSound","audioFile","play","handleChange","event","target","arrayLength","length","i","checked","callBack2","val","volume","classes","map","flash","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from \"./Flashcard_8\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Samples} from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\nimport Hidden from '@material-ui/core/Hidden';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// import Slider from \"@material-ui/core/Slider\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n    },\n    // demo: {\n    //   width: 100,\n    // }\n  }));\n\n//   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n\n  let songList = Samples;\n\nexport default function FlashcardList( { callBack1} ) {\n\n\n  const [flip, setFlip] = React.useState(false);\n\n  const openAudio = new Audio(open);\n  const closeAudio = new Audio(close);\n\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n\n\n  const handleChange = (event) => {\n\n    if (event.target.flip) {\n      playSound(closeAudio);  \n    } else {\n      playSound(openAudio);\n    }\n\n    setFlip(!flip);\n    // setState({ ...state, [event.target.name]: event.target.checked });\n    var arrayLength = songList.length;\n    for (var i = 0; i < arrayLength; i++) {\n        songList[i].checked ^= true;\n    }\n    callBack1(songList);\n  };\n\n  \n\n  const callBack2 = (val) => {\n    \n    songList[val-1].checked ^= true;\n\n    callBack1(songList);\n\n  };\n  //TODO Volume\n    let volume = .5; //delete me later and uncomment below\n  // const [volume, setVolume] = React.useState(.5);\n//   const handleVolumeChange = (event, newValue) => {\n//     setVolume(newValue);\n//     // console.log(\"vol in list is \", volume);\n// };\n\n    const classes = useStyles();\n    \n\n    return (\n\n        \n    <div>\n\n\n         <div className={classes.root}>\n        {/* TODO volume control */}\n         {/* <Grid container spacing={2} \n                justify=\"center\"\n                  alignItems=\"baseline\"> \n         <Grid item xs={2} >\n\n            <Switch\n            checked={flip}\n            onChange={handleChange}\n            name=\"toggle\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n                  </Grid> \n                  <Grid item xs={2} >\n\n                  <Slider  volume={volume} onChange={handleVolumeChange} \n                    defaultValue={.5} step={.1} min={0} max={1} />\n          </Grid>      \n          </Grid> */}\n\n      <Tooltip title=\"Select Tropes to quiz yourself on\" arrow placement=\"center\">\n            <Switch\n            checked={flip}\n            onChange={handleChange}\n            name=\"toggle\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </Tooltip>\n\n\n\n      {/* style= { !state.toggle ? { 'font-family': 'Times New Roman'} : { }} > */}\n      <Grid container spacing={2} direction='row-reverse' > \n      {songList.map(flash => {\n                  return (\n                    // <Hidden smUp>\n                    <>\n                    <Hidden smDown>\n\n                    <Grid item xs={3} >\n                      \n                      <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} flip={flip} volume={volume}> </Flashcard>\n                    </Grid>\n                  </Hidden>\n                  <Hidden mdUp>\n\n                  <Grid item xs={4} >\n                    \n                    <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} flip={flip} volume={volume}> </Flashcard>\n                  </Grid>\n                </Hidden>\n                  </>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}