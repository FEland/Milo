{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Quiz_8.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport { Samples } from './Tropes'; // import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n// import SpeedDial from '@material-ui/lab/SpeedDial';\n// import SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\n// import SpeedDialAction from '@material-ui/lab/SpeedDialAction';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider'; //   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\nfunction shuffleTropes(items, num) {\n  //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n  var nums = [];\n  items.forEach(function (element) {\n    if (element.checked) {\n      nums.push(element);\n    }\n  });\n  var ranNums = [];\n  var i = nums.length;\n  var j = 0;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    ranNums.push(nums[j]);\n    nums.splice(j, 1);\n  }\n\n  return ranNums.slice(0, num);\n}\n\nfunction createQuiz(items, num) {\n  var order = shuffleTropes(items, num);\n  return order;\n}\n\nexport default function Quiz(_ref) {\n  var _this = this;\n\n  var props = Object.assign({}, _ref);\n  var audio = new Audio();\n  var oldTropes = props.flashcards;\n  var items = [];\n  var arrayLength = oldTropes.length;\n\n  for (var x = 0; x < arrayLength; x++) {\n    if (oldTropes[x].checked === 1) {\n      items.push(oldTropes[x]);\n    }\n  }\n\n  if (oldTropes.length === undefined) {\n    items = Samples;\n  }\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      flag = _useState2[0],\n      setFlag = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trope = _useState4[0],\n      setTrope = _useState4[1]; // const [speed, setSpeed] = useState(1);\n  // const handleSpeed = (val) => {\n  //     setSpeed(speed => val);\n  //   }\n\n\n  var i = -1;\n  var myflag = 0;\n  var speed = 1; // function getSpeed(){\n  //     return speed;\n  // }\n  // const [count, setCount] = useState(0);\n  // playFromSong\n\n  var playFromSong = function playFromSong(index) {\n    // audio.src = \"\";\n    i = index;\n    setTrope(i);\n    playNext();\n  };\n\n  function playNext() {\n    // if (!myflag) printc(\"JACKSA\");\n    // var i = trope;\n    ++i;\n\n    if (i < quiz.length) {\n      // audio.preload = \"auto\";\n      // audio.volume = 0.3;\n      // console.log(\"nextSongSpeed\", getSpeed());\n      audio.src = quiz[i].sound;\n      audio.playbackRate = speed;\n      audio.play();\n    } else {\n      setFlag(1);\n      i = -1;\n    }\n\n    setTrope(i);\n  }\n\n  audio.addEventListener('ended', function () {\n    if (!myflag) {\n      playNext();\n    } else {\n      audio.pause();\n    }\n  }, false);\n\n  var _useState5 = useState(createQuiz(items, Math.min(Math.floor(items.length / 2), 8))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quiz = _useState6[0],\n      reloadQuiz = _useState6[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // function printc(calledBy){\n  //     console.log(calledBy, \"i= \", i, \"myflag= \", myflag);\n  //     // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n  // }\n\n\n  function handlePlay() {\n    myflag = 0;\n    setTrope(0); // printc(\"handlePlay b4 PlayNext\");\n\n    playNext();\n    setFlag(0); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    myflag = 1;\n    audio.pause(); // printc(\"handlePause after setFlag\");\n\n    setFlag(1);\n    i = 0;\n    setTrope(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 10\n    }\n  }, \"Quiz Yourself!\", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: function onClick() {\n        reloadQuiz(createQuiz(items, Math.min(Math.floor(items.length / 2), value)));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: Math.min(Math.floor(items.length / 2), 4),\n    step: 1,\n    marks: true,\n    min: 1,\n    max: Math.min(items.length, 8),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  })), flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: function onClick() {\n        handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, quiz.map(function (songName, index) {\n    return /*#__PURE__*/React.createElement(\"i\", {\n      style: trope === index ? {\n        color: 'black',\n        dir: 'rtl'\n      } : {\n        color: 'yellow',\n        dir: 'rtl'\n      },\n      onClick: function onClick() {\n        return playFromSong(index - 1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 12\n      }\n    }, songName.heb);\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Quiz_8.js"],"names":["React","useState","Button","PauseCircleFilled","PlayCircleFilled","Samples","CachedIcon","Slider","shuffleTropes","items","num","nums","forEach","element","checked","push","ranNums","i","length","j","Math","floor","random","splice","slice","createQuiz","order","Quiz","props","audio","Audio","oldTropes","flashcards","arrayLength","x","undefined","flag","setFlag","trope","setTrope","myflag","speed","playFromSong","index","playNext","quiz","src","sound","playbackRate","play","addEventListener","pause","min","reloadQuiz","value","setValue","handleChange","event","newValue","handlePlay","handlePause","map","songName","color","dir","heb"],"mappings":"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","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState} from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport {Samples} from './Tropes';\n\n// import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\n// import SpeedDial from '@material-ui/lab/SpeedDial';\n// import SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\n// import SpeedDialAction from '@material-ui/lab/SpeedDialAction';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n//   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\n  function shuffleTropes(items, num){ //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n    let nums = [];\n    \n    items.forEach(element => {\n        if (element.checked){\n            nums.push(element);\n            }\n        });\n\n    let ranNums = [];\n    let i = nums.length;\n    let j = 0;\n\n    while (i--) {\n        j = Math.floor(Math.random() * (i+1));\n        ranNums.push(nums[j]);\n        nums.splice(j,1);\n    }\n    return ranNums.slice(0,num);\n\n  }\n\n\n  function createQuiz(items, num) {\n    let order = shuffleTropes(items, num);\n    return order;\n  \n  }\n\n\n  \nexport default function Quiz( { ...props} ) {\n\n    let audio = new Audio();\n    let oldTropes = props.flashcards;\n    let items = [];\n    var arrayLength = oldTropes.length;\n    for (var x = 0; x < arrayLength; x++) {\n        if (oldTropes[x].checked === 1){\n            items.push(oldTropes[x]);\n        }\n    }\n    if (oldTropes.length === undefined){\n        items = Samples;\n    }\n    \n    const [flag, setFlag] = useState(1);\n    const [trope, setTrope] = useState(0);\n\n    // const [speed, setSpeed] = useState(1);\n\n    // const handleSpeed = (val) => {\n    //     setSpeed(speed => val);\n    //   }\n  \n      \n    let i = -1;\n    let myflag = 0;\n    var speed = 1;\n\n    // function getSpeed(){\n    //     return speed;\n    // }\n\n    // const [count, setCount] = useState(0);\n\n    // playFromSong\n    const playFromSong = index => {\n        // audio.src = \"\";\n        i = index;\n        setTrope(i);\n        playNext();\n    };\n\n    function playNext (){\n        // if (!myflag) printc(\"JACKSA\");\n        // var i = trope;\n        ++i;\n        if (i < quiz.length){\n            // audio.preload = \"auto\";\n            // audio.volume = 0.3;\n            // console.log(\"nextSongSpeed\", getSpeed());\n            audio.src = quiz[i].sound;\n            audio.playbackRate = speed;\n            audio.play();\n        }\n        else{ \n            setFlag(1);\n            i = -1;\n        }\n        setTrope(i);\n\n\n    }\n    audio.addEventListener('ended', function () {\n        if (!myflag) {\n            playNext();\n            }\n        else {\n            audio.pause();\n        }\n    }, false);\n\n\n    const [quiz, reloadQuiz] = useState(createQuiz(items, Math.min(Math.floor(items.length/2),8)));\n    const [value, setValue] = React.useState();\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // function printc(calledBy){\n    //     console.log(calledBy, \"i= \", i, \"myflag= \", myflag);\n    //     // console.log(calledBy, \"i= \", i, \"myflag= \", myflag, \" trope=\", trope, \"/\", quiz.length, \" flag=\", flag);\n    // }\n\n    function handlePlay(){\n        myflag = 0;\n        setTrope(0);\n        // printc(\"handlePlay b4 PlayNext\");\n        playNext();\n        setFlag(0); \n\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        myflag = 1;\n        audio.pause();\n        // printc(\"handlePause after setFlag\");\n        setFlag(1);\n        i = 0;\n        setTrope(0);\n\n\n    }\n\n\n    return (\n         <quiz>Quiz Yourself!\n            <h5> \n            <div className=\"controls\">\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, Math.min(Math.floor(items.length/2),value)));}}/>}>\n                </Button> \n\n                {/* <Button variant=\"contained\" color=\"primary\"\n                    startIcon = {<DoubleArrowIcon onChange={() => { handleSpeed(value) ;}} />}>\n                        {speed}\n                </Button>  */}\n\n\n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={Math.min(Math.floor(items.length/2),4)}\n                            step={1} marks min={1} max={Math.min(items.length, 8)} valueLabelDisplay=\"auto\" />\n                </Button>\n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {flag ?  <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => {handlePlay()}}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => {handlePause()}}/>}>\n                    </Button>\n                }\n            </div>\n\n            </h5>\n\n        <p>\n        {quiz.map((songName, index)=> {return ( \n           <i style={(trope === index) ? {color: 'black', dir: 'rtl'} : {color: 'yellow', dir: 'rtl'}} onClick={() => playFromSong(index-1)} >{songName.heb}</i>)})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}