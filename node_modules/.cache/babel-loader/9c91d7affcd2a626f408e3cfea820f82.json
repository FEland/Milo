{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/FlashcardList_8.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative'\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n});\nexport default function CircularIntegration() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      success = _React$useState4[0],\n      setSuccess = _React$useState4[1];\n\n  var timer = React.useRef();\n  var buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleButtonClick = function handleButtonClick() {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(function () {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    \"aria-label\": \"save\",\n    color: \"primary\",\n    className: buttonClassname,\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 38\n    }\n  })), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 68,\n    className: classes.fabProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: buttonClassname,\n    disabled: loading,\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Accept terms\"), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/FlashcardList_8.js"],"names":["React","clsx","makeStyles","CircularProgress","green","Button","Fab","CheckIcon","SaveIcon","useStyles","theme","root","display","alignItems","wrapper","margin","spacing","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularIntegration","classes","useState","loading","setLoading","success","setSuccess","timer","useRef","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function CircularIntegration() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Fab\n          aria-label=\"save\"\n          color=\"primary\"\n          className={buttonClassname}\n          onClick={handleButtonClick}\n        >\n          {success ? <CheckIcon /> : <SaveIcon />}\n        </Fab>\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={buttonClassname}\n          disabled={loading}\n          onClick={handleButtonClick}\n        >\n          Accept terms\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}