{"ast":null,"code":"import _objectWithoutProperties from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Slides.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nconst styles = {};\n\nfunction Slide(props) {\n  const classes = props.classes,\n        media = props.media,\n        mediaBackgroundStyle = props.mediaBackgroundStyle,\n        subtitle = props.subtitle,\n        title = props.title,\n        mobile = props.mobile,\n        landscape = props.landscape,\n        other = _objectWithoutProperties(props, [\"classes\", \"media\", \"mediaBackgroundStyle\", \"subtitle\", \"title\", \"mobile\", \"landscape\"]);\n\n  const mobileLandscape = mobile && landscape;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classNames(classes.root, {\n      [classes.rootMobile]: mobile,\n      [classes.rootMobileLandscape]: mobileLandscape\n    })\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.mediaBackground, {\n      [classes.mediaBackgroundMobile]: mobile,\n      [classes.mediaBackgroundMobileLandscape]: mobileLandscape\n    }),\n    style: mediaBackgroundStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.media, {\n      [classes.mediaMobile]: mobile,\n      [classes.mediaMobileLandscape]: mobileLandscape\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, media)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.text, {\n      [classes.textMobile]: mobile,\n      [classes.textMobileLandscape]: mobileLandscape\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, subtitle)));\n}\n\nSlide.propTypes = {\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * Object to display in the upper half.\n   */\n  media: PropTypes.node.isRequired,\n\n  /**\n   * Override the inline-styles of the media container.\n   */\n  mediaBackgroundStyle: PropTypes.object,\n\n  /**\n   * Subtitle of the slide.\n   */\n  subtitle: PropTypes.string.isRequired,\n\n  /**\n   * Title of the slide.\n   */\n  title: PropTypes.string.isRequired,\n\n  /**\n   * If `true`, the screen width and height is filled.\n   * @ignore\n   */\n  mobile: PropTypes.bool,\n\n  /**\n   * If `true`, slide will adjust content for wide mobile screens.\n   * @ignore\n   */\n  landscape: PropTypes.bool\n};\nexport default withStyles(styles)(Slide);","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Slides.js"],"names":["React","PropTypes","Typography","blue","withStyles","classNames","styles","Slide","props","classes","media","mediaBackgroundStyle","subtitle","title","mobile","landscape","other","mobileLandscape","root","rootMobile","rootMobileLandscape","mediaBackground","mediaBackgroundMobile","mediaBackgroundMobileLandscape","mediaMobile","mediaMobileLandscape","text","textMobile","textMobileLandscape","propTypes","object","isRequired","node","string","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport blue from '@material-ui/core/colors/blue'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport classNames from 'classnames'\n\nconst styles = {\n  \n}\n\nfunction Slide (props) {\n  const {\n    classes,\n    media,\n    mediaBackgroundStyle,\n    subtitle,\n    title,\n    mobile,\n    landscape,\n    ...other\n  } = props\n\n  const mobileLandscape = mobile && landscape\n\n  return (\n    <div\n      className={classNames(classes.root, {\n        [classes.rootMobile]: mobile,\n        [classes.rootMobileLandscape]: mobileLandscape\n      })}\n      {...other}\n    >\n      <div\n        className={classNames(classes.mediaBackground, {\n          [classes.mediaBackgroundMobile]: mobile,\n          [classes.mediaBackgroundMobileLandscape]: mobileLandscape\n        })}\n        style={mediaBackgroundStyle}\n      >\n        <div className={classNames(classes.media, {\n          [classes.mediaMobile]: mobile,\n          [classes.mediaMobileLandscape]: mobileLandscape\n        })}>\n          {media}\n        </div>\n      </div>\n      <div\n        className={classNames(classes.text, {\n          [classes.textMobile]: mobile,\n          [classes.textMobileLandscape]: mobileLandscape\n        })}\n      >\n        <Typography className={classes.title}>\n          {title}\n        </Typography>\n        <Typography className={classes.subtitle}>\n          {subtitle}\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nSlide.propTypes = {\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * Object to display in the upper half.\n   */\n  media: PropTypes.node.isRequired,\n  /**\n   * Override the inline-styles of the media container.\n   */\n  mediaBackgroundStyle: PropTypes.object,\n  /**\n   * Subtitle of the slide.\n   */\n  subtitle: PropTypes.string.isRequired,\n  /**\n   * Title of the slide.\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * If `true`, the screen width and height is filled.\n   * @ignore\n   */\n  mobile: PropTypes.bool,\n  /**\n   * If `true`, slide will adjust content for wide mobile screens.\n   * @ignore\n   */\n  landscape: PropTypes.bool\n}\n\nexport default withStyles(styles)(Slide)"]},"metadata":{},"sourceType":"module"}