{"ast":null,"code":"import _objectSpread from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/AllTropesBox.js\";\nimport React from 'react';\nimport Flashcard from \"./Flashcard_8\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Samples } from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport Player from './Player_uno';\nimport ColorModal from './ColorModal';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      color: 'green'\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\"\n    },\n    paper: {\n      padding: theme.spacing(1),\n      border: '8px double',\n      color: 'white',\n      backgroundColor: 'brown'\n    }\n  };\n});\nvar songList = Samples;\nexport default function AllTropesBox(_ref) {\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _React$useState = React.useState({\n    // flip: false,\n    // volume: 0.5,\n    checked: false // color: '#b7bfbe'\n\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState('#b7bfbe'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      color = _React$useState4[0],\n      setColor = _React$useState4[1]; //   let color = 'white';\n\n\n  var callBack = function callBack() {\n    for (var _len = arguments.length, val = new Array(_len), _key = 0; _key < _len; _key++) {\n      val[_key] = arguments[_key];\n    }\n\n    setColor(val);\n  }; //   const [flip, setFlip] = React.useState(false);\n\n\n  var _React$useState5 = React.useState(.5),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      volume = _React$useState6[0],\n      setVolume = _React$useState6[1];\n\n  var audio = new Audio();\n  var classes = useStyles();\n\n  var playSound = function playSound(song) {\n    // new Audio(song).play();\n    console.log(volume);\n    audio.src = song;\n    audio.preload = \"metadata\";\n    audio.playbackRate = 1;\n    audio.volume = volume;\n    audio.controls = true;\n    audio.play();\n  };\n\n  var handleVolumeChange = function handleVolumeChange(event, newValue) {\n    setVolume(newValue); // setState({[state.volume]: newValue });\n\n    audio.volume = newValue; // document.getElementById(id).volume = volume;\n  };\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    })); // setFlip(!flip);\n    // setState(!state.flip);\n    // setState({ ...state, [state.flip]: !state.flip });\n    // if (event.target.flip) {\n    //     playSound(close);  \n    // } else {\n    //     playSound(open);\n    // }\n  }; // const player = document.getElementById('player');\n  // const handleSuccess = function(stream) {\n  //     if (window.URL) {\n  //     player.srcObject = stream;\n  //     } else {\n  //     player.src = stream;\n  //     }\n  // };\n  // navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n  //     .then(handleSuccess);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    label: \"Listen to the Tropes\",\n    title: \"Tropes / Ta'amei Mikrah\",\n    song: \"./sounds/allTropeSongs.mp3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VolumeDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    id: \"demo\",\n    volume: volume,\n    onChange: handleVolumeChange,\n    defaultValue: .5,\n    step: .1,\n    min: 0,\n    max: 1,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Follow in Transliteration\",\n    arrow: true,\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: state.checked,\n    onChange: handleChange,\n    name: \"checked\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Follow in Transliteration\",\n    arrow: true,\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: state.checked,\n    onChange: handleChange,\n    name: \"checked\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, songList.map(function (flash) {\n    return /*#__PURE__*/React.createElement(\"fl\", {\n      onClick: function onClick() {\n        playSound(flash.sound);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, !state.checked ? /*#__PURE__*/React.createElement(React.Fragment, null, flash.heb, \" \", '\\u00A0') : /*#__PURE__*/React.createElement(React.Fragment, null, flash.eng, \" \", '\\u00A0'));\n  })))))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/AllTropesBox.js"],"names":["React","Flashcard","makeStyles","Paper","Grid","Samples","Switch","open","close","Slider","VolumeDown","VolumeUp","Player","ColorModal","Checkbox","Tooltip","useStyles","theme","root","display","flexWrap","justifyContent","overflow","color","grid","width","height","direction","justify","alignItems","paper","padding","spacing","border","backgroundColor","songList","AllTropesBox","useState","checked","state","setState","setColor","callBack","val","volume","setVolume","audio","Audio","classes","playSound","song","console","log","src","preload","playbackRate","controls","play","handleVolumeChange","event","newValue","handleChange","target","name","map","flash","sound","heb","eng"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from \"./Flashcard_8\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Samples} from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Player from './Player_uno';\nimport ColorModal from './ColorModal';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      color: 'green',\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n    },\n    paper: {\n    padding: theme.spacing(1),\n    border: '8px double',\n    color: 'white',\n    backgroundColor: 'brown',\n    },\n  }));\n\n \n\n  let songList = Samples;\n\nexport default function AllTropesBox( {} ) {\n\n\n    const [state, setState] = React.useState({\n        // flip: false,\n        // volume: 0.5,\n        checked: false,\n        // color: '#b7bfbe'\n    });\n\n    const [color, setColor] = React.useState('#b7bfbe');\n    //   let color = 'white';\n    \n      const callBack = (...val) => {\n        setColor(val);\n      }\n\n//   const [flip, setFlip] = React.useState(false);\n  const [volume, setVolume] = React.useState(.5);\n  var audio = new Audio();\n\n\n    const classes = useStyles();\n    \n    const playSound = (song) => {\n        // new Audio(song).play();\n        console.log(volume);\n        audio.src = song;\n        audio.preload = \"metadata\";\n        audio.playbackRate = 1;\n        audio.volume = volume;\n        audio.controls = true;\n        audio.play();\n\n      };\n    const handleVolumeChange = (event, newValue) => {\n        setVolume(newValue);\n        // setState({[state.volume]: newValue });\n\n        audio.volume = newValue;\n        // document.getElementById(id).volume = volume;\n    };\n\n    const handleChange = (event) => {\n\n        setState({ ...state, [event.target.name]: event.target.checked });\n        // setFlip(!flip);\n        // setState(!state.flip);\n        // setState({ ...state, [state.flip]: !state.flip });\n\n\n        // if (event.target.flip) {\n        //     playSound(close);  \n        // } else {\n        //     playSound(open);\n        // }\n    };\n\n    // const player = document.getElementById('player');\n\n    // const handleSuccess = function(stream) {\n    //     if (window.URL) {\n    //     player.srcObject = stream;\n    //     } else {\n    //     player.src = stream;\n    //     }\n    // };\n\n    // navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n    //     .then(handleSuccess);\n\n\n    return (\n<div>\n        \n        {/* <audio id=\"player\" controls></audio> */}\n\n         <div className={classes.root}>\n            <Paper className={classes.paper} >\n\n            <Grid container spacing={2} > \n            \n                <Grid item xs={2}>\n                <Player label = \"Listen to the Tropes\" title = \"Tropes / Ta'amei Mikrah\" song = './sounds/allTropeSongs.mp3' />\n\n                     <Grid container direction='row' spacing={12}>\n                        <Grid item>\n                        <VolumeDown />\n                        </Grid>\n                        <Grid item xs={4}>\n                        <Slider id=\"demo\"\n                            volume={volume} \n                            onChange={handleVolumeChange} \n                            defaultValue={.5}\n                            step={.1} min={0} max={1} \n                            valueLabelDisplay=\"auto\" />\n                        </Grid>\n                        <Grid item>\n                        <VolumeUp />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container direction='row' spacing={12}>\n                        <Grid item>\n                            {/* TODO see tropes */}\n                            {/* <Checkbox checked={state.checked} onChange={handleChange} \n                                        color='secondary' name=\"checked\" \n                                        inputProps={{ 'position' : 'right' }}\n                            /> */}\n                            <Tooltip title=\"Follow in Transliteration\" arrow placement=\"right\">\n                                <Switch\n                                    checked={state.checked}\n                                    onChange={handleChange}\n                                    name=\"checked\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </Tooltip>\n                        </Grid>\n                        <Grid item>\n                            {/* TODO COLOR */}\n                            {/* <ColorModal color = {color} callBack = {callBack} /> */}\n                        </Grid>\n                    </Grid>\n\n                    \n                    {/* <Switch\n                    checked={flip}\n                    onChange={handleChange}\n                    name=\"toggle\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                    /> */}\n\n                </Grid>\n\n            <Grid item xs={9}>\n\n            <Tooltip title=\"Follow in Transliteration\" arrow placement=\"right\">\n                                <Switch\n                                    checked={state.checked}\n                                    onChange={handleChange}\n                                    name=\"checked\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                />\n                            </Tooltip>\n                            \n            <Grid container direction='row-reverse'  > \n\n        {/* style= { !state.toggle ? { 'font-family': 'Times New Roman'} : { }} > */}\n        \n                {songList.map(flash => {\n                            return (\n                                <fl onClick = {() => {playSound(flash.sound)}}>\n                                   {/* TODO COLOR */}\n                                    {/* {state.checked ? < div style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}>{flash.heb} {'\\u00A0'}</div> :  <>{flash.eng} {'\\u00A0'}</> } */}\n                                    {!state.checked ? <>{flash.heb} {'\\u00A0'}</> :  <>{flash.eng} {'\\u00A0'}</> }\n                                </fl>\n                            )\n                    })}\n                    \n                </Grid>\n                \n        </Grid>\n        </Grid>\n\n\n        </Paper>\n            \n        </div>\n\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}