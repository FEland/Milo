{"version":3,"file":"index.js","sources":["../node_modules/@super-effective/colorutils/dist/colorutils.es.js","../src/common/util.js","../node_modules/style-inject/dist/style-inject.es.js","../src/ReactColorPicker.js"],"sourcesContent":["/* eslint-disable no-bitwise */\n\n/**\n * @typedef {Object} Rgb\n * @property {number} red - The red component of the color (0 - 255)\n * @property {number} green - The green component of the color (0 - 255)\n * @property {number} blue - The blue component of the color (0 - 255)\n */\n\n/**\n * @typedef {Object} Hsv\n * @property {number} hue - The hue of the color (0 - 360)\n * @property {number} saturation - The saturation the color (0.0 - 1.0)\n * @property {number} value - The value of the color (0.0 - 1.0)\n */\n\n/**\n * Removes invalid characters and formats color hex to 6 characters\n * @param {string} colorHex The color value in hex format to sanitize\n */\nfunction sanitizeHex(colorHex) {\n  var sanitizedHex = colorHex.replace(/[^a-fA-F0-9]/g, '');\n\n  if (sanitizedHex.length === 0) {\n    sanitizedHex = '000000';\n  } else if (sanitizedHex.length === 1) {\n    sanitizedHex = sanitizedHex[0].repeat(6);\n  } else if (sanitizedHex.length === 2) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(3)).concat(sanitizedHex[1].repeat(3));\n  } else if (sanitizedHex.length >= 3 && sanitizedHex.length < 6) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(2)).concat(sanitizedHex[1].repeat(2)).concat(sanitizedHex[2].repeat(2));\n  } else if (sanitizedHex.length > 6) {\n    sanitizedHex = sanitizedHex.substr(0, 6);\n  }\n\n  return \"#\".concat(sanitizedHex);\n}\n/**\n * Converts a hex color string to its red, green, and blue component values\n * @param {string} colorHex The color value in hex format\n * @returns {Rgb} The RGB values for the color\n */\n\nfunction hexToRgb(colorHex) {\n  var sanitizedHex = colorHex.replace(/[^a-fA-F0-9]/g, '');\n\n  if (sanitizedHex.length !== 6 && sanitizedHex.length !== 3) {\n    throw new Error(\"Color should be either 3 or 6 characters in length - received a length of \".concat(sanitizedHex.length));\n  }\n\n  if (sanitizedHex.length === 3) {\n    sanitizedHex = \"\".concat(sanitizedHex[0].repeat(2)).concat(sanitizedHex[1].repeat(2)).concat(sanitizedHex[2].repeat(2));\n  }\n\n  var rgb = parseInt(sanitizedHex, 16);\n\n  if (Number.isNaN(rgb)) {\n    throw new Error(\"Unable to parse hex color \".concat(colorHex));\n  }\n\n  var red = rgb >> 16 & 0xff;\n  var green = rgb >> 8 & 0xff;\n  var blue = rgb & 0xff;\n  return {\n    red: red,\n    green: green,\n    blue: blue\n  };\n}\n/**\n * Takes given hue, saturation and value and returns the respective RGB values\n * @param {number} hue The hue of the color (0.0 - 1.0)\n * @param {number} saturation The saturation of the color (0.0 - 1.0)\n * @param {number} value The value of the color (0.0 - 1.0)\n * @returns {Rgb} The RGB values for the color\n */\n\nfunction hsvToRgb(hue, saturation, value) {\n  // Bounds check\n  if (hue < 0 || hue > 360 || saturation < 0 || saturation > 1 || value < 0 || value > 1) {\n    throw new Error('Invalid hue, saturation, or value - all values must be between 0 and 1');\n  }\n\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n  var huePercent = hue / 360;\n  var i = Math.floor(huePercent * 6);\n  var f = huePercent * 6 - i;\n  var p = value * (1 - saturation);\n  var q = value * (1 - f * saturation);\n  var t = value * (1 - (1 - f) * saturation);\n\n  switch (i % 6) {\n    case 0:\n      {\n        red = value;\n        green = t;\n        blue = p;\n        break;\n      }\n\n    case 1:\n      {\n        red = q;\n        green = value;\n        blue = p;\n        break;\n      }\n\n    case 2:\n      {\n        red = p;\n        green = value;\n        blue = t;\n        break;\n      }\n\n    case 3:\n      {\n        red = p;\n        green = q;\n        blue = value;\n        break;\n      }\n\n    case 4:\n      {\n        red = t;\n        green = p;\n        blue = value;\n        break;\n      }\n\n    case 5:\n      {\n        red = value;\n        green = p;\n        blue = q;\n        break;\n      }\n  }\n\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n  return {\n    red: red,\n    green: green,\n    blue: blue\n  };\n}\n/**\n * Converts a hex color string to its hue, saturation, and value\n * @param {string} colorHex The color value in hex format\n * @returns {Hsv} The HSV values for the color\n */\n\nfunction hexToHsv(colorHex) {\n  // Hex validation handled by hexToRgb\n  var _hexToRgb = hexToRgb(colorHex),\n      red = _hexToRgb.red,\n      green = _hexToRgb.green,\n      blue = _hexToRgb.blue;\n\n  var redPercent = red / 255;\n  var greenPercent = green / 255;\n  var bluePercent = blue / 255;\n  var max = Math.max(redPercent, greenPercent, bluePercent);\n  var min = Math.min(redPercent, greenPercent, bluePercent);\n  var diff = max - min;\n  var hue = 0;\n  var saturation = max === 0 ? 0 : diff / max;\n  var value = max;\n\n  if (min === max) ; else {\n    switch (max) {\n      case redPercent:\n        {\n          hue = (greenPercent - bluePercent) / diff + (greenPercent < bluePercent ? 6 : 0);\n          break;\n        }\n\n      case greenPercent:\n        {\n          hue = (bluePercent - redPercent) / diff + 2;\n          break;\n        }\n\n      case bluePercent:\n        {\n          hue = (redPercent - greenPercent) / diff + 4;\n          break;\n        }\n    }\n\n    hue /= 6;\n    hue *= 360;\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    value: value\n  };\n}\n/**\n * Takes given red, green, and blue values and returns the hex color representation\n * @param {number} red The red component of the color (0 - 255)\n * @param {number} green The green component of the color (0 - 255)\n * @param {number} blue The blue component of the color (0 - 255)\n * @returns {string} The hex string representation of the color\n */\n\nfunction rgbToHex(red, green, blue) {\n  var rgb = blue | green << 8 | red << 16;\n  return \"#\".concat((0x1000000 + rgb).toString(16).slice(1));\n}\n/**\n * Takes given hue, saturation and value and returns the hex color representation\n * @param {number} hue The hue of the color (0.0 - 1.0)\n * @param {number} saturation The saturation of the color (0.0 - 1.0)\n * @param {number} value The value of the color (0.0 - 1.0)\n * @returns {string} The hex string representation of the color\n */\n\nfunction hsvToHex(hue, saturation, value) {\n  // Bounds check handled by hsvToRgb\n  var _hsvToRgb = hsvToRgb(hue, saturation, value),\n      red = _hsvToRgb.red,\n      green = _hsvToRgb.green,\n      blue = _hsvToRgb.blue;\n\n  return rgbToHex(red, green, blue);\n}\n/**\n * Get the perceived brightness of a given color\n * See: https://www.w3.org/TR/AERT/#color-contrast\n * @param {number} red The red component of the color (0 - 255)\n * @param {number} green The green component of the color (0 - 255)\n * @param {number} blue The blue component of the color (0 - 255)\n * @returns {number} The perceived brightness of the color (0.0 - 1.0)\n */\n\nfunction getPerceivedLuminance(red, green, blue) {\n  return (red * 0.299 + green * 0.587 + blue * 0.114) / 255;\n}\n\nexport { getPerceivedLuminance, hexToHsv, hexToRgb, hsvToHex, hsvToRgb, rgbToHex, sanitizeHex };\n//# sourceMappingURL=colorutils.es.js.map\n","/**\n * @typedef {Object} Event\n * @property {Object} target The target element of the event\n */\n\n/**\n * @typedef {Object} Element\n * @property {number} offsetLeft The left offset of the element\n * @property {number} offsetTop The top offset of the element\n * @property {Element} offsetParent The parent element the offset is relative to\n * @property {Element} parentElement The parent element\n */\n\n\n/**\n * Check's if a referenced element is the target or parent of the target of an event\n * @param {Event} target The interaction event\n * @param {Object} ref A ref from a react useRef hook (object with a .current property)\n */\nexport function isRefTargeted(evt, ref) {\n  // Missing ref or event/target\n  if (!ref || !ref.current || !evt || !evt.target) {\n    return false;\n  }\n\n  let currentTarget = evt.target;\n  do {\n    if (currentTarget === ref.current) {\n      return true;\n    }\n    currentTarget = currentTarget.parentElement;\n  } while (currentTarget);\n\n  return false;\n}\n\n/**\n * Gets the page relative top/left position of an element\n * @param {Element} element The DOM element to get the page position of\n */\nexport function getPagePosition(element) {\n  let left = element.offsetLeft;\n  let top = element.offsetTop;\n\n  let currentElement = element;\n  while (currentElement.offsetParent) {\n    currentElement = currentElement.offsetParent;\n\n    left += currentElement.offsetLeft;\n    top += currentElement.offsetTop;\n  }\n\n  return {\n    left,\n    top,\n  };\n}\n\n/**\n * Sanitize and combine classNames to a single string\n * @param  {...string} classNames The classNames to combine\n */\nexport function getCombinedClassNames(...classNames) {\n  // Filter any null values\n  const filteredClassnames = classNames.filter((className) => (\n    typeof className === 'string' && className\n  ));\n\n  return (filteredClassnames.join(' '));\n}\n\n\n/**\n * Get the hue value from a given position on the hue slider\n * @param {number} x The x coordinate on the hue slider\n * @param {number} width The width of the hue slider\n */\nexport function getHueFromPosition(x, width) {\n  if (!width) {\n    return 0;\n  }\n\n  const percentage = x / width;\n  const hue = Math.max(Math.min(percentage, 1), 0) * 360;\n\n  return hue;\n}\n\n/**\n * Get the saturation and value from a given position on the SV slider\n * @param {number} x The x coordinate on the SV selector\n * @param {number} y The y coordinate on the SV selector\n * @param {number} width The width of the SV selector\n * @param {number} height The height of the SV selector\n */\nexport function getSaturationValueFromPosition(x, y, width, height) {\n  const percentageX = (!width) ? 0 : x / width;\n  const percentageY = (!height) ? 0 : 1 - (y / height);\n\n  const saturation = Math.max(Math.min(percentageX, 1), 0);\n  const value = Math.max(Math.min(percentageY, 1), 0);\n\n  return {\n    saturation,\n    value,\n  };\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { hsvToHex, hexToHsv, sanitizeHex } from '@super-effective/colorutils';\n\nimport {\n  getHueFromPosition,\n  getPagePosition,\n  getSaturationValueFromPosition,\n  isRefTargeted,\n} from 'common/util';\n\nimport styles from './ReactColorPicker.module.scss';\n\nconst ReactColorPicker = ({\n  className,\n  color,\n  showHex,\n  showSwatch,\n\n  onChange,\n  onInteractionStart,\n  onInteractionEnd,\n\n  ...rest\n}) => {\n  const sanitizedColor = sanitizeHex(color || '#000000');\n\n  const [hex, setHex] = useState(sanitizedColor);\n  const [hsv, setHsv] = useState(hexToHsv(sanitizedColor));\n\n  // Used when editing the hex through the input\n  const [tempHex, setTempHex] = useState(hex);\n  const [isInteracting, setIsInteracting] = useState(false);\n\n  const hsvRef = useRef(hsv);\n  const hexRef = useRef(hex);\n\n  const hueSliderRef = useRef();\n  const svSliderRef = useRef();\n\n\n  // Set the hex and hsv states/refs with updated data\n  const setColor = (updatedHex, updatedHsv) => {\n    hexRef.current = updatedHex;\n    hsvRef.current = updatedHsv;\n\n    setHex(updatedHex);\n    setTempHex(updatedHex);\n    setHsv(updatedHsv);\n\n    onChange(updatedHex);\n  };\n\n  // Helper to set the color when HSV change\n  const setColorFromHsv = (updatedHsv) => {\n    setColor(\n      hsvToHex(updatedHsv.hue, updatedHsv.saturation, updatedHsv.value),\n      updatedHsv,\n    );\n  };\n\n  // Helper to set the color when hex changes\n  const setColorFromHex = (updatedHex) => {\n    setColor(updatedHex, hexToHsv(updatedHex));\n  };\n\n\n  // Event handler for hex input changes (on blur and enter pressed)\n  const onHexChange = (value) => {\n    // Strip out invalid characters\n    const sanitizedHex = sanitizeHex(value);\n\n    setColorFromHex(sanitizedHex);\n  };\n\n  // Update color when the passed value changes\n  useEffect(() => {\n    if (color !== hexRef.current) {\n      const sanitizedHex = sanitizeHex(color || '#000000');\n      setColorFromHex(sanitizedHex);\n    }\n  }, [color]);\n\n\n  // Hookup cursor events to update the color selection\n  useEffect(() => {\n    const updateColor = (evt) => {\n      // Update hue if targeted\n      if (isRefTargeted(evt, hueSliderRef) && evt.buttons === 1) {\n        const huePosition = getPagePosition(hueSliderRef.current);\n        const x = evt.pageX - huePosition.left;\n\n        const updatedHue = getHueFromPosition(x, hueSliderRef.current.clientWidth);\n\n        setColorFromHsv({ ...hsvRef.current, hue: updatedHue });\n      }\n\n      // Update the saturation/value if targeted\n      if (isRefTargeted(evt, svSliderRef) && evt.buttons === 1) {\n        const svPosition = getPagePosition(svSliderRef.current);\n        const x = evt.pageX - svPosition.left;\n        const y = evt.pageY - svPosition.top;\n\n        const updatedSaturationValue = getSaturationValueFromPosition(\n          x,\n          y,\n          svSliderRef.current.clientWidth,\n          svSliderRef.current.clientHeight,\n        );\n\n        setColorFromHsv({\n          ...hsvRef.current,\n          ...updatedSaturationValue,\n        });\n      }\n    };\n\n    const onMouseDown = (evt) => {\n      if (isRefTargeted(evt, hueSliderRef) || isRefTargeted(evt, svSliderRef)) {\n        setIsInteracting(true);\n        onInteractionStart();\n        updateColor(evt);\n      }\n    };\n\n    const onMouseUp = () => {\n      if (isInteracting) {\n        setIsInteracting(false);\n        onInteractionEnd();\n      }\n    };\n\n    document.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', updateColor);\n    document.addEventListener('mouseup', onMouseUp);\n\n    return () => {\n      document.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', updateColor);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [isInteracting]);\n\n  const {\n    hue,\n    saturation,\n    value,\n  } = hsv;\n\n  // Get the hex for the hue slider\n  const hueColor = hsvToHex(hue, 1, 1);\n\n  return (\n    <div\n      className={`${styles.react_color_picker}${className ? ` ${className}` : ''}`}\n      {...rest}\n    >\n      <div\n          className={styles.saturation_value}\n          style={{\n            backgroundColor: hueColor,\n          }}\n          ref={svSliderRef}\n          title=\"Saturation and Value\"\n        >\n          <div\n            className={styles.saturation_value_picker}\n            style={{\n              left: `${saturation * 100}%`,\n              top: `${(1 - value) * 100}%`,\n              backgroundColor: hex,\n            }}\n          />\n        </div>\n\n        <div className={styles.hue_slider} ref={hueSliderRef} title=\"Hue\" >\n          <div\n            className={styles.hue_slider_picker}\n            style={{\n              left: `${(hue / 360) * 100}%`,\n              backgroundColor: hueColor,\n            }}\n          />\n        </div>\n\n        {(showHex || showSwatch) && (\n          <div className={styles.details}>\n            {showSwatch && (\n              <div\n                className={styles.swatch}\n                style={{\n                  backgroundColor: hex,\n                }}\n                title=\"Swatch\"\n              />\n            )}\n            {showHex && (\n              <label>\n                <span>Hex:</span>\n                <input\n                  className={styles.hex_value}\n                  value={tempHex}\n                  onChange={(evt) => setTempHex(evt.target.value)}\n                  onBlur={(evt) => onHexChange(evt.target.value)}\n                  onKeyDown={(evt) => {\n                    if (evt.key === 'Enter') {\n                      onHexChange(evt.target.value);\n                    } else if (evt.key === 'Esc' || evt.key === 'Escape') {\n                      // eslint-disable-next-line no-param-reassign\n                      evt.target.value = hexRef.current;\n                      evt.target.blur();\n                    }\n                  }}\n                />\n              </label>\n            )}\n          </div>\n        )}\n    </div>\n  );\n};\n\nReactColorPicker.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.string,\n  showSwatch: PropTypes.bool,\n  showHex: PropTypes.bool,\n\n  onChange: PropTypes.func,\n  onInteractionStart: PropTypes.func,\n  onInteractionEnd: PropTypes.func,\n};\n\nReactColorPicker.defaultProps = {\n  className: null,\n  color: '#3cd6bf',\n  showSwatch: true,\n  showHex: true,\n\n  onChange: () => {},\n  onInteractionStart: () => {},\n  onInteractionEnd: () => {},\n};\n\nexport default ReactColorPicker;\n"],"names":["isRefTargeted","evt","ref","current","target","currentTarget","parentElement","getPagePosition","element","left","offsetLeft","top","offsetTop","currentElement","offsetParent","getHueFromPosition","x","width","percentage","hue","Math","max","min","getSaturationValueFromPosition","y","height","percentageX","percentageY","saturation","value","ReactColorPicker","className","color","showHex","showSwatch","onChange","onInteractionStart","onInteractionEnd","rest","sanitizedColor","sanitizeHex","useState","hex","setHex","hexToHsv","hsv","setHsv","tempHex","setTempHex","isInteracting","setIsInteracting","hsvRef","useRef","hexRef","hueSliderRef","svSliderRef","setColor","updatedHex","updatedHsv","setColorFromHsv","hsvToHex","setColorFromHex","onHexChange","sanitizedHex","useEffect","updateColor","buttons","huePosition","pageX","updatedHue","clientWidth","svPosition","pageY","updatedSaturationValue","clientHeight","onMouseDown","onMouseUp","document","addEventListener","removeEventListener","hueColor","React","styles","react_color_picker","saturation_value","backgroundColor","saturation_value_picker","hue_slider","hue_slider_picker","details","swatch","hex_value","key","blur","propTypes","PropTypes","string","bool","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,QAAQ,EAAE;AAC/B,EAAE,IAAI,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AAC3D;AACA,EAAE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,IAAI,YAAY,GAAG,QAAQ,CAAC;AAC5B,GAAG,MAAM,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,IAAI,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC7C,GAAG,MAAM,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,IAAI,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,GAAG,MAAM,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AAClE,IAAI,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5H,GAAG,MAAM,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,IAAI,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,GAAG;AACH;AACA,EAAE,OAAO,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,QAAQ,EAAE;AAC5B,EAAE,IAAI,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AAC3D;AACA,EAAE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9D,IAAI,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9H,GAAG;AACH;AACA,EAAE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,IAAI,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5H,GAAG;AACH;AACA,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACvC;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AACzB,IAAI,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnE,GAAG;AACH;AACA,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC;AAC7B,EAAE,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AAC9B,EAAE,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;AACxB,EAAE,OAAO;AACT,IAAI,GAAG,EAAE,GAAG;AACZ,IAAI,KAAK,EAAE,KAAK;AAChB,IAAI,IAAI,EAAE,IAAI;AACd,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE;AAC1C;AACA,EAAE,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AAC1F,IAAI,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;AAC9F,GAAG;AACH;AACA,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;AACd,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AACf,EAAE,IAAI,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7B,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AACrC,EAAE,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7B,EAAE,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;AACnC,EAAE,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AACvC,EAAE,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC;AAC7C;AACA,EAAE,QAAQ,CAAC,GAAG,CAAC;AACf,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,KAAK,CAAC;AACpB,QAAQ,KAAK,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,GAAG,CAAC,CAAC;AACjB,QAAQ,MAAM;AACd,OAAO;AACP;AACA,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,CAAC,CAAC;AAChB,QAAQ,KAAK,GAAG,KAAK,CAAC;AACtB,QAAQ,IAAI,GAAG,CAAC,CAAC;AACjB,QAAQ,MAAM;AACd,OAAO;AACP;AACA,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,CAAC,CAAC;AAChB,QAAQ,KAAK,GAAG,KAAK,CAAC;AACtB,QAAQ,IAAI,GAAG,CAAC,CAAC;AACjB,QAAQ,MAAM;AACd,OAAO;AACP;AACA,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,CAAC,CAAC;AAChB,QAAQ,KAAK,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,GAAG,KAAK,CAAC;AACrB,QAAQ,MAAM;AACd,OAAO;AACP;AACA,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,CAAC,CAAC;AAChB,QAAQ,KAAK,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,GAAG,KAAK,CAAC;AACrB,QAAQ,MAAM;AACd,OAAO;AACP;AACA,IAAI,KAAK,CAAC;AACV,MAAM;AACN,QAAQ,GAAG,GAAG,KAAK,CAAC;AACpB,QAAQ,KAAK,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,GAAG,CAAC,CAAC;AACjB,QAAQ,MAAM;AACd,OAAO;AACP,GAAG;AACH;AACA,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC9B,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAClC,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AAChC,EAAE,OAAO;AACT,IAAI,GAAG,EAAE,GAAG;AACZ,IAAI,KAAK,EAAE,KAAK;AAChB,IAAI,IAAI,EAAE,IAAI;AACd,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,QAAQ,EAAE;AAC5B;AACA,EAAE,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACpC,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG;AACzB,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK;AAC7B,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC5B;AACA,EAAE,IAAI,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7B,EAAE,IAAI,YAAY,GAAG,KAAK,GAAG,GAAG,CAAC;AACjC,EAAE,IAAI,WAAW,GAAG,IAAI,GAAG,GAAG,CAAC;AAC/B,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;AAC5D,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;AAC5D,EAAE,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACvB,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;AACd,EAAE,IAAI,UAAU,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;AAC9C,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC;AAClB;AACA,EAAE,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC,MAAM;AAC1B,IAAI,QAAQ,GAAG;AACf,MAAM,KAAK,UAAU;AACrB,QAAQ;AACR,UAAU,GAAG,GAAG,CAAC,YAAY,GAAG,WAAW,IAAI,IAAI,IAAI,YAAY,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3F,UAAU,MAAM;AAChB,SAAS;AACT;AACA,MAAM,KAAK,YAAY;AACvB,QAAQ;AACR,UAAU,GAAG,GAAG,CAAC,WAAW,GAAG,UAAU,IAAI,IAAI,GAAG,CAAC,CAAC;AACtD,UAAU,MAAM;AAChB,SAAS;AACT;AACA,MAAM,KAAK,WAAW;AACtB,QAAQ;AACR,UAAU,GAAG,GAAG,CAAC,UAAU,GAAG,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC;AACvD,UAAU,MAAM;AAChB,SAAS;AACT,KAAK;AACL;AACA,IAAI,GAAG,IAAI,CAAC,CAAC;AACb,IAAI,GAAG,IAAI,GAAG,CAAC;AACf,GAAG;AACH;AACA,EAAE,OAAO;AACT,IAAI,GAAG,EAAE,GAAG;AACZ,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,KAAK,EAAE,KAAK;AAChB,GAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;AACpC,EAAE,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;AAC1C,EAAE,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,GAAG,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE;AAC1C;AACA,EAAE,IAAI,SAAS,GAAG,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC;AAClD,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG;AACzB,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK;AAC7B,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC5B;AACA,EAAE,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACpC;;AC1OA;;;;;AAKA;;;;;;;;AASA;;;;;AAKO,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AACtC;AACA,MAAI,CAACA,GAAD,IAAQ,CAACA,GAAG,CAACC,OAAb,IAAwB,CAACF,GAAzB,IAAgC,CAACA,GAAG,CAACG,MAAzC,EAAiD;AAC/C,WAAO,KAAP;AACD;;AAED,MAAIC,aAAa,GAAGJ,GAAG,CAACG,MAAxB;;AACA,KAAG;AACD,QAAIC,aAAa,KAAKH,GAAG,CAACC,OAA1B,EAAmC;AACjC,aAAO,IAAP;AACD;;AACDE,IAAAA,aAAa,GAAGA,aAAa,CAACC,aAA9B;AACD,GALD,QAKSD,aALT;;AAOA,SAAO,KAAP;AACD;AAED;;;;;AAIO,SAASE,eAAT,CAAyBC,OAAzB,EAAkC;AACvC,MAAIC,IAAI,GAAGD,OAAO,CAACE,UAAnB;AACA,MAAIC,GAAG,GAAGH,OAAO,CAACI,SAAlB;AAEA,MAAIC,cAAc,GAAGL,OAArB;;AACA,SAAOK,cAAc,CAACC,YAAtB,EAAoC;AAClCD,IAAAA,cAAc,GAAGA,cAAc,CAACC,YAAhC;AAEAL,IAAAA,IAAI,IAAII,cAAc,CAACH,UAAvB;AACAC,IAAAA,GAAG,IAAIE,cAAc,CAACD,SAAtB;AACD;;AAED,SAAO;AACLH,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID;AAgBD;;;;;;AAKO,SAASI,kBAAT,CAA4BC,CAA5B,EAA+BC,KAA/B,EAAsC;AAC3C,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,CAAP;AACD;;AAED,MAAMC,UAAU,GAAGF,CAAC,GAAGC,KAAvB;AACA,MAAME,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,UAAT,EAAqB,CAArB,CAAT,EAAkC,CAAlC,IAAuC,GAAnD;AAEA,SAAOC,GAAP;AACD;AAED;;;;;;;;AAOO,SAASI,8BAAT,CAAwCP,CAAxC,EAA2CQ,CAA3C,EAA8CP,KAA9C,EAAqDQ,MAArD,EAA6D;AAClE,MAAMC,WAAW,GAAI,CAACT,KAAF,GAAW,CAAX,GAAeD,CAAC,GAAGC,KAAvC;AACA,MAAMU,WAAW,GAAI,CAACF,MAAF,GAAY,CAAZ,GAAgB,IAAKD,CAAC,GAAGC,MAA7C;AAEA,MAAMG,UAAU,GAAGR,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASI,WAAT,EAAsB,CAAtB,CAAT,EAAmC,CAAnC,CAAnB;AACA,MAAMG,KAAK,GAAGT,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASK,WAAT,EAAsB,CAAtB,CAAT,EAAmC,CAAnC,CAAd;AAEA,SAAO;AACLC,IAAAA,UAAU,EAAVA,UADK;AAELC,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;;AC1GD,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC9B;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;AAC1D;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;AACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,GAAG;AACH;;;;;;ICZMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAWnB;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,KASI,QATJA,KASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MADDC,IACC;;AACJ,MAAMC,cAAc,GAAGC,WAAW,CAACR,KAAK,IAAI,SAAV,CAAlC;;AADI,kBAGkBS,cAAQ,CAACF,cAAD,CAH1B;AAAA;AAAA,MAGGG,GAHH;AAAA,MAGQC,MAHR;;AAAA,mBAIkBF,cAAQ,CAACG,QAAQ,CAACL,cAAD,CAAT,CAJ1B;AAAA;AAAA,MAIGM,GAJH;AAAA,MAIQC,MAJR;;;AAAA,mBAO0BL,cAAQ,CAACC,GAAD,CAPlC;AAAA;AAAA,MAOGK,OAPH;AAAA,MAOYC,UAPZ;;AAAA,mBAQsCP,cAAQ,CAAC,KAAD,CAR9C;AAAA;AAAA,MAQGQ,aARH;AAAA,MAQkBC,gBARlB;;AAUJ,MAAMC,MAAM,GAAGC,YAAM,CAACP,GAAD,CAArB;AACA,MAAMQ,MAAM,GAAGD,YAAM,CAACV,GAAD,CAArB;AAEA,MAAMY,YAAY,GAAGF,YAAM,EAA3B;AACA,MAAMG,WAAW,GAAGH,YAAM,EAA1B,CAdI;;AAkBJ,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,UAAb,EAA4B;AAC3CL,IAAAA,MAAM,CAAClD,OAAP,GAAiBsD,UAAjB;AACAN,IAAAA,MAAM,CAAChD,OAAP,GAAiBuD,UAAjB;AAEAf,IAAAA,MAAM,CAACc,UAAD,CAAN;AACAT,IAAAA,UAAU,CAACS,UAAD,CAAV;AACAX,IAAAA,MAAM,CAACY,UAAD,CAAN;AAEAvB,IAAAA,QAAQ,CAACsB,UAAD,CAAR;AACD,GATD,CAlBI;;;AA8BJ,MAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACD,UAAD,EAAgB;AACtCF,IAAAA,QAAQ,CACNI,QAAQ,CAACF,UAAU,CAACvC,GAAZ,EAAiBuC,UAAU,CAAC9B,UAA5B,EAAwC8B,UAAU,CAAC7B,KAAnD,CADF,EAEN6B,UAFM,CAAR;AAID,GALD,CA9BI;;;AAsCJ,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,UAAD,EAAgB;AACtCD,IAAAA,QAAQ,CAACC,UAAD,EAAab,QAAQ,CAACa,UAAD,CAArB,CAAR;AACD,GAFD,CAtCI;;;AA4CJ,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACjC,KAAD,EAAW;AAC7B;AACA,QAAMkC,YAAY,GAAGvB,WAAW,CAACX,KAAD,CAAhC;AAEAgC,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GALD,CA5CI;;;AAoDJC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAIhC,KAAK,KAAKqB,MAAM,CAAClD,OAArB,EAA8B;AAC5B,UAAM4D,YAAY,GAAGvB,WAAW,CAACR,KAAK,IAAI,SAAV,CAAhC;AACA6B,MAAAA,eAAe,CAACE,YAAD,CAAf;AACD;AACF,GALQ,EAKN,CAAC/B,KAAD,CALM,CAAT,CApDI;;AA6DJgC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAAChE,GAAD,EAAS;AAC3B;AACA,UAAID,aAAa,CAACC,GAAD,EAAMqD,YAAN,CAAb,IAAoCrD,GAAG,CAACiE,OAAJ,KAAgB,CAAxD,EAA2D;AACzD,YAAMC,WAAW,GAAG5D,eAAe,CAAC+C,YAAY,CAACnD,OAAd,CAAnC;AACA,YAAMa,CAAC,GAAGf,GAAG,CAACmE,KAAJ,GAAYD,WAAW,CAAC1D,IAAlC;AAEA,YAAM4D,UAAU,GAAGtD,kBAAkB,CAACC,CAAD,EAAIsC,YAAY,CAACnD,OAAb,CAAqBmE,WAAzB,CAArC;AAEAX,QAAAA,eAAe,mCAAMR,MAAM,CAAChD,OAAb;AAAsBgB,UAAAA,GAAG,EAAEkD;AAA3B,WAAf;AACD,OAT0B;;;AAY3B,UAAIrE,aAAa,CAACC,GAAD,EAAMsD,WAAN,CAAb,IAAmCtD,GAAG,CAACiE,OAAJ,KAAgB,CAAvD,EAA0D;AACxD,YAAMK,UAAU,GAAGhE,eAAe,CAACgD,WAAW,CAACpD,OAAb,CAAlC;;AACA,YAAMa,EAAC,GAAGf,GAAG,CAACmE,KAAJ,GAAYG,UAAU,CAAC9D,IAAjC;;AACA,YAAMe,CAAC,GAAGvB,GAAG,CAACuE,KAAJ,GAAYD,UAAU,CAAC5D,GAAjC;AAEA,YAAM8D,sBAAsB,GAAGlD,8BAA8B,CAC3DP,EAD2D,EAE3DQ,CAF2D,EAG3D+B,WAAW,CAACpD,OAAZ,CAAoBmE,WAHuC,EAI3Df,WAAW,CAACpD,OAAZ,CAAoBuE,YAJuC,CAA7D;AAOAf,QAAAA,eAAe,mCACVR,MAAM,CAAChD,OADG,GAEVsE,sBAFU,EAAf;AAID;AACF,KA7BD;;AA+BA,QAAME,WAAW,GAAG,SAAdA,WAAc,CAAC1E,GAAD,EAAS;AAC3B,UAAID,aAAa,CAACC,GAAD,EAAMqD,YAAN,CAAb,IAAoCtD,aAAa,CAACC,GAAD,EAAMsD,WAAN,CAArD,EAAyE;AACvEL,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAd,QAAAA,kBAAkB;AAClB6B,QAAAA,WAAW,CAAChE,GAAD,CAAX;AACD;AACF,KAND;;AAQA,QAAM2E,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,UAAI3B,aAAJ,EAAmB;AACjBC,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAb,QAAAA,gBAAgB;AACjB;AACF,KALD;;AAOAwC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCH,WAAvC;AACAE,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCb,WAAvC;AACAY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCF,SAArC;AAEA,WAAO,YAAM;AACXC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CJ,WAA1C;AACAE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0Cd,WAA1C;AACAY,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCH,SAAxC;AACD,KAJD;AAKD,GAxDQ,EAwDN,CAAC3B,aAAD,CAxDM,CAAT;AA7DI,MAwHF9B,GAxHE,GA2HA0B,GA3HA,CAwHF1B,GAxHE;AAAA,MAyHFS,UAzHE,GA2HAiB,GA3HA,CAyHFjB,UAzHE;AAAA,MA0HFC,KA1HE,GA2HAgB,GA3HA,CA0HFhB,KA1HE;;AA8HJ,MAAMmD,QAAQ,GAAGpB,QAAQ,CAACzC,GAAD,EAAM,CAAN,EAAS,CAAT,CAAzB;AAEA,sBACE8D;AACE,IAAA,SAAS,YAAKC,MAAM,CAACC,kBAAZ,SAAiCpD,SAAS,cAAOA,SAAP,IAAqB,EAA/D;AADX,KAEMO,IAFN,gBAIE2C;AACI,IAAA,SAAS,EAAEC,MAAM,CAACE,gBADtB;AAEI,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAEL;AADZ,KAFX;AAKI,IAAA,GAAG,EAAEzB,WALT;AAMI,IAAA,KAAK,EAAC;AANV,kBAQI0B;AACE,IAAA,SAAS,EAAEC,MAAM,CAACI,uBADpB;AAEE,IAAA,KAAK,EAAE;AACL7E,MAAAA,IAAI,YAAKmB,UAAU,GAAG,GAAlB,MADC;AAELjB,MAAAA,GAAG,YAAK,CAAC,IAAIkB,KAAL,IAAc,GAAnB,MAFE;AAGLwD,MAAAA,eAAe,EAAE3C;AAHZ;AAFT,IARJ,CAJF,eAsBIuC;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACK,UAAvB;AAAmC,IAAA,GAAG,EAAEjC,YAAxC;AAAsD,IAAA,KAAK,EAAC;AAA5D,kBACE2B;AACE,IAAA,SAAS,EAAEC,MAAM,CAACM,iBADpB;AAEE,IAAA,KAAK,EAAE;AACL/E,MAAAA,IAAI,YAAMU,GAAG,GAAG,GAAP,GAAc,GAAnB,MADC;AAELkE,MAAAA,eAAe,EAAEL;AAFZ;AAFT,IADF,CAtBJ,EAgCK,CAAC/C,OAAO,IAAIC,UAAZ,kBACC+C;AAAK,IAAA,SAAS,EAAEC,MAAM,CAACO;AAAvB,KACGvD,UAAU,iBACT+C;AACE,IAAA,SAAS,EAAEC,MAAM,CAACQ,MADpB;AAEE,IAAA,KAAK,EAAE;AACLL,MAAAA,eAAe,EAAE3C;AADZ,KAFT;AAKE,IAAA,KAAK,EAAC;AALR,IAFJ,EAUGT,OAAO,iBACNgD,yDACEA,kDADF,eAEEA;AACE,IAAA,SAAS,EAAEC,MAAM,CAACS,SADpB;AAEE,IAAA,KAAK,EAAE5C,OAFT;AAGE,IAAA,QAAQ,EAAE,kBAAC9C,GAAD;AAAA,aAAS+C,UAAU,CAAC/C,GAAG,CAACG,MAAJ,CAAWyB,KAAZ,CAAnB;AAAA,KAHZ;AAIE,IAAA,MAAM,EAAE,gBAAC5B,GAAD;AAAA,aAAS6D,WAAW,CAAC7D,GAAG,CAACG,MAAJ,CAAWyB,KAAZ,CAApB;AAAA,KAJV;AAKE,IAAA,SAAS,EAAE,mBAAC5B,GAAD,EAAS;AAClB,UAAIA,GAAG,CAAC2F,GAAJ,KAAY,OAAhB,EAAyB;AACvB9B,QAAAA,WAAW,CAAC7D,GAAG,CAACG,MAAJ,CAAWyB,KAAZ,CAAX;AACD,OAFD,MAEO,IAAI5B,GAAG,CAAC2F,GAAJ,KAAY,KAAZ,IAAqB3F,GAAG,CAAC2F,GAAJ,KAAY,QAArC,EAA+C;AACpD;AACA3F,QAAAA,GAAG,CAACG,MAAJ,CAAWyB,KAAX,GAAmBwB,MAAM,CAAClD,OAA1B;AACAF,QAAAA,GAAG,CAACG,MAAJ,CAAWyF,IAAX;AACD;AACF;AAbH,IAFF,CAXJ,CAjCN,CADF;AAoED;;AAED/D,gBAAgB,CAACgE,SAAjB,GAA6B;AAC3B/D,EAAAA,SAAS,EAAEgE,SAAS,CAACC,MADM;AAE3BhE,EAAAA,KAAK,EAAE+D,SAAS,CAACC,MAFU;AAG3B9D,EAAAA,UAAU,EAAE6D,SAAS,CAACE,IAHK;AAI3BhE,EAAAA,OAAO,EAAE8D,SAAS,CAACE,IAJQ;AAM3B9D,EAAAA,QAAQ,EAAE4D,SAAS,CAACG,IANO;AAO3B9D,EAAAA,kBAAkB,EAAE2D,SAAS,CAACG,IAPH;AAQ3B7D,EAAAA,gBAAgB,EAAE0D,SAAS,CAACG;AARD,CAA7B;AAWApE,gBAAgB,CAACqE,YAAjB,GAAgC;AAC9BpE,EAAAA,SAAS,EAAE,IADmB;AAE9BC,EAAAA,KAAK,EAAE,SAFuB;AAG9BE,EAAAA,UAAU,EAAE,IAHkB;AAI9BD,EAAAA,OAAO,EAAE,IAJqB;AAM9BE,EAAAA,QAAQ,EAAE,oBAAM,EANc;AAO9BC,EAAAA,kBAAkB,EAAE,8BAAM,EAPI;AAQ9BC,EAAAA,gBAAgB,EAAE,4BAAM;AARM,CAAhC;;;;"}