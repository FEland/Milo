{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/ColorModal.js\";\nimport React, { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport ReactColorPicker from '@super-effective/react-color-picker'; //https://github.com/super-effective/react-color-picker\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormatColorTextIcon from '@material-ui/icons/FormatColorText';\nimport IconButton from \"@material-ui/core/Button\"; // import { visitFunctionBody } from 'typescript';\n// import ColorLensTwoToneIcon from '@material-ui/icons/ColorLensTwoTone';\n// import debounce from 'lodash';\n// import throttle from 'lodash';\n// function throttle2 (func, limit) {\n//   var wait = false;                  // Initially, we're not waiting\n//   return function () {  \n//     // We return a throttled function\n//       if (!wait) {                   // If we're not waiting\n//           func.apply(this, arguments);\n//           wait = true;               // Prevent future invocations\n//           setTimeout(function () {   // After a period of time\n//               wait = false;          // And allow future invocations\n//           }, limit);\n//       }\n//   }\n// }\n// export function microtaskDebounce(fn) {\n//   let called = false\n//   return () => {\n//     if (called) {\n//       return\n//     }\n//     called = true\n//     window.Promise.resolve().then(() => {\n//       called = false\n//       fn()\n//     })\n//   }\n// }\n// export function taskDebounce(fn) {\n//   let scheduled = false;\n//   return () => {\n//     if (!scheduled) {\n//       scheduled = true;\n//       setTimeout(() => {\n//         scheduled = false;\n//         fn();\n//       }, timeoutDuration);\n//     }\n//   };\n// }\n\nexport default function ColorModal(_ref) {\n  var callBack = _ref.callBack;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState = useState('white'),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1]; //https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086\n\n\n  var debounce = function debounce(func, wait) {\n    var timeout;\n    return function executedFunction() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var later = function later() {\n        clearTimeout(timeout);\n        func.apply(void 0, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  var onColorChange2 = debounce(function (newColor) {\n    handleColor(newColor);\n  }, 150); // const onColorChange = (updatedColor) => {\n  //   throttle2(handleColor(updatedColor), 200);\n  // }\n\n  function handleColor(newColor) {\n    callBack(newColor);\n    setColor(newColor); // setTimeout( () => {console.log(newColor)}, 800);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Adjust Text Color\",\n    arrow: true,\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    backgroundColor: \"rgb(151, 155, 137)\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormatColorTextIcon, {\n    style: {\n      color: color\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    style: {\n      \"width\": \"215px\",\n      \"height\": \"215px\",\n      \"margin\": \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactColorPicker, {\n    style: {\n      \"width\": \"200px\",\n      \"height\": \"200px\",\n      \"padding\": \"15px 5px\",\n      \"border\": \"1px solid #ccc\",\n      \"borderRadius\": \"10px\",\n      \"backgroundColor\": 'rgb(151, 155, 137)'\n    },\n    showHex: false,\n    showSwatch: false,\n    color: color,\n    onChange: onColorChange2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/ColorModal.js"],"names":["React","useState","Modal","ReactColorPicker","Tooltip","FormatColorTextIcon","IconButton","ColorModal","callBack","open","setOpen","handleOpen","handleClose","color","setColor","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","onColorChange2","newColor","handleColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport ReactColorPicker from '@super-effective/react-color-picker'; //https://github.com/super-effective/react-color-picker\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormatColorTextIcon from '@material-ui/icons/FormatColorText';\nimport IconButton from \"@material-ui/core/Button\";\n// import { visitFunctionBody } from 'typescript';\n// import ColorLensTwoToneIcon from '@material-ui/icons/ColorLensTwoTone';\n// import debounce from 'lodash';\n// import throttle from 'lodash';\n\n\n\n// function throttle2 (func, limit) {\n//   var wait = false;                  // Initially, we're not waiting\n//   return function () {  \n//     // We return a throttled function\n//       if (!wait) {                   // If we're not waiting\n//           func.apply(this, arguments);\n//           wait = true;               // Prevent future invocations\n//           setTimeout(function () {   // After a period of time\n//               wait = false;          // And allow future invocations\n//           }, limit);\n//       }\n//   }\n\n// }\n\n\n// export function microtaskDebounce(fn) {\n//   let called = false\n//   return () => {\n//     if (called) {\n//       return\n//     }\n//     called = true\n//     window.Promise.resolve().then(() => {\n//       called = false\n//       fn()\n//     })\n//   }\n// }\n\n// export function taskDebounce(fn) {\n//   let scheduled = false;\n//   return () => {\n//     if (!scheduled) {\n//       scheduled = true;\n//       setTimeout(() => {\n//         scheduled = false;\n//         fn();\n//       }, timeoutDuration);\n//     }\n//   };\n// }\n\nexport default function ColorModal({callBack}) {\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [color, setColor] = useState('white');\n  \n//https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086\n  const debounce = (func, wait) => {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  };\n\n  var onColorChange2 = debounce(function(newColor) {\n    handleColor(newColor);\n  }, 150);\n\n\n  // const onColorChange = (updatedColor) => {\n  //   throttle2(handleColor(updatedColor), 200);\n  // }\n\n  function handleColor(newColor){\n    callBack(newColor);\n    setColor(newColor);\n    // setTimeout( () => {console.log(newColor)}, 800);\n  }\n\n  \n  return (\n    <>\n      <Tooltip title=\"Adjust Text Color\" arrow placement=\"right\">\n\n        <IconButton backgroundColor= 'rgb(151, 155, 137)' onClick={handleOpen}> \n               {/* <ColorLensTwoToneIcon  style={{color: color}} fontSize=\"large\"/>  */}\n               <FormatColorTextIcon  style={{color: color}} fontSize=\"large\"/> \n\n          </IconButton>\n      </Tooltip> \n        <Modal open={open} onClose={handleClose} style = {{ \"width\" : \"215px\", \"height\" : \"215px\", \"margin\" : \"auto\"}}>\n\n                  <ReactColorPicker style = {{\"width\" : \"200px\", \"height\" : \"200px\",\n                                              \"padding\" : \"15px 5px\", \"border\" : \"1px solid #ccc\",\n                                              \"borderRadius\" : \"10px\", \"backgroundColor\": 'rgb(151, 155, 137)',\n                                              }}\n                      showHex = {false} showSwatch = {false}\n                      color={color} onChange={onColorChange2} \n                  />\n        </Modal>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}