{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/FlashcardList_7.js\";\nimport React from 'react';\nimport Flashcard from \"./Flashcard_7\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Samples } from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\"; // import Slider from \"@material-ui/core/Slider\";\n// import VolumeDown from '@material-ui/icons/VolumeDown';\n// import VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden' // flexDirection: 'reverse',\n      // flexWrap: 'reverse'\n      // flexDirection: 'column-reverse'\n\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\"\n    },\n    input: {\n      width: 42,\n      color: 'primary'\n    }\n  };\n}); //   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n// let songList = new Map();\n// Samples.forEach(element => {\n//   songList.set(element.id, element);\n// });\n//   let songList = prePopulateItems(Samples);\n\nvar songList = Samples; // export default function FlashcardList( { flashcards, callBack1} ) {\n\nexport default function FlashcardList(_ref) {\n  var _this = this;\n\n  var callBack1 = _ref.callBack1;\n\n  // let songList = [...flashcards];\n  // let songList = cloneDeep(flashcards);\n  // let songList = new Map();\n  var _React$useState = React.useState(50),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      flip = _React$useState4[0],\n      setFlip = _React$useState4[1];\n\n  var _React$useState5 = React.useState(.5),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      volume = _React$useState6[0],\n      setVolume = _React$useState6[1];\n\n  var handleSliderChange = function handleSliderChange(event, newValue) {\n    setValue(newValue);\n    setVolume(value / 100);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n    setVolume(value / 100);\n  };\n\n  var handleBlur = function handleBlur() {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  var handleVolumeChange = function handleVolumeChange(event, newValue) {\n    setVolume(newValue);\n    audio.volume = newValue;\n    console.log(\"vol in list is \", volume); // document.getElementById(id).volume = volume;\n  };\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      anchorEl = _React$useState8[0],\n      setAnchorEl = _React$useState8[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var audio = new Audio();\n\n  var playSound = function playSound(song) {\n    // new Audio(song).play();\n    audio.src = song;\n    audio.preload = \"metadata\";\n    audio.playbackRate = 2;\n    audio.volume = volume;\n    audio.controls = true;\n    audio.play();\n  };\n\n  var callBack3 = function callBack3(val) {\n    console.log(\"val\", val);\n    playSound(val);\n  }; //   const openAudio = new Audio(open);\n  //   const closeAudio = new Audio(close);\n  //   const playSound = audioFile => {\n  //     audioFile.play();\n  //   };\n\n\n  var handleChange = function handleChange(event) {\n    if (event.target.flip) {\n      playSound(close);\n    } else {\n      playSound(open);\n    }\n\n    setFlip(!flip); // setState({ ...state, [event.target.name]: event.target.checked });\n\n    var arrayLength = songList.length;\n\n    for (var i = 0; i < arrayLength; i++) {\n      songList[i].checked ^= true;\n    }\n\n    callBack1(songList); // render(FlashcardList(callBack1));\n  };\n\n  var callBack2 = function callBack2(val) {\n    songList[val - 1].checked ^= true;\n    callBack1(songList); // var arrayLength = songList.length;\n    // for (var i = 0; i < arrayLength; i++) {\n    //     console.log(songList[i]);\n    // if (songList[i].id = val){\n    //     songList[i].checked = !songList[i].checked;\n    // }\n    //Do something\n    // }\n    // songList.forEach(trope => {\n    //     if (trope.id = val){\n    //         trope.checked = !trope.checked;\n    //     }\n    // });\n    // console.log(\"i'm FlashcardList callback\", songList);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    open: open,\n    anchorEl: anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    color: \"secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    id: \"demo\",\n    value: typeof value === 'number' ? value : 0,\n    onChange: handleSliderChange,\n    color: \"secondary\",\n    defaultValue: 50,\n    step: 10,\n    min: 0,\n    max: 100,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    value: value,\n    margin: \"dense\",\n    color: \"secondary\",\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    inputProps: {\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number',\n      color: \"secondary\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, songList.map(function (flash) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flashcard, {\n      flashcard: flash,\n      key: flash.id,\n      callBack2: callBack2,\n      callBack3: callBack3,\n      flip: flip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, \" \"));\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/FlashcardList_7.js"],"names":["React","Flashcard","makeStyles","Grid","Samples","Switch","open","close","Typography","Slider","Input","VolumeUp","Popover","Button","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","input","color","songList","FlashcardList","callBack1","useState","value","setValue","flip","setFlip","volume","setVolume","handleSliderChange","event","newValue","handleInputChange","target","Number","handleBlur","handleVolumeChange","audio","console","log","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Boolean","Audio","playSound","song","src","preload","playbackRate","controls","play","callBack3","val","handleChange","arrayLength","length","i","checked","callBack2","classes","vertical","horizontal","step","min","max","type","map","flash","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from \"./Flashcard_7\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Samples} from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\n\n// import Slider from \"@material-ui/core/Slider\";\n// import VolumeDown from '@material-ui/icons/VolumeDown';\n// import VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      // flexDirection: 'reverse',\n      // flexWrap: 'reverse'\n      // flexDirection: 'column-reverse'\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n    },\n    input: {\n        width: 42,\n        color: 'primary'\n      },\n  }));\n\n  \n//   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n\n  // let songList = new Map();\n  // Samples.forEach(element => {\n  //   songList.set(element.id, element);\n  // });\n//   let songList = prePopulateItems(Samples);\n  let songList = Samples;\n\n// export default function FlashcardList( { flashcards, callBack1} ) {\nexport default function FlashcardList( { callBack1} ) {\n\n  // let songList = [...flashcards];\n  // let songList = cloneDeep(flashcards);\n  // let songList = new Map();\n\n    const [value, setValue] = React.useState(50);\n\n    const [flip, setFlip] = React.useState(false);\n    const [volume, setVolume] = React.useState(.5);\n  \n    const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n    setVolume(value/100);\n\n    };\n\n    const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n    setVolume(value/100);\n\n    };\n\n    const handleBlur = () => {\n    if (value < 0) {\n        setValue(0);\n    } else if (value > 100) {\n        setValue(100);\n    }\n    };\n\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n    audio.volume = newValue;\n\n    console.log(\"vol in list is \", volume);\n    // document.getElementById(id).volume = volume;\n};\n\nconst [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  var audio = new Audio();\n  \n  const playSound = (song) => {\n        // new Audio(song).play();\n        audio.src = song;\n        audio.preload = \"metadata\";\n        audio.playbackRate = 2;\n        audio.volume = volume;\n        audio.controls = true;\n        audio.play();\n\n    };\n\nconst callBack3 = (val) => {\n    console.log(\"val\", val);\n   playSound(val);\n}\n\n//   const openAudio = new Audio(open);\n//   const closeAudio = new Audio(close);\n\n//   const playSound = audioFile => {\n//     audioFile.play();\n//   };\n\n\n  const handleChange = (event) => {\n\n    if (event.target.flip) {\n      playSound(close);  \n    } else {\n      playSound(open);\n    }\n\n    setFlip(!flip);\n    // setState({ ...state, [event.target.name]: event.target.checked });\n    var arrayLength = songList.length;\n    for (var i = 0; i < arrayLength; i++) {\n        songList[i].checked ^= true;\n    }\n    callBack1(songList);\n    // render(FlashcardList(callBack1));\n  };\n\n  \n\n  const callBack2 = (val) => {\n    \n    songList[val-1].checked ^= true;\n\n    callBack1(songList);\n\n    // var arrayLength = songList.length;\n    // for (var i = 0; i < arrayLength; i++) {\n    //     console.log(songList[i]);\n\n        // if (songList[i].id = val){\n        //     songList[i].checked = !songList[i].checked;\n        // }\n        //Do something\n    // }\n    // songList.forEach(trope => {\n\n    //     if (trope.id = val){\n    //         trope.checked = !trope.checked;\n    //     }\n    // });\n\n    // console.log(\"i'm FlashcardList callback\", songList);\n  };\n\n\n\n    const classes = useStyles();\n    \n\n    return (\n\n        \n    <div>\n    \n\n         <div className={classes.root}>\n         {/* <Grid container direction='row' spacing = {3} alignItems=\"center\" justify=\"center\">  */}\n            {/* <Grid item  > */}\n                {/* <Switch\n                checked={flip}\n                onChange={handleChange}\n                name=\"toggle\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n            /> */}\n            {/* </Grid> */}\n\n<Button color=\"secondary\" onClick={handleClick}>\n    <VolumeUp />\n</Button>\n      <Popover\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'center', horizontal: 'center', }}\n        transformOrigin={{ vertical: 'center', horizontal: 'center', }}\n      >\n       <Button variant=\"contained\" color=\"primary\">\n        <Grid container spacing={6} alignItems=\"center\">\n                <Grid item>\n                <p  color=\"secondary\" onClick={handleClick}>\n                    <VolumeUp />\n                </p>\n                </Grid>\n                <Grid item >\n                <Slider id=\"demo\"\n                            value={typeof value === 'number' ? value : 0}\n                            onChange={handleSliderChange}\n                            color=\"secondary\"\n                            defaultValue={50}\n                            step={10} min={0} max={100} \n                            valueLabelDisplay=\"auto\" />\n                {/* </Grid>\n                <Grid item> */}\n                <Input\n                    className={classes.input}\n                    value={value}\n                    margin=\"dense\"\n                    color=\"secondary\"\n                    onChange={handleInputChange}\n                    onBlur={handleBlur}\n                    inputProps={{step: 10, min: 0, max: 100,\n                    type: 'number', color: \"secondary\"\n                    }}\n                />\n\n                </Grid>\n                </Grid>\n\n        </Button>\n      </Popover>\n\n        \n\n                    <br/>\n                    <br/>\n                    <br/>\n\n\n                        {/* <Grid item>\n                        <VolumeDown />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Slider id=\"demo\"\n                            volume={volume} \n                            onChange={handleVolumeChange} \n                            defaultValue={.5}\n                            step={.1} min={0} max={1} \n                            valueLabelDisplay=\"auto\" />\n                        </Grid>\n                        <Grid item>\n                        <VolumeUp />\n                        </Grid> */}\n        {/* </Grid> */}\n\n      {/* style= { !state.toggle ? { 'font-family': 'Times New Roman'} : { }} > */}\n      <Grid container spacing={3} direction='row-reverse' > \n      {songList.map(flash => {\n                  return (\n                  <Grid item xs={3} >\n                    \n                    <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} callBack3={callBack3} flip={flip}> </Flashcard>\n                    {/* <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard> */}\n                  </Grid>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}