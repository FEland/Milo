{"ast":null,"code":"import _objectSpread from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Shema_4.js\";\nimport React, { useState } from 'react';\nimport Player from './Player_8';\nimport { Songs, Shemas } from './Effie';\nimport Sophie, { Batsheva } from './Sophie';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip'; // import ReactColorPicker from '@super-effective/react-color-picker'; //https://github.com/super-effective/react-color-picker\n\nimport ColorModal from './ColorModal';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\nexport default function Shema() {\n  var _React$useState = React.useState({\n    toggle: false,\n    toggleTranslation: false,\n    toggleTrope: false,\n    checked: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var openAudio = new Audio(open);\n  var closeAudio = new Audio(close);\n\n  var playSound = function playSound(audioFile) {\n    audioFile.play();\n  };\n\n  var handleChange = function handleChange(event) {\n    if (event.target.checked) {\n      playSound(closeAudio);\n    } else {\n      playSound(openAudio);\n    }\n\n    if (event.target.name === 'checked') {\n      setState(state.toggleTrope = true);\n      setState(state.toggle = false);\n      setState(state.toggleTranslation = false);\n    }\n\n    if (event.target.name === 'toggleTrope') {\n      setState(state.checked = false);\n      setState(state.toggle = false);\n      setState(state.toggleTranslation = false);\n    }\n\n    if (event.target.name === 'toggleTranslation') {\n      setState(state.toggle = false);\n      setState(state.toggleTrope = false);\n      setState(state.checked = false);\n    }\n\n    if (event.target.name === 'toggle') {\n      setState(state.toggleTranslation = false);\n      setState(state.toggleTrope = false);\n      setState(state.checked = false);\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  }; //   const [checked, setChecked] = React.useState(true);\n  //   const handleCheck = (event) => {\n  //     setChecked(event.target.checked);\n  //   };\n\n\n  var PurpleSwitch = withStyles({\n    switchBase: {\n      color: 'white',\n      '&$checked': {\n        color: purple[500]\n      },\n      '&$checked + $track': {\n        backgroundColor: purple[500]\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n\n  var _useState = useState('#b7bfbe'),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1]; //   let color = 'white';\n\n\n  var callBack = function callBack() {\n    for (var _len = arguments.length, val = new Array(_len), _key = 0; _key < _len; _key++) {\n      val[_key] = arguments[_key];\n    }\n\n    setColor(val);\n  }; // console.log(b);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Practice the Shema!\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Player, Object.assign({}, Songs[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 26\n    }\n  })), \" \"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Player, Object.assign({}, Songs[1], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 26\n    }\n  })), \" \"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Player, Object.assign({}, Songs[2], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 26\n    }\n  })), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"What it looks like in the Torah!\",\n    arrow: true,\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PurpleSwitch, {\n    checked: state.toggle,\n    onChange: handleChange,\n    name: \"toggle\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"With Trope / Ta'amim\",\n    arrow: true,\n    placement: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: state.toggleTrope,\n    onChange: handleChange,\n    name: \"toggleTrope\",\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Highlight Trope\",\n    arrow: true,\n    placement: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: state.checked,\n    onChange: handleChange,\n    color: \"primary\",\n    name: \"checked\",\n    inputProps: {\n      'position': 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Adjust Text Color\",\n    arrow: true,\n    placement: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ColorModal, {\n    color: color,\n    callBack: callBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"See English Translation\",\n    arrow: true,\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: state.toggleTranslation,\n    onChange: handleChange,\n    color: \"primary\",\n    name: \"toggleTranslation\",\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }))), !state.toggleTranslation ? !state.toggleTrope ? !state.toggle ? /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 122\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'ShlomosemiStam',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 158\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 227\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, state.checked ? /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Batsheva, {\n    p: Shemas[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 63\n    }\n  })) : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \" \", Shemas[3]), !state.toggleTranslation ? !state.toggleTrope ? !state.toggle ? /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 122\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'ShlomosemiStam',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 158\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[6],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 227\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, state.checked ? /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Batsheva, {\n    p: Shemas[5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 63\n    }\n  })) : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \" \", Shemas[7]), !state.toggleTranslation ? !state.toggleTrope ? !state.toggle ? /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 122\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'ShlomosemiStam',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 158\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 227\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'font-family': 'Times New Roman',\n      'font-size': 'x-large',\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, state.checked ? /*#__PURE__*/React.createElement(Sophie, {\n    p: Shemas[9],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Batsheva, {\n    p: Shemas[9],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 63\n    }\n  })) : /*#__PURE__*/React.createElement(\"quiz\", {\n    style: {\n      'color': color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, \" \", Shemas[11]), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/AlephBetBanner.png\",\n    alt: \"icon\",\n    align: \"center\",\n    loading: \"lazy\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 1\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Shema_4.js"],"names":["React","useState","Player","Songs","Shemas","Sophie","Batsheva","Grid","Switch","withStyles","purple","Checkbox","Tooltip","ColorModal","open","close","Shema","toggle","toggleTranslation","toggleTrope","checked","state","setState","openAudio","Audio","closeAudio","playSound","audioFile","play","handleChange","event","target","name","PurpleSwitch","switchBase","color","backgroundColor","track","setColor","callBack","val"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Player from './Player_8';\nimport {Songs, Shemas} from './Effie';\nimport Sophie, {Batsheva} from './Sophie';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\n// import ReactColorPicker from '@super-effective/react-color-picker'; //https://github.com/super-effective/react-color-picker\nimport ColorModal from './ColorModal';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\n\n\nexport default function Shema() {\n\n  const [state, setState] = React.useState({\n    toggle: false,\n    toggleTranslation: false,\n    toggleTrope: false,\n    checked: false\n  });\n\n  const openAudio = new Audio(open);\n  const closeAudio = new Audio(close);\n\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n\n\n  const handleChange = (event) => {\n\n\n    if (event.target.checked) {\n        playSound(closeAudio);  \n      } else {\n        playSound(openAudio);\n      }  \n\n    if (event.target.name === 'checked') {\n        setState(state.toggleTrope = true );\n        setState(state.toggle = false );\n        setState(state.toggleTranslation = false );\n    }\n    if (event.target.name === 'toggleTrope') {\n        setState(state.checked = false );\n        setState(state.toggle = false );\n        setState(state.toggleTranslation = false );\n    }\n    if (event.target.name === 'toggleTranslation') {\n        setState(state.toggle = false );\n        setState(state.toggleTrope = false );\n        setState(state.checked = false );\n    }\n    if (event.target.name === 'toggle') {\n        setState(state.toggleTranslation = false );\n        setState(state.toggleTrope = false );\n        setState(state.checked = false );\n    }\n\n    setState({ ...state, [event.target.name]: event.target.checked });\n\n  };\n\n\n//   const [checked, setChecked] = React.useState(true);\n\n//   const handleCheck = (event) => {\n//     setChecked(event.target.checked);\n//   };\n  \n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: 'white',\n      '&$checked': {\n        color: purple[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: purple[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  const [color, setColor] = useState('#b7bfbe');\n//   let color = 'white';\n\n  const callBack = (...val) => {\n    setColor(val);\n  }\n  // console.log(b);\n  return (\n    \n    <div >\n\n       <div style={{ color: 'white' }}> \n        {/* <div style={{ color: color }}>  */}\n          <h1>Practice the Shema!</h1>\n        </div>\n\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\"> \n            <Grid item > <Player {...Songs[0]} /> </Grid>\n            <Grid item > <Player {...Songs[1]} /> </Grid>\n            <Grid item > <Player {...Songs[2]} /> </Grid>\n        </Grid>\n\n        <div>\n            <Tooltip title=\"What it looks like in the Torah!\" arrow placement=\"left\">\n                <PurpleSwitch checked={state.toggle} onChange={handleChange}\n                    name=\"toggle\" inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n            </Tooltip>\n            <Tooltip title=\"With Trope / Ta'amim\" arrow placement=\"down\">\n                <Switch checked={state.toggleTrope} onChange={handleChange}\n                    name=\"toggleTrope\" inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n            </Tooltip>\n            <Tooltip title=\"Highlight Trope\" arrow placement=\"down\">\n                <Checkbox checked={state.checked} onChange={handleChange} color='primary' name=\"checked\" inputProps={{ 'position' : 'right' }}/>\n            </Tooltip>\n            <Tooltip title=\"Adjust Text Color\" arrow placement=\"down\">\n                 <ColorModal color = {color} callBack = {callBack} />\n            </Tooltip> \n            <Tooltip title=\"See English Translation\" arrow placement=\"right\">\n                <Switch checked={state.toggleTranslation} onChange={handleChange}\n                    color=\"primary\" name=\"toggleTranslation\"inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n            </Tooltip>\n        </div>\n\n    {/* 1st Paragraph */}\n    {!state.toggleTranslation ? \n        !state.toggleTrope ?\n            !state.toggle ? <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}> <Sophie p = {Shemas[0]}/> </quiz> : <quiz style = {{ 'font-family': 'ShlomosemiStam', 'color': color }}> <Sophie p = {Shemas[2]}/> </quiz> \n            : \n            <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}>\n                {state.checked ? <Sophie p = {Shemas[1]}/> :  <Batsheva p = {Shemas[1]} />  }\n            </quiz>\n        :\n        <quiz style = {{ 'color': color}}> {Shemas[3]}</quiz>\n    }\n    \n    {/* 2nd Paragraph */}\n    {!state.toggleTranslation ? \n        !state.toggleTrope ?\n            !state.toggle ? <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}> <Sophie p = {Shemas[4]}/> </quiz> : <quiz style = {{ 'font-family': 'ShlomosemiStam', 'color': color }}> <Sophie p = {Shemas[6]}/> </quiz> \n            : \n            <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}>\n                {state.checked ? <Sophie p = {Shemas[5]}/> :  <Batsheva p = {Shemas[5]} />  }\n            </quiz>\n        :\n        <quiz style = {{ 'color': color}}> {Shemas[7]}</quiz>\n    }\n    {/* 3rd Paragraph */}\n    {!state.toggleTranslation ? \n        !state.toggleTrope ?\n            !state.toggle ? <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}> <Sophie p = {Shemas[8]}/> </quiz> : <quiz style = {{ 'font-family': 'ShlomosemiStam', 'color': color }}> <Sophie p = {Shemas[10]}/> </quiz> \n            : \n            <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large', 'color': color}}>    \n                {state.checked ? <Sophie p = {Shemas[9]}/> :  <Batsheva p = {Shemas[9]} />  }\n            </quiz>\n        :\n        <quiz style = {{ 'color': color}}> {Shemas[11]}</quiz>\n        \n    }\n\n\n\n\n\n\n\n\n\n    {/* {!state.toggleTranslation ? \n        !state.toggleTrope ?\n            !state.toggle ? <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large'}}> <Sophie p = {Shemas[8]}/> </quiz> : <quiz style = {{ 'font-family': 'ShlomosemiStam' }}> <Sophie p = {Shemas[10]}/> </quiz> \n            : \n            <quiz style = {{ 'font-family': 'Times New Roman', 'font-size': 'x-large'}}>\n                <Grid container spacing={2} justify=\"center\" alignItems=\"center\"> \n                    <Grid item  >\n                        {!state.checked ? <Sophie p = {Shemas[9]}/> :  <Batsheva p = {Shemas[9]} />  }\n                    </Grid>\n                    <Grid item  >\n                        <Checkbox checked={state.checked} onChange={handleChange} color=\"primary\" name=\"checked\" inputProps={{ 'position' : 'right' }}/>\n                    </Grid>\n                </Grid>\n            </quiz>\n        :\n        <quiz> {Shemas[11]}</quiz>\n    } */}\n\n\n<img src=\"./images/AlephBetBanner.png\" alt=\"icon\" align=\"center\" loading=\"lazy\"  width=\"100%\" />\n\n    </div>\n\n  );\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}