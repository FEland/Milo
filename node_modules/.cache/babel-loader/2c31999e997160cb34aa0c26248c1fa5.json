{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Flashcard_8.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      // flexGrow: 1,\n      // backgroundColor: 'brown',\n      color: 'white'\n    },\n    paper: {\n      // padding: theme.spacing(2),\n      padding: '5% 10%',\n      // padding: '5%',\n      // margin: 'auto',\n      border: '4px double',\n      color: 'white',\n      // maxHeight: '%50',\n      backgroundColor: 'brown'\n    },\n    image: {\n      // width: 100,\n      height: 100\n    },\n    img: {\n      margin: 'auto',\n      // display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n  };\n});\nexport default function Flashcard(_ref) {\n  var props = Object.assign({}, _ref);\n  var classes = useStyles();\n  var toggle = props.flashcard.checked;\n\n  var _useState = useState(props.flashcard.checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      center = _useState2[0],\n      setcEnter = _useState2[1]; // const handleChange2 = (event) => {\n  //   setChecked(event.target.checked);\n  //   var arrayLength = songList.length;\n  //   for (var i = 0; i < arrayLength; i++) {\n  //       props.flashcard.checked ^= true;\n  //   }\n  //   callBack1(songList);\n  //   // render(FlashcardList(callBack1));\n  // };\n\n\n  var handleChange = function handleChange(event) {\n    // setChecked(event.target.checked);\n    // setEnter(!enter);\n    setcEnter(!center);\n    toggle ^= true;\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flip = _useState4[0],\n      setFlip = _useState4[1];\n\n  var playSound = function playSound(audioFile) {\n    audioFile.play();\n  };\n\n  var song = new Audio(props.flashcard.sound);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    loading: \"lazy\",\n    src: props.flashcard.image,\n    onClick: function onClick() {\n      playSound(song);\n    },\n    onMouseOver: function onMouseOver() {\n      setFlip(!flip);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      playSound(song);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"fl\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, flip ? props.flashcard.eng : props.flashcard.heb, \" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: toggle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Flashcard_8.js"],"names":["React","useState","makeStyles","Grid","Paper","ButtonBase","Checkbox","useStyles","theme","root","color","paper","padding","border","backgroundColor","image","height","img","margin","maxWidth","maxHeight","Flashcard","props","classes","toggle","flashcard","checked","center","setcEnter","handleChange","event","callBack2","id","console","log","flip","setFlip","playSound","audioFile","play","song","Audio","sound","cursor","eng","heb"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: 'brown',\n    color: 'white',\n\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    padding: '5% 10%',\n    // padding: '5%',\n    // margin: 'auto',\n    border: '4px double',\n    color: 'white',\n\n\n    // maxHeight: '%50',\n    backgroundColor: 'brown',\n  },\n  image: {\n    // width: 100,\n    height: 100,\n  },\n  img: {\n    margin: 'auto',\n    // display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Flashcard( {...props}) {\n    const classes = useStyles();\n\n    let toggle = props.flashcard.checked;\n\n    const [center, setcEnter] = useState(props.flashcard.checked);\n\n  // const handleChange2 = (event) => {\n  //   setChecked(event.target.checked);\n  //   var arrayLength = songList.length;\n  //   for (var i = 0; i < arrayLength; i++) {\n  //       props.flashcard.checked ^= true;\n  //   }\n  //   callBack1(songList);\n  //   // render(FlashcardList(callBack1));\n  // };\n\n  \n  const handleChange = (event) => {\n    // setChecked(event.target.checked);\n    // setEnter(!enter);\n    setcEnter(!center);\n    toggle ^= true;\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  const [flip, setFlip] = useState(false);\n  const playSound = audioFile => {\n    audioFile.play();\n  };\n  const song =  new Audio(props.flashcard.sound)\n\n\n\n  return (\n    \n    <div className={classes.root}>\n      <Paper className={classes.paper} >\n        <Grid container spacing={2}>\n          {/* <Grid item> */}\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" loading=\"lazy\" src={props.flashcard.image}  onClick={() => {playSound(song) }}  onMouseOver={() => {setFlip(!flip)}}/>\n            </ButtonBase>\n          {/* </Grid> */}\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item style={{ cursor: 'pointer' }} onClick = {() => {playSound(song)}} >\n                    <fl>{flip ? props.flashcard.eng : props.flashcard.heb} </fl> \n              </Grid>\n\n            </Grid>\n\n            <Grid item>\n              {/* <Typography variant=\"subtitle1\"> */}\n              <Checkbox checked={toggle} onChange={handleChange}/>\n              {/* </Typography> */}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}