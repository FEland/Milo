{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/Flashcard_8.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Tooltip from '@material-ui/core/Tooltip'; // import Slider from \"@material-ui/core/Slider\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress'; // import EqualizerIcon from '@material-ui/icons/Equalizer';\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      // flexGrow: 1,\n      // backgroundColor: 'green',\n      color: 'white' // display: 'flex',\n      // flexWrap: 'wrap',\n      // justifyContent: 'space-around',\n      // overflow: 'hidden',\n\n    },\n    paper: {\n      // padding: theme.spacing(2),\n      // padding: '5% 10%',\n      padding: '5%',\n      // margin: 'auto',\n      border: '4px double',\n      color: 'white',\n      // maxHeight: '%50',\n      backgroundColor: 'brown' // display: 'block',\n      // width: '10vw',\n      // transitionDuration: '0.3s',\n      // height: '8vw'\n      //     display: 'flex',\n      // flexWrap: 'wrap',\n      // justifyContent: 'space-around',\n      // overflow: 'hidden',\n\n    },\n    image: {\n      // width: 100,\n      height: 100\n    },\n    img: {\n      margin: 'auto',\n      // display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    },\n    progress: {\n      position: 'inherit',\n      // top: 30,\n      // top: -50,\n      // left: 70,\n      // left: 54,\n      zIndex: 2\n    }\n  };\n});\nexport default function Flashcard(_ref) {\n  var props = Object.assign({}, _ref);\n  var classes = useStyles();\n  var toggle = props.flashcard.checked;\n\n  var _useState = useState(props.flashcard.checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      center = _useState2[0],\n      setcEnter = _useState2[1]; // const handleChange2 = (event) => {\n  //   setChecked(event.target.checked);\n  //   var arrayLength = songList.length;\n  //   for (var i = 0; i < arrayLength; i++) {\n  //       props.flashcard.checked ^= true;\n  //   }\n  //   callBack1(songList);\n  //   // render(FlashcardList(callBack1));\n  // };\n\n\n  var handleChange = function handleChange(event) {\n    // setChecked(event.target.checked);\n    // setEnter(!enter);\n    setcEnter(!center);\n    toggle ^= true;\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      flip = _useState4[0],\n      setFlip = _useState4[1]; // const playSound = audioFile => {\n  //   audioFile.play();\n  // };\n  // const song =  new Audio(props.flashcard.sound)\n  //TODO: handle volume\n  // const [volume, setVolume] = React.useState(.5);\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      load = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      playing = _React$useState4[0],\n      setPlaying = _React$useState4[1];\n\n  var audio = new Audio();\n  audio.addEventListener('playing', function () {\n    setLoading(false);\n    setPlaying(true);\n  }, false);\n  audio.addEventListener('ended', function () {\n    setPlaying(false);\n  }, false);\n\n  var playSound = function playSound(song) {\n    // new Audio(song).play();\n    console.log(\"vol in card is\", props.volume);\n    setLoading(true);\n    audio.src = song;\n    audio.preload = \"metadata\";\n    audio.playbackRate = 1;\n    audio.volume = props.volume;\n    audio.controls = true;\n    audio.play();\n  }; //TODO: handle volume\n  // const handleVolumeChange = (event, newValue) => {\n  //     // setVolume(newValue);\n  //     audio.volume = newValue;\n  //     // document.getElementById(id).volume = volume;\n  // };\n  ///\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    alt: \"complex\",\n    loading: \"lazy\",\n    src: props.flashcard.image,\n    onClick: function onClick() {\n      playSound(props.flashcard.sound);\n    },\n    onMouseOver: function onMouseOver() {\n      setFlip(!flip);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      playSound(props.flashcard.sound);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fl\", {\n    style: {\n      'font-size': '2vw',\n      'line-height': '1.3',\n      'max-height': '2vw'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, flip ? props.flashcard.eng : props.flashcard.heb, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, playing ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"equalizer\",\n    width: \"40px\",\n    height: \"28px\",\n    viewBox: \"0 0 10 7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"bar1\",\n    transform: \"translate(0.5, 6.0) rotate(180.0) translate(-0.5, -6.0) \",\n    x: \"0\",\n    y: \"5\",\n    width: \"1\",\n    height: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"bar2\",\n    transform: \"translate(3.5, 4.5) rotate(180.0) translate(-3.5, -4.5) \",\n    x: \"3\",\n    y: \"2\",\n    width: \"1\",\n    height: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"bar3\",\n    transform: \"translate(6.5, 3.5) rotate(180.0) translate(-6.5, -3.5) \",\n    x: \"6\",\n    y: \"0\",\n    width: \"1\",\n    height: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"bar4\",\n    transform: \"translate(9.5, 5.0) rotate(180.0) translate(-9.5, -5.0) \",\n    x: \"9\",\n    y: \"3\",\n    width: \"1\",\n    height: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null, !load ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add trope to quizlet above\",\n    arrow: true,\n    placement: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    color: \"default\",\n    icon: /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 49\n      }\n    }),\n    checkedIcon: /*#__PURE__*/React.createElement(CheckBoxIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 32\n      }\n    }),\n    checked: toggle,\n    onChange: handleChange,\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 30,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }), \" \"))))))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/Flashcard_8.js"],"names":["React","useState","makeStyles","Grid","Paper","ButtonBase","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Tooltip","CircularProgress","useStyles","theme","root","color","paper","padding","border","backgroundColor","image","height","img","margin","maxWidth","maxHeight","progress","position","zIndex","Flashcard","props","classes","toggle","flashcard","checked","center","setcEnter","handleChange","event","callBack2","id","console","log","flip","setFlip","load","setLoading","playing","setPlaying","audio","Audio","addEventListener","playSound","song","volume","src","preload","playbackRate","controls","play","sound","cursor","eng","heb"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// import Slider from \"@material-ui/core/Slider\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import EqualizerIcon from '@material-ui/icons/Equalizer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: 'green',\n    color: 'white',\n\n    // display: 'flex',\n    // flexWrap: 'wrap',\n    // justifyContent: 'space-around',\n    // overflow: 'hidden',\n\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    // padding: '5% 10%',\n    padding: '5%',\n    // margin: 'auto',\n    border: '4px double',\n    color: 'white',\n    // maxHeight: '%50',\n    backgroundColor: 'brown',\n\n    // display: 'block',\n    // width: '10vw',\n    // transitionDuration: '0.3s',\n    // height: '8vw'\n    \n    //     display: 'flex',\n    // flexWrap: 'wrap',\n    // justifyContent: 'space-around',\n    // overflow: 'hidden',\n  },\n  image: {\n    // width: 100,\n    height: 100,\n  },\n  img: {\n    margin: 'auto',\n    // display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  progress: {\n    position: 'inherit',\n\n    // top: 30,\n    // top: -50,\n    // left: 70,\n    // left: 54,\n    zIndex: 2,\n  },\n}));\n\nexport default function Flashcard( {...props}) {\n    const classes = useStyles();\n\n    let toggle = props.flashcard.checked;\n\n    const [center, setcEnter] = useState(props.flashcard.checked);\n\n  // const handleChange2 = (event) => {\n  //   setChecked(event.target.checked);\n  //   var arrayLength = songList.length;\n  //   for (var i = 0; i < arrayLength; i++) {\n  //       props.flashcard.checked ^= true;\n  //   }\n  //   callBack1(songList);\n  //   // render(FlashcardList(callBack1));\n  // };\n\n  \n  const handleChange = (event) => {\n    // setChecked(event.target.checked);\n    // setEnter(!enter);\n    setcEnter(!center);\n    toggle ^= true;\n    props.callBack2(props.flashcard.id);\n    console.log(\"checked id\", props.flashcard.id);\n  };\n\n  const [flip, setFlip] = useState(false);\n  // const playSound = audioFile => {\n  //   audioFile.play();\n  // };\n  // const song =  new Audio(props.flashcard.sound)\n\n  //TODO: handle volume\n  // const [volume, setVolume] = React.useState(.5);\n\n  const [load, setLoading] = React.useState(false);\n  \n  const [playing, setPlaying] = React.useState(false);\n\n  var audio = new Audio();\n\n  audio.addEventListener('playing', function () {\n    setLoading(false);\n    setPlaying(true);\n}, false);\n\n  audio.addEventListener('ended', function () {\n    setPlaying(false);\n  }, false);\n\n  const playSound = (song) => {\n      // new Audio(song).play();\n      console.log(\"vol in card is\", props.volume);\n      setLoading(true);\n\n      audio.src = song;\n      audio.preload = \"metadata\";\n      audio.playbackRate = 1;\n      audio.volume = props.volume;\n      audio.controls = true;\n      audio.play();\n\n    };\n    //TODO: handle volume\n  // const handleVolumeChange = (event, newValue) => {\n  //     // setVolume(newValue);\n  //     audio.volume = newValue;\n  //     // document.getElementById(id).volume = volume;\n  // };\n  ///\n\n  return (\n    \n    <div className={classes.root}>\n\n      <Paper className={classes.paper} >\n\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n\n            <img className={classes.img} alt=\"complex\" loading=\"lazy\" src={props.flashcard.image}\n                  onClick={() => {playSound(props.flashcard.sound) }} \n                  onMouseOver={() => {setFlip(!flip)}}/>\n\n              {/* <img className={classes.img} alt=\"complex\" loading=\"lazy\" src={props.flashcard.image}  onClick={() => {playSound(song) }}  onMouseOver={() => {setFlip(!flip)}}/> */}\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item container direction=\"column\" spacing={2} style={{ cursor: 'pointer' }} onClick = {() => {playSound(props.flashcard.sound)}} >\n                {/* <Grid item style={{ cursor: 'pointer' }} onClick = {() => {playSound(song)}} > */}\n                    <fl style={{ 'font-size':'2vw' , 'line-height': '1.3','max-height': '2vw'}} >{flip ? props.flashcard.eng : props.flashcard.heb} </fl> \n              </Grid>\n\n            {/* </Grid> */}\n\n            <Grid item xs container direction=\"column\" spacing={2}>\n            <br/>\n            <Grid item>\n              {playing ?  \n                <Grid item>\n                  <svg id=\"equalizer\" width=\"40px\" height=\"28px\" viewBox=\"0 0 10 7\">\n                  <g fill=\"#000000\">\n                    <rect id=\"bar1\" transform=\"translate(0.5, 6.0) rotate(180.0) translate(-0.5, -6.0) \" x=\"0\" y=\"5\" width=\"1\" height=\"2\" />\n                    <rect id=\"bar2\" transform=\"translate(3.5, 4.5) rotate(180.0) translate(-3.5, -4.5) \" x=\"3\" y=\"2\" width=\"1\" height=\"5\" />\n                    <rect id=\"bar3\" transform=\"translate(6.5, 3.5) rotate(180.0) translate(-6.5, -3.5) \" x=\"6\" y=\"0\" width=\"1\" height=\"7\" />\n                    <rect id=\"bar4\" transform=\"translate(9.5, 5.0) rotate(180.0) translate(-9.5, -5.0) \" x=\"9\" y=\"3\" width=\"1\" height=\"4\" />\n                  </g>\n                </svg>\n                 </Grid>  :\n                 <>{!load ? \n              <Grid item>\n              <Tooltip title=\"Add trope to quizlet above\" arrow placement=\"center\">\n                <Checkbox color=\"default\" icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />} \n                  checkedIcon={<CheckBoxIcon fontSize=\"small\" />} checked={toggle} onChange={handleChange}\n                  className={classes.progress}\n                />\n              </Tooltip>\n              </Grid>\n              : <Grid item> <CircularProgress size ={30} color=\"primary\" /> </Grid> \n                 }\n                 </>\n            }\n              {/* <Checkbox checked={toggle} onChange={handleChange}/> */}\n\n              </Grid>\n              {/* <Grid item> */}\n              {/* {!load && <Grid item> <CircularProgress color=\"primary\" className={classes.progress} /> </Grid> } */}\n              {/* {!load && <CircularProgress size = {20} color=\"primary\" className={classes.progress} /> } */}\n            {/* </Grid> */}\n            </Grid>\n\n            {/* <Slider id=\"demo\"\n                            volume={volume} \n                            onChange={handleVolumeChange} \n                            defaultValue={.5}\n                            step={.1} min={0} max={1} \n                            valueLabelDisplay=\"auto\" /> */}\n\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}