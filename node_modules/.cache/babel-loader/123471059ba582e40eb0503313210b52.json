{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/QuizShapes_2.js\";\n//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, { useState, useRef } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport { Samples } from './Tropes'; // import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider'; //   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\nfunction shuffleTropes(items, num) {\n  //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n  var nums = [];\n  items.forEach(function (element) {\n    if (element.checked) {\n      nums.push(element);\n    }\n  });\n  var ranNums = [];\n  var i = nums.length;\n  var j = 0;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    ranNums.push(nums[j]);\n    nums.splice(j, 1);\n  }\n\n  return ranNums.slice(0, num);\n}\n\nfunction createQuiz(items, num) {\n  var order = shuffleTropes(items, num);\n  return order;\n}\n\nvar audio = new Audio();\nexport default function QuizShapes(_ref) {\n  var _this = this;\n\n  var props = Object.assign({}, _ref);\n  // let audio = new Audio();\n  var oldTropes = props.flashcards;\n  var items = [];\n  var arrayLength = oldTropes.length;\n\n  for (var x = 0; x < arrayLength; x++) {\n    if (oldTropes[x].checked === 1) {\n      items.push(oldTropes[x]);\n    }\n  }\n\n  if (oldTropes.length === undefined) {\n    items = Samples;\n  } // let fast = 1;\n  // const speeds = [.5, 1, 1.5, 2, 2.5];\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      flag = _useState2[0],\n      _setFlag = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      trope = _useState4[0],\n      _setTrope = _useState4[1]; // const [myState, _setMyState] = React.useState(0);\n\n\n  var tropeRef = React.useRef(trope);\n\n  var setTrope = function setTrope(data) {\n    tropeRef.current = data;\n\n    _setTrope(data);\n  };\n\n  var flagRef = React.useRef(flag);\n\n  var setFlag = function setFlag(data) {\n    flagRef.current = data;\n\n    _setFlag(data);\n  }; // const [speed, setSpeed] = useState(1);\n  // const handleSpeed = (val) => {\n  //     // setSpeed(speed => speed = val);\n  //     setSpeed(val);\n  //   }\n  // let i = items.length;\n\n\n  var i = 0;\n  var myflag = false; // var speed = 1;\n  // function getSpeed(){\n  //     return speed;\n  // }\n  // const [count, setCount] = useState(0);\n  // const [yesQuiz, setQuizTrue] = useState(0);\n\n  function continuous(index) {\n    if (index < quiz.length) {\n      setTrope(index);\n\n      try {\n        audio.src = quiz[index].sound; // audio.playbackRate = 2;\n\n        var playPromise = audio.play();\n\n        if (playPromise !== undefined) {\n          playPromise.then(function (_) {// Automatic playback started!\n            // Show playing UI.\n            // console.log(\"playing \", next_trope);\n          }).catch(function (error) {\n            // Auto-play was prevented\n            // Show paused UI.\n            console.log(\"promise broke in playnext\");\n          });\n        }\n      } catch (_unused) {\n        console.log(\"audio failed to load broke in playnext\");\n      }\n    } else {\n      setTrope(-1);\n      audio.pause();\n    }\n  }\n\n  function cont() {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    // var index = 1;\n    // console.log(\"HEA\", index, quiz[index].sound, quiz)\n    // audio.src = quiz[index].sound;\n    if (myflag && index < quiz.length) {\n      setTrope(index);\n      audio.src = quiz[index].sound;\n      audio.playbackRate = 2;\n      var playPromise = audio.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(function (_) {// Automatic playback started!\n          // Show playing UI.\n          // console.log(\"playing \", next_trope);\n        }).catch(function (error) {// Auto-play was prevented\n          // Show paused UI.\n          // console.log(\"promise broke in playnext\");\n        });\n      } // if (index === quiz.length-1){\n      //     resetFlag();\n      //     // setFlag(false);\n      //     // myflag = false;\n      // }\n\n    } // else if(index >= quiz.length){\n    // }\n\n  }\n\n  ; // audio.addEventListener('ended', function(){\n  //     audio.src = null;\n  //         //     // playNext((findIndex(audio.src)+1) % quiz.length);\n  //     continuous((findIndex(audio.src)+1));\n  // }, false);\n\n  var resetFlag = function resetFlag() {\n    flagRef.current = true;\n\n    _setFlag(true);\n\n    myflag = true;\n  };\n\n  function findIndex(src) {\n    // console.log(quiz)\n    var w = -1;\n\n    for (w = 0; w < quiz.length; w++) {\n      // console.log(\"w: \", w, \"quiz[w].sound \", quiz[w].sound, \" soruce is \", src, \" \", src.replace(/^.*(\\\\|\\/|\\:)/, ''))\n      var file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '');\n\n      if (quiz[w].sound === file) {\n        // console.log(\"here\")\n        return w;\n      }\n    } // return quiz.length-1;\n\n  } // audio.addEventListener('ended', cont((findIndex(audio.src)+1)), false);\n\n\n  audio.addEventListener('ended', function () {\n    // cont((findIndex(audio.src)+1));\n    // cont((findIndex(audio.src)+1));\n    i = i + 1;\n\n    if (i < quiz.length) {\n      setFlag(true);\n      cont(i);\n    } else {\n      // setFlag(false);\n      // myflag = false;\n      audio.pause();\n      i = 0;\n      setTrope(0); // resetFlag()\n      // flag = false;\n\n      _setFlag(false);\n\n      setFlag(false);\n      myflag = false;\n    }\n  }, false);\n\n  function playNext(next_trope) {\n    audio.src = null;\n    audio.src = quiz[next_trope].sound; // setTrope(next_trope);\n\n    var playPromise = audio.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(function (_) {// Automatic playback started!\n        // Show playing UI.\n        // console.log(\"playing \", next_trope);\n      }).catch(function (error) {// Auto-play was prevented\n        // Show paused UI.\n        // console.log(\"promise broke in playnext\");\n      });\n    }\n  } // audio.addEventListener('ended', function(){\n  //     audio.src = null;\n  //         //     // playNext((findIndex(audio.src)+1) % quiz.length);\n  //     continuous((findIndex(audio.src)+1));\n  // }, false);\n  // audio.addEventListener('ended', function(){\n  //     // console.log(\"ended w i, \", i)\n  //     // // ++i;\n  //     // setTrope(i);\n  //     // console.log(\"calling next w i, \", i)\n  //     // audio.pause();\n  //     // console.log(audio.src, \" ended\")\n  //     // let d = findIndex(audio.src);\n  //     // console.log(d);\n  //     // i = d + 1;\n  //     // let j = i + 1;\n  //     // i++;\n  //     // setTrope(d + 1);\n  //     // tropeRef.current = d + 1;\n  //     // tropeRef.current = (i+1) % quiz.length;\n  //     // if (flagRef) {\n  //     // handlePlay();\n  //     // console.log(\"now here\")\n  //     // setTimeout(function(){  }, 5000);\n  //     var nextIndex = (findIndex(audio.src)+1) % quiz.length;\n  //     // setTrope(nextIndex);\n  //     // playNext(nextIndex);\n  //     // playNext((findIndex(audio.src)+1) % quiz.length);\n  //     // playNext(j);\n  //     // }\n  // }, false);\n\n\n  var _React$useState = React.useState(createQuiz(items, Math.min(Math.floor(items.length / 2), 8))),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      quiz = _React$useState2[0],\n      _reloadQuiz = _React$useState2[1];\n\n  var _React$useState3 = React.useState(4),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var quizRef = React.useRef(quiz);\n\n  var reloadQuiz = function reloadQuiz(data) {\n    quizRef.current = data;\n\n    _reloadQuiz(data);\n  };\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n    reloadQuiz(createQuiz(items, newValue));\n  }; // playFromSong\n\n\n  var playFromSong = function playFromSong(index) {\n    myflag = true;\n    setFlag(true); // enableHighlight(true);\n\n    i = index;\n    setTrope(index);\n    cont(i); // playNext(index);\n    // audio.src = \"\";\n    // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n    // i = index;\n    // setTrope(i);\n    // console.log('trope now ', trope);\n    // playNext();\n  };\n\n  function handlePlay() {\n    // myflag = 0;\n    // setTrope(quiz.length);\n    // i = quiz.length;\n    // setTrope(0);\n    // printc(\"handlePlay b4 PlayNext\");\n    // playNext();\n    i = trope;\n    myflag = true;\n    setFlag(true); // playNext(i);\n    // continuous(0);\n\n    cont(i); // makeSongList(quiz);\n  }\n\n  function handlePause() {\n    // myflag = 1;\n    // // audio.pause();\n    // audio.pause()\n    // audio.currentTime = 0\n    // audio = null;\n    // setTrope(i);\n    myflag = false;\n    setFlag(false);\n    audio.pause(); // killAudio();\n    // i = 0;\n    // setTrope(0);\n  } // function handlePlay(){\n  //     myflag = 0;\n  //     // setTrope(quiz.length);\n  //     // i = quiz.length;\n  //     setTrope(0);\n  //     // printc(\"handlePlay b4 PlayNext\");\n  // playNext();\n  //     setFlag(true); \n  //     // makeSongList(quiz);\n  // }\n  // function handlePause(){\n  //     myflag = 1;\n  //     // audio.pause();\n  //     audio.pause()\n  //     audio.currentTime = 0\n  //     audio = null;\n  //     // printc(\"handlePause after setFlag\");\n  //     setFlag(false);\n  //     i = 0;\n  //     setTrope(0);\n  // }\n  // const enableHighlight = (e) => {\n  //                 console.log(\"do\");\n  // audio.addEventListener('timeupdate', function () {\n  // if (!myflag) {\n  //     playNext();\n  //     }\n  // else {\n  //     audio.pause();\n  // }\n  // console.log(audio.currentTime.toFixed(1));\n  // }, false);\n  // }\n\n\n  function killAudio() {\n    audio.pause(); // audio = null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"quiz\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 10\n    }\n  }, \"Quiz Yourself!\", /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(CachedIcon, {\n      onClick: function onClick() {\n        reloadQuiz(createQuiz(items, value));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: value,\n    onChange: handleChange,\n    defaultValue: Math.min(Math.floor((items.length + 1) / 2), 4),\n    step: 1,\n    min: 0,\n    max: Math.min(items.length, 8),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 21\n    }\n  })), !flag ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PlayCircleFilled, {\n      onClick: function onClick() {\n        return handlePlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(PauseCircleFilled, {\n      onClick: function onClick() {\n        return handlePause();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, quiz.map(function (songName, index) {\n    return trope === index ?\n    /*#__PURE__*/\n    // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'opacity': '.5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      src: songName.image,\n      onClick: function onClick() {\n        return playFromSong(index);\n      },\n      alt: \"icon\",\n      loading: \"lazy\",\n      width: \"50\",\n      height: \"50\",\n      style: {\n        'border': '0px solid black'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 14\n      }\n    }) // <img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n    // :<img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n    ;\n  })));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/QuizShapes_2.js"],"names":["React","useState","useRef","Button","PauseCircleFilled","PlayCircleFilled","Samples","CachedIcon","Slider","shuffleTropes","items","num","nums","forEach","element","checked","push","ranNums","i","length","j","Math","floor","random","splice","slice","createQuiz","order","audio","Audio","QuizShapes","props","oldTropes","flashcards","arrayLength","x","undefined","flag","_setFlag","trope","_setTrope","tropeRef","setTrope","data","current","flagRef","setFlag","myflag","continuous","index","quiz","src","sound","playPromise","play","then","_","catch","error","console","log","pause","cont","playbackRate","resetFlag","findIndex","w","file","replace","addEventListener","playNext","next_trope","min","_reloadQuiz","value","setValue","quizRef","reloadQuiz","handleChange","event","newValue","playFromSong","handlePlay","handlePause","killAudio","map","songName","image"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SAAQC,OAAR,QAAsB,UAAtB,C,CAEA;AACA;;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AAEE,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,GAA9B,EAAkC;AAAE;AAClC,MAAIC,IAAI,GAAG,EAAX;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,UAAAC,OAAO,EAAI;AACrB,QAAIA,OAAO,CAACC,OAAZ,EAAoB;AAChBH,MAAAA,IAAI,CAACI,IAAL,CAAUF,OAAV;AACC;AACJ,GAJL;AAMA,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,CAAC,GAAGN,IAAI,CAACO,MAAb;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAOF,CAAC,EAAR,EAAY;AACRE,IAAAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAC,CAAnB,CAAX,CAAJ;AACAD,IAAAA,OAAO,CAACD,IAAR,CAAaJ,IAAI,CAACQ,CAAD,CAAjB;AACAR,IAAAA,IAAI,CAACY,MAAL,CAAYJ,CAAZ,EAAc,CAAd;AACH;;AACD,SAAOH,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAgBd,GAAhB,CAAP;AAED;;AAGD,SAASe,UAAT,CAAoBhB,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIgB,KAAK,GAAGlB,aAAa,CAACC,KAAD,EAAQC,GAAR,CAAzB;AACA,SAAOgB,KAAP;AACD;;AAED,IAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AAEF,eAAe,SAASC,UAAT,OAAmC;AAAA;;AAAA,MAATC,KAAS;AAE9C;AACA,MAAIC,SAAS,GAAGD,KAAK,CAACE,UAAtB;AACA,MAAIvB,KAAK,GAAG,EAAZ;AACA,MAAIwB,WAAW,GAAGF,SAAS,CAACb,MAA5B;;AACA,OAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAApB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,QAAIH,SAAS,CAACG,CAAD,CAAT,CAAapB,OAAb,KAAyB,CAA7B,EAA+B;AAC3BL,MAAAA,KAAK,CAACM,IAAN,CAAWgB,SAAS,CAACG,CAAD,CAApB;AACH;AACJ;;AACD,MAAIH,SAAS,CAACb,MAAV,KAAqBiB,SAAzB,EAAmC;AAC/B1B,IAAAA,KAAK,GAAGJ,OAAR;AACH,GAb6C,CAe9C;AACA;;;AAhB8C,kBAiBrBL,QAAQ,CAAC,KAAD,CAjBa;AAAA;AAAA,MAiBvCoC,IAjBuC;AAAA,MAiBjCC,QAjBiC;;AAAA,mBAkBnBrC,QAAQ,CAAC,CAAD,CAlBW;AAAA;AAAA,MAkBvCsC,KAlBuC;AAAA,MAkBhCC,SAlBgC,kBAoB9C;;;AAEA,MAAMC,QAAQ,GAAGzC,KAAK,CAACE,MAAN,CAAaqC,KAAb,CAAjB;;AACA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACrBF,IAAAA,QAAQ,CAACG,OAAT,GAAmBD,IAAnB;;AACAH,IAAAA,SAAS,CAACG,IAAD,CAAT;AACH,GAHD;;AAKA,MAAME,OAAO,GAAG7C,KAAK,CAACE,MAAN,CAAamC,IAAb,CAAhB;;AACA,MAAMS,OAAO,GAAG,SAAVA,OAAU,CAAAH,IAAI,EAAI;AACpBE,IAAAA,OAAO,CAACD,OAAR,GAAkBD,IAAlB;;AACAL,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,GAHD,CA7B8C,CAiC9C;AAEA;AACA;AACA;AACA;AAGA;;;AACA,MAAIzB,CAAC,GAAG,CAAR;AACA,MAAI6B,MAAM,GAAG,KAAb,CA3C8C,CA4C9C;AAEA;AACA;AACA;AAEA;AACA;;AAEA,WAASC,UAAT,CAAqBC,KAArB,EAA2B;AAEvB,QAAIA,KAAK,GAAGC,IAAI,CAAC/B,MAAjB,EAAwB;AACpBuB,MAAAA,QAAQ,CAACO,KAAD,CAAR;;AAEA,UAAG;AACCrB,QAAAA,KAAK,CAACuB,GAAN,GAAYD,IAAI,CAACD,KAAD,CAAJ,CAAYG,KAAxB,CADD,CAEC;;AACA,YAAIC,WAAW,GAAGzB,KAAK,CAAC0B,IAAN,EAAlB;;AAEA,YAAID,WAAW,KAAKjB,SAApB,EAA+B;AAC3BiB,UAAAA,WAAW,CAACE,IAAZ,CAAiB,UAAAC,CAAC,EAAI,CACtB;AACA;AACI;AAEH,WALD,EAMCC,KAND,CAMO,UAAAC,KAAK,EAAI;AAChB;AACA;AACIC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,WAVD;AAWH;AACJ,OAlBD,CAmBA,gBAAK;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACH;AACJ,KAzBD,MA0BI;AACAlB,MAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACAd,MAAAA,KAAK,CAACiC,KAAN;AAEH;AAEJ;;AAED,WAASC,IAAT,GAA0B;AAAA,QAAXb,KAAW,uEAAH,CAAG;;AACtB;AACA;AACA;AAGA,QAAGF,MAAM,IAAIE,KAAK,GAAGC,IAAI,CAAC/B,MAA1B,EAAkC;AAC9BuB,MAAAA,QAAQ,CAACO,KAAD,CAAR;AAEArB,MAAAA,KAAK,CAACuB,GAAN,GAAYD,IAAI,CAACD,KAAD,CAAJ,CAAYG,KAAxB;AACAxB,MAAAA,KAAK,CAACmC,YAAN,GAAqB,CAArB;AAGA,UAAIV,WAAW,GAAGzB,KAAK,CAAC0B,IAAN,EAAlB;;AAEA,UAAID,WAAW,KAAKjB,SAApB,EAA+B;AAC3BiB,QAAAA,WAAW,CAACE,IAAZ,CAAiB,UAAAC,CAAC,EAAI,CACtB;AACA;AACI;AAEH,SALD,EAMCC,KAND,CAMO,UAAAC,KAAK,EAAI,CAChB;AACA;AACI;AACH,SAVD;AAWH,OArB6B,CAsB9B;AACA;AACA;AACA;AACA;;AACH,KAjCqB,CAkCtB;AACA;;AACH;;AAAA,GA7H6C,CAgI1C;AACJ;AACA;AAEA;AAEA;;AAEA,MAAMM,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBnB,IAAAA,OAAO,CAACD,OAAR,GAAkB,IAAlB;;AACAN,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACAS,IAAAA,MAAM,GAAG,IAAT;AACH,GAJD;;AAMA,WAASkB,SAAT,CAAoBd,GAApB,EAAwB;AACpB;AACA,QAAIe,CAAC,GAAG,CAAC,CAAT;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGhB,IAAI,CAAC/B,MAArB,EAA6B+C,CAAC,EAA9B,EAAiC;AAC7B;AACA,UAAIC,IAAI,GAAG,cAAchB,GAAG,CAACiB,OAAJ,CAAY,eAAZ,EAA6B,EAA7B,CAAzB;;AACA,UAAIlB,IAAI,CAACgB,CAAD,CAAJ,CAAQd,KAAR,KAAkBe,IAAtB,EAA2B;AACvB;AACA,eAAOD,CAAP;AACH;AACJ,KAVmB,CAWpB;;AAEH,GA3J6C,CA6J9C;;;AACAtC,EAAAA,KAAK,CAACyC,gBAAN,CAAuB,OAAvB,EAAgC,YAAU;AACtC;AACA;AACAnD,IAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;;AACA,QAAIA,CAAC,GAAGgC,IAAI,CAAC/B,MAAb,EAAoB;AAChB2B,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAgB,MAAAA,IAAI,CAAC5C,CAAD,CAAJ;AACH,KAHD,MAII;AACA;AACA;AACAU,MAAAA,KAAK,CAACiC,KAAN;AACA3C,MAAAA,CAAC,GAAG,CAAJ;AACAwB,MAAAA,QAAQ,CAAC,CAAD,CAAR,CALA,CAOA;AACA;;AACAJ,MAAAA,QAAQ,CAAC,KAAD,CAAR;;AACAQ,MAAAA,OAAO,CAAC,KAAD,CAAP;AAEAC,MAAAA,MAAM,GAAG,KAAT;AACH;AAEJ,GAvBD,EAuBG,KAvBH;;AAyBA,WAASuB,QAAT,CAAmBC,UAAnB,EAA8B;AAE1B3C,IAAAA,KAAK,CAACuB,GAAN,GAAY,IAAZ;AACAvB,IAAAA,KAAK,CAACuB,GAAN,GAAYD,IAAI,CAACqB,UAAD,CAAJ,CAAiBnB,KAA7B,CAH0B,CAI1B;;AAEA,QAAIC,WAAW,GAAGzB,KAAK,CAAC0B,IAAN,EAAlB;;AAEA,QAAID,WAAW,KAAKjB,SAApB,EAA+B;AAC3BiB,MAAAA,WAAW,CAACE,IAAZ,CAAiB,UAAAC,CAAC,EAAI,CACtB;AACA;AACI;AAEH,OALD,EAMCC,KAND,CAMO,UAAAC,KAAK,EAAI,CAChB;AACA;AACI;AACH,OAVD;AAWH;AAEJ,GA7M6C,CA+M9C;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;AAxP8C,wBA0PlB1D,KAAK,CAACC,QAAN,CAAeyB,UAAU,CAAChB,KAAD,EAAQW,IAAI,CAACmD,GAAL,CAASnD,IAAI,CAACC,KAAL,CAAWZ,KAAK,CAACS,MAAN,GAAa,CAAxB,CAAT,EAAoC,CAApC,CAAR,CAAzB,CA1PkB;AAAA;AAAA,MA0PvC+B,IA1PuC;AAAA,MA0PjCuB,WA1PiC;;AAAA,yBA2PpBzE,KAAK,CAACC,QAAN,CAAe,CAAf,CA3PoB;AAAA;AAAA,MA2PvCyE,KA3PuC;AAAA,MA2PhCC,QA3PgC;;AA4P9C,MAAMC,OAAO,GAAG5E,KAAK,CAACE,MAAN,CAAagD,IAAb,CAAhB;;AAEA,MAAM2B,UAAU,GAAG,SAAbA,UAAa,CAAAlC,IAAI,EAAI;AACvBiC,IAAAA,OAAO,CAAChC,OAAR,GAAkBD,IAAlB;;AACA8B,IAAAA,WAAW,CAAC9B,IAAD,CAAX;AACH,GAHD;;AAKA,MAAMmC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACtCL,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAH,IAAAA,UAAU,CAACnD,UAAU,CAAChB,KAAD,EAAQsE,QAAR,CAAX,CAAV;AACH,GAHD,CAnQ8C,CAwQ9C;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAChC,KAAD,EAAW;AAE5BF,IAAAA,MAAM,GAAG,IAAT;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP,CAH4B,CAI5B;;AACA5B,IAAAA,CAAC,GAAG+B,KAAJ;AACAP,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACAa,IAAAA,IAAI,CAAC5C,CAAD,CAAJ,CAP4B,CAS5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,GAjBD;;AAmBA,WAASgE,UAAT,GAAqB;AACjB;AACA;AACA;AACA;AAEA;AACA;AACAhE,IAAAA,CAAC,GAAGqB,KAAJ;AACAQ,IAAAA,MAAM,GAAG,IAAT;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP,CAViB,CAWjB;AACA;;AACAgB,IAAAA,IAAI,CAAC5C,CAAD,CAAJ,CAbiB,CAcjB;AACH;;AAED,WAASiE,WAAT,GAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AACApC,IAAAA,MAAM,GAAG,KAAT;AACAD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAlB,IAAAA,KAAK,CAACiC,KAAN,GATkB,CAWlB;AACA;AACA;AAIH,GA9T6C,CAgU9C;AACA;AACA;AACA;AACA;AAEA;AACI;AACJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEI;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AAEJ;;;AAEA,WAASuB,SAAT,GAAoB;AAChBxD,IAAAA,KAAK,CAACiC,KAAN,GADgB,CAEhB;AACH;;AAGD,sBAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AACI,IAAA,OAAO,eAAE,oBAAC,UAAD;AAAa,MAAA,OAAO,EAAE,mBAAO;AAACgB,QAAAA,UAAU,CAACnD,UAAU,CAAChB,KAAD,EAAQgE,KAAR,CAAX,CAAV;AAAsC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAaI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,KAAf;AAAsB,IAAA,QAAQ,EAAEI,YAAhC;AAA8C,IAAA,YAAY,EAAEzD,IAAI,CAACmD,GAAL,CAASnD,IAAI,CAACC,KAAL,CAAW,CAACZ,KAAK,CAACS,MAAN,GAAa,CAAd,IAAiB,CAA5B,CAAT,EAAwC,CAAxC,CAA5D;AACQ,IAAA,IAAI,EAAE,CADd;AACkB,IAAA,GAAG,EAAE,CADvB;AAC0B,IAAA,GAAG,EAAEE,IAAI,CAACmD,GAAL,CAAS9D,KAAK,CAACS,MAAf,EAAuB,CAAvB,CAD/B;AAC0D,IAAA,iBAAiB,EAAC,MAD5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,EAqBK,CAACkB,IAAD,gBAAS,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AACN,IAAA,OAAO,eAAE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAM6C,UAAU,EAAhB;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,gBAGG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AACI,IAAA,OAAO,eAAE,oBAAC,iBAAD;AAAmB,MAAA,OAAO,EAAE;AAAA,eAAMC,WAAW,EAAjB;AAAA,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBR,CAFA,CADH,eAmCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHjC,IAAI,CAACmC,GAAL,CAAS,UAACC,QAAD,EAAWrC,KAAX,EAAoB;AAAC,WAC1BV,KAAK,KAAKU,KAAX;AAAA;AAEA;AACA;AACA;AAAK,MAAA,GAAG,EAAEqC,QAAQ,CAACC,KAAnB;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMN,YAAY,CAAChC,KAAD,CAAlB;AAAA,OAAnC;AAA8D,MAAA,GAAG,EAAC,MAAlE;AAAyE,MAAA,OAAO,EAAC,MAAjF;AAAwF,MAAA,KAAK,EAAC,IAA9F;AAAmG,MAAA,MAAM,EAAC,IAA1G;AAA+G,MAAA,KAAK,EAAG;AAAC,mBAAY;AAAb,OAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,gBAKC;AAAK,MAAA,GAAG,EAAEqC,QAAQ,CAACC,KAAnB;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMN,YAAY,CAAChC,KAAD,CAAlB;AAAA,OAAnC;AAA8D,MAAA,GAAG,EAAC,MAAlE;AAAyE,MAAA,OAAO,EAAC,MAAjF;AAAwF,MAAA,KAAK,EAAC,IAA9F;AAAmG,MAAA,MAAM,EAAC,IAA1G;AAA+G,MAAA,KAAK,EAAI;AAAC,kBAAW;AAAZ,OAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAN0B,CAO3B;AACA;AAR2B;AAU1B,GAVJ,CADG,CAnCH,CAFL;AAsDH","sourcesContent":["//TODO FIX UP FLAG STATE FOR PAUSING\nimport React, {useState, useRef} from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport PauseCircleFilled from '@material-ui/icons/PauseCircleFilled';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport {Samples} from './Tropes';\n\n// import SpeedIcon from '@material-ui/icons/Speed';\n// import DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Slider from '@material-ui/core/Slider';\n\n//   function getRandomInt(min, max) {\n//     min = Math.ceil(min);\n//     max = Math.floor(max);\n//     return Math.floor(Math.random() * (max - min)) + min; \n//   }\n\n  function shuffleTropes(items, num){ //https://stackoverflow.com/questions/18806210/generating-non-repeating-random-numbers-in-js\n    let nums = [];\n    items.forEach(element => {\n        if (element.checked){\n            nums.push(element);\n            }\n        });\n\n    let ranNums = [];\n    let i = nums.length;\n    let j = 0;\n\n    while (i--) {\n        j = Math.floor(Math.random() * (i+1));\n        ranNums.push(nums[j]);\n        nums.splice(j,1);\n    }\n    return ranNums.slice(0,num);\n\n  }\n\n\n  function createQuiz(items, num) {\n    let order = shuffleTropes(items, num);\n    return order;\n  }\n\n  let audio = new Audio();\n\nexport default function QuizShapes( { ...props} ) {\n\n    // let audio = new Audio();\n    let oldTropes = props.flashcards;\n    let items = [];\n    var arrayLength = oldTropes.length;\n    for (var x = 0; x < arrayLength; x++) {\n        if (oldTropes[x].checked === 1){\n            items.push(oldTropes[x]);\n        }\n    }\n    if (oldTropes.length === undefined){\n        items = Samples;\n    }\n\n    // let fast = 1;\n    // const speeds = [.5, 1, 1.5, 2, 2.5];\n    const [flag, _setFlag] = useState(false);\n    const [trope, _setTrope] = useState(0);\n\n    // const [myState, _setMyState] = React.useState(0);\n\n    const tropeRef = React.useRef(trope);\n    const setTrope = data => {\n        tropeRef.current = data;\n        _setTrope(data);\n    };\n\n    const flagRef = React.useRef(flag);\n    const setFlag = data => {\n        flagRef.current = data;\n        _setFlag(data);\n    };\n    // const [speed, setSpeed] = useState(1);\n\n    // const handleSpeed = (val) => {\n    //     // setSpeed(speed => speed = val);\n    //     setSpeed(val);\n    //   }\n  \n      \n    // let i = items.length;\n    var i = 0;\n    let myflag = false;\n    // var speed = 1;\n\n    // function getSpeed(){\n    //     return speed;\n    // }\n\n    // const [count, setCount] = useState(0);\n    // const [yesQuiz, setQuizTrue] = useState(0);\n\n    function continuous (index){\n\n        if (index < quiz.length){\n            setTrope(index);\n\n            try{ \n                audio.src = quiz[index].sound;\n                // audio.playbackRate = 2;\n                var playPromise = audio.play();\n\n                if (playPromise !== undefined) {\n                    playPromise.then(_ => {\n                    // Automatic playback started!\n                    // Show playing UI.\n                        // console.log(\"playing \", next_trope);\n\n                    })\n                    .catch(error => {\n                    // Auto-play was prevented\n                    // Show paused UI.\n                        console.log(\"promise broke in playnext\");\n                    });\n                }\n            }\n            catch{\n                console.log(\"audio failed to load broke in playnext\");\n            }\n        }\n        else{\n            setTrope(-1);\n            audio.pause();\n\n        }\n\n    }\n\n    function cont (index = 0) {\n        // var index = 1;\n        // console.log(\"HEA\", index, quiz[index].sound, quiz)\n        // audio.src = quiz[index].sound;\n\n\n        if(myflag && index < quiz.length) {\n            setTrope(index);\n\n            audio.src = quiz[index].sound;\n            audio.playbackRate = 2;\n\n\n            var playPromise = audio.play();\n\n            if (playPromise !== undefined) {\n                playPromise.then(_ => {\n                // Automatic playback started!\n                // Show playing UI.\n                    // console.log(\"playing \", next_trope);\n    \n                })\n                .catch(error => {\n                // Auto-play was prevented\n                // Show paused UI.\n                    // console.log(\"promise broke in playnext\");\n                });\n            }\n            // if (index === quiz.length-1){\n            //     resetFlag();\n            //     // setFlag(false);\n            //     // myflag = false;\n            // }\n        }\n        // else if(index >= quiz.length){\n        // }\n    };\n\n    \n        // audio.addEventListener('ended', function(){\n    //     audio.src = null;\n    //         //     // playNext((findIndex(audio.src)+1) % quiz.length);\n\n    //     continuous((findIndex(audio.src)+1));\n\n    // }, false);\n\n    const resetFlag = () => {\n        flagRef.current = true;\n        _setFlag(true);\n        myflag = true;\n    };\n\n    function findIndex (src){\n        // console.log(quiz)\n        var w = -1;\n        for (w = 0; w < quiz.length; w++){\n            // console.log(\"w: \", w, \"quiz[w].sound \", quiz[w].sound, \" soruce is \", src, \" \", src.replace(/^.*(\\\\|\\/|\\:)/, ''))\n            let file = './sounds/' + src.replace(/^.*(\\\\|\\/|\\:)/, '')\n            if (quiz[w].sound === file){\n                // console.log(\"here\")\n                return w;\n            }\n        }\n        // return quiz.length-1;\n\n    }\n\n    // audio.addEventListener('ended', cont((findIndex(audio.src)+1)), false);\n    audio.addEventListener('ended', function(){\n        // cont((findIndex(audio.src)+1));\n        // cont((findIndex(audio.src)+1));\n        i = i + 1;\n        if (i < quiz.length){\n            setFlag(true); \n            cont(i);\n        } \n        else{\n            // setFlag(false);\n            // myflag = false;\n            audio.pause();\n            i = 0;\n            setTrope(0);\n\n            // resetFlag()\n            // flag = false;\n            _setFlag(false);\n            setFlag(false);\n\n            myflag = false;\n        }\n\n    }, false);\n\n    function playNext (next_trope){\n\n        audio.src = null;\n        audio.src = quiz[next_trope].sound;\n        // setTrope(next_trope);\n\n        var playPromise = audio.play();\n\n        if (playPromise !== undefined) {\n            playPromise.then(_ => {\n            // Automatic playback started!\n            // Show playing UI.\n                // console.log(\"playing \", next_trope);\n\n            })\n            .catch(error => {\n            // Auto-play was prevented\n            // Show paused UI.\n                // console.log(\"promise broke in playnext\");\n            });\n        }\n        \n    }\n\n    // audio.addEventListener('ended', function(){\n    //     audio.src = null;\n    //         //     // playNext((findIndex(audio.src)+1) % quiz.length);\n\n    //     continuous((findIndex(audio.src)+1));\n\n    // }, false);\n\n\n    // audio.addEventListener('ended', function(){\n\n    //     // console.log(\"ended w i, \", i)\n    //     // // ++i;\n    //     // setTrope(i);\n    //     // console.log(\"calling next w i, \", i)\n    //     // audio.pause();\n    //     // console.log(audio.src, \" ended\")\n\n    //     // let d = findIndex(audio.src);\n    //     // console.log(d);\n    //     // i = d + 1;\n    //     // let j = i + 1;\n    //     // i++;\n    //     // setTrope(d + 1);\n    //     // tropeRef.current = d + 1;\n    //     // tropeRef.current = (i+1) % quiz.length;\n\n    //     // if (flagRef) {\n    //     // handlePlay();\n    //     // console.log(\"now here\")\n    //     // setTimeout(function(){  }, 5000);\n\n    //     var nextIndex = (findIndex(audio.src)+1) % quiz.length;\n        \n    //     // setTrope(nextIndex);\n    //     // playNext(nextIndex);\n    //     // playNext((findIndex(audio.src)+1) % quiz.length);\n    //     // playNext(j);\n\n    //     // }\n\n    // }, false);\n\n    const [quiz, _reloadQuiz] = React.useState(createQuiz(items, Math.min(Math.floor(items.length/2),8)));\n    const [value, setValue] = React.useState(4);\n    const quizRef = React.useRef(quiz);\n\n    const reloadQuiz = data => {\n        quizRef.current = data;\n        _reloadQuiz(data);\n    };\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        reloadQuiz(createQuiz(items, newValue))\n    };\n\n    // playFromSong\n    const playFromSong = (index) => {\n        \n        myflag = true;\n        setFlag(true);\n        // enableHighlight(true);\n        i = index;\n        setTrope(index);\n        cont(i);\n\n        // playNext(index);\n\n        // audio.src = \"\";\n        // console.log('index was ', i, 'now is ', index, ' and trope was ', trope);\n        // i = index;\n        // setTrope(i);\n        // console.log('trope now ', trope);\n        // playNext();\n    };\n\n    function handlePlay(){\n        // myflag = 0;\n        // setTrope(quiz.length);\n        // i = quiz.length;\n        // setTrope(0);\n\n        // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n        i = trope;\n        myflag = true;\n        setFlag(true); \n        // playNext(i);\n        // continuous(0);\n        cont(i);\n        // makeSongList(quiz);\n    }\n\n    function handlePause(){\n        // myflag = 1;\n        // // audio.pause();\n        // audio.pause()\n        // audio.currentTime = 0\n        // audio = null;\n        // setTrope(i);\n        myflag = false;\n        setFlag(false);\n        audio.pause();\n\n        // killAudio();\n        // i = 0;\n        // setTrope(0);\n\n\n\n    }\n\n    // function handlePlay(){\n    //     myflag = 0;\n    //     // setTrope(quiz.length);\n    //     // i = quiz.length;\n    //     setTrope(0);\n\n    //     // printc(\"handlePlay b4 PlayNext\");\n        // playNext();\n    //     setFlag(true); \n\n    //     // makeSongList(quiz);\n    // }\n\n    // function handlePause(){\n    //     myflag = 1;\n    //     // audio.pause();\n    //     audio.pause()\n    //     audio.currentTime = 0\n    //     audio = null;\n\n    //     // printc(\"handlePause after setFlag\");\n    //     setFlag(false);\n    //     i = 0;\n    //     setTrope(0);\n\n\n\n    // }\n    // const enableHighlight = (e) => {\n    //                 console.log(\"do\");\n\n        // audio.addEventListener('timeupdate', function () {\n            // if (!myflag) {\n            //     playNext();\n            //     }\n            // else {\n            //     audio.pause();\n            // }\n            // console.log(audio.currentTime.toFixed(1));\n\n        // }, false);\n\n    // }\n\n    function killAudio(){\n        audio.pause();\n        // audio = null;\n    }\n\n\n    return (\n        \n         <quiz>Quiz Yourself!\n            <h5> \n\n            <div className=\"controls\" >\n            \n\n                <Button variant=\"contained\" color=\"primary\"\n                    endIcon={<CachedIcon  onClick={() =>  {reloadQuiz(createQuiz(items, value));}}/>}>\n                </Button> \n\n                {/* <Button variant=\"contained\" color=\"primary\"\n                    startIcon = {<DoubleArrowIcon onChange={() => { handleSpeed(2) ;}} />}>\n                        {speed}\n                </Button> \n */}\n\n                <Button size=\"small\" variant=\"contained\"> \n                    <Slider value={value} onChange={handleChange} defaultValue={Math.min(Math.floor((items.length+1)/2),4)}\n                            step={1}  min={0} max={Math.min(items.length, 8)} valueLabelDisplay=\"auto\" />\n                            </Button>\n\n                    \n\n                {/* only shows play or pause based off flag state.. flag doesn't work must be fixed! */}\n                {!flag ?  <Button variant=\"contained\" color=\"primary\" \n                    endIcon={<PlayCircleFilled onClick={() => handlePlay()}/>}>\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" \n                        endIcon={<PauseCircleFilled onClick={() => handlePause()}/>}>\n                    </Button>\n                }\n            </div>\n\n            </h5>\n\n            <p>\n        {quiz.map((songName, index)=> {return ( \n            (trope === index) ?\n\n            // <img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => playFromSong(index-1)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            <img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            :<img src={songName.image} onClick={() => playFromSong(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n            // <img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={ {'opacity' : '.5'} }/>\n            // :<img src={songName.image} onClick={() => cont(index)} alt=\"icon\" loading=\"lazy\" width=\"50\" height=\"50\" style={  {'border' : '0px solid black'}  }/>\n\n           )})}\n        </p>\n\n           </quiz>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}