{"ast":null,"code":"import _slicedToArray from \"/Users/femac2/Desktop/milo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/femac2/Desktop/milo/src/FlashcardList_7.js\";\nimport React from 'react';\nimport Flashcard from \"./Flashcard_7\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Samples } from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\"; // import Slider from \"@material-ui/core/Slider\";\n// import VolumeDown from '@material-ui/icons/VolumeDown';\n// import VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden' // flexDirection: 'reverse',\n      // flexWrap: 'reverse'\n      // flexDirection: 'column-reverse'\n\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\"\n    },\n    input: {\n      width: 42\n    }\n  };\n}); //   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n// let songList = new Map();\n// Samples.forEach(element => {\n//   songList.set(element.id, element);\n// });\n//   let songList = prePopulateItems(Samples);\n\nvar songList = Samples; // export default function FlashcardList( { flashcards, callBack1} ) {\n\nexport default function FlashcardList(_ref) {\n  var _this = this;\n\n  var callBack1 = _ref.callBack1;\n\n  // let songList = [...flashcards];\n  // let songList = cloneDeep(flashcards);\n  // let songList = new Map();\n  var _React$useState = React.useState(30),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleSliderChange = function handleSliderChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  var handleBlur = function handleBlur() {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      flip = _React$useState4[0],\n      setFlip = _React$useState4[1];\n\n  var _React$useState5 = React.useState(.5),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      volume = _React$useState6[0],\n      setVolume = _React$useState6[1];\n\n  var handleVolumeChange = function handleVolumeChange(event, newValue) {\n    setVolume(newValue);\n    audio.volume = newValue;\n    console.log(\"vol in list is \", volume); // document.getElementById(id).volume = volume;\n  }; // const handleInputChange = (event, newValue) => {\n  //     setVolume(newValue === '' ? '' : Number(newValue));\n  // };\n  //   const handleBlur = () => {\n  //     if (volume < 0) {\n  //       setVolume(0);\n  //     } else if (volume > 1) {\n  //       setVolume(1);\n  //     }\n  //   };\n\n\n  var audio = new Audio();\n\n  var playSound = function playSound(song) {\n    // new Audio(song).play();\n    audio.src = song;\n    audio.preload = \"metadata\";\n    audio.playbackRate = 2;\n    audio.volume = volume;\n    audio.controls = true;\n    audio.play();\n  };\n\n  var callBack3 = function callBack3(val) {\n    console.log(\"val\", val);\n    playSound(val);\n  }; //   const openAudio = new Audio(open);\n  //   const closeAudio = new Audio(close);\n  //   const playSound = audioFile => {\n  //     audioFile.play();\n  //   };\n\n\n  var handleChange = function handleChange(event) {\n    if (event.target.flip) {\n      playSound(close);\n    } else {\n      playSound(open);\n    }\n\n    setFlip(!flip); // setState({ ...state, [event.target.name]: event.target.checked });\n\n    var arrayLength = songList.length;\n\n    for (var i = 0; i < arrayLength; i++) {\n      songList[i].checked ^= true;\n    }\n\n    callBack1(songList); // render(FlashcardList(callBack1));\n  };\n\n  var callBack2 = function callBack2(val) {\n    songList[val - 1].checked ^= true;\n    callBack1(songList); // var arrayLength = songList.length;\n    // for (var i = 0; i < arrayLength; i++) {\n    //     console.log(songList[i]);\n    // if (songList[i].id = val){\n    //     songList[i].checked = !songList[i].checked;\n    // }\n    //Do something\n    // }\n    // songList.forEach(trope => {\n    //     if (trope.id = val){\n    //         trope.checked = !trope.checked;\n    //     }\n    // });\n    // console.log(\"i'm FlashcardList callback\", songList);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 10\n    }\n  }, \"asdfkasldfkj\", 30 / 100, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    id: \"demo\",\n    value: typeof value === 'number' ? value : 0,\n    onChange: handleSliderChange // volume={volume} \n    // onChange={handleVolumeChange} \n    ,\n    defaultValue: .5,\n    step: .1,\n    min: 0,\n    max: 1,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    value: value,\n    margin: \"dense\",\n    onChange: handleInputChange,\n    onBlur: handleBlur // volume={volume}\n    // onChange={handleVolumeChange}\n    // onBlur={handleBlur}\n    ,\n    inputProps: {\n      step: 10,\n      min: 0,\n      max: 100,\n      type: 'number',\n      'aria-labelledby': 'input-slider'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row-reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, songList.map(function (flash) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flashcard, {\n      flashcard: flash,\n      key: flash.id,\n      callBack2: callBack2,\n      callBack3: callBack3,\n      flip: flip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, \" \"));\n  }))));\n}","map":{"version":3,"sources":["/Users/femac2/Desktop/milo/src/FlashcardList_7.js"],"names":["React","Flashcard","makeStyles","Grid","Samples","Switch","open","close","Typography","Slider","Input","VolumeUp","useStyles","theme","root","display","flexWrap","justifyContent","overflow","grid","width","height","direction","justify","alignItems","input","songList","FlashcardList","callBack1","useState","value","setValue","handleSliderChange","event","newValue","handleInputChange","target","Number","handleBlur","flip","setFlip","volume","setVolume","handleVolumeChange","audio","console","log","Audio","playSound","song","src","preload","playbackRate","controls","play","callBack3","val","handleChange","arrayLength","length","i","checked","callBack2","classes","step","min","max","type","map","flash","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Flashcard from \"./Flashcard_7\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Samples} from './Tropes3';\nimport Switch from '@material-ui/core/Switch';\nimport open from \"./sounds/ui_lock.wav\";\nimport close from \"./sounds/ui_unlock.wav\";\n\n// import Slider from \"@material-ui/core/Slider\";\n// import VolumeDown from '@material-ui/icons/VolumeDown';\n// import VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      // flexDirection: 'reverse',\n      // flexWrap: 'reverse'\n      // flexDirection: 'column-reverse'\n    },\n    grid: {\n      width: 500,\n      height: 450,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n\n    },\n    input: {\n        width: 42,\n      },\n  }));\n\n  \n//   function prePopulateItems(tropes){\n//     let items = new Map();\n//     tropes.forEach(element => {\n//       items.set(element.id, element);\n//     });\n//     return items;\n//   }\n\n  // let songList = new Map();\n  // Samples.forEach(element => {\n  //   songList.set(element.id, element);\n  // });\n//   let songList = prePopulateItems(Samples);\n  let songList = Samples;\n\n// export default function FlashcardList( { flashcards, callBack1} ) {\nexport default function FlashcardList( { callBack1} ) {\n\n  // let songList = [...flashcards];\n  // let songList = cloneDeep(flashcards);\n  // let songList = new Map();\n\n    const [value, setValue] = React.useState(30);\n\n    const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n    };\n\n    const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n    };\n\n    const handleBlur = () => {\n    if (value < 0) {\n        setValue(0);\n    } else if (value > 100) {\n        setValue(100);\n    }\n    };\n\n  const [flip, setFlip] = React.useState(false);\n  const [volume, setVolume] = React.useState(.5);\n\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n    audio.volume = newValue;\n\n    console.log(\"vol in list is \", volume);\n    // document.getElementById(id).volume = volume;\n};\n    // const handleInputChange = (event, newValue) => {\n    //     setVolume(newValue === '' ? '' : Number(newValue));\n    // };\n\n//   const handleBlur = () => {\n//     if (volume < 0) {\n//       setVolume(0);\n//     } else if (volume > 1) {\n//       setVolume(1);\n//     }\n//   };\n\n  var audio = new Audio();\n  \n  const playSound = (song) => {\n        // new Audio(song).play();\n        audio.src = song;\n        audio.preload = \"metadata\";\n        audio.playbackRate = 2;\n        audio.volume = volume;\n        audio.controls = true;\n        audio.play();\n\n    };\n\nconst callBack3 = (val) => {\n    console.log(\"val\", val);\n   playSound(val);\n}\n\n//   const openAudio = new Audio(open);\n//   const closeAudio = new Audio(close);\n\n//   const playSound = audioFile => {\n//     audioFile.play();\n//   };\n\n\n  const handleChange = (event) => {\n\n    if (event.target.flip) {\n      playSound(close);  \n    } else {\n      playSound(open);\n    }\n\n    setFlip(!flip);\n    // setState({ ...state, [event.target.name]: event.target.checked });\n    var arrayLength = songList.length;\n    for (var i = 0; i < arrayLength; i++) {\n        songList[i].checked ^= true;\n    }\n    callBack1(songList);\n    // render(FlashcardList(callBack1));\n  };\n\n  \n\n  const callBack2 = (val) => {\n    \n    songList[val-1].checked ^= true;\n\n    callBack1(songList);\n\n    // var arrayLength = songList.length;\n    // for (var i = 0; i < arrayLength; i++) {\n    //     console.log(songList[i]);\n\n        // if (songList[i].id = val){\n        //     songList[i].checked = !songList[i].checked;\n        // }\n        //Do something\n    // }\n    // songList.forEach(trope => {\n\n    //     if (trope.id = val){\n    //         trope.checked = !trope.checked;\n    //     }\n    // });\n\n    // console.log(\"i'm FlashcardList callback\", songList);\n  };\n\n\n\n    const classes = useStyles();\n    \n\n    return (\n\n        \n    <div>\n    \n\n         <div className={classes.root}>\n         {/* <Grid container direction='row' spacing = {3} alignItems=\"center\" justify=\"center\">  */}\n            {/* <Grid item  > */}\n                {/* <Switch\n                checked={flip}\n                onChange={handleChange}\n                name=\"toggle\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n            /> */}\n            {/* </Grid> */}\nasdfkasldfkj\n{30/100}\n            <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                <VolumeUp />\n                </Grid>\n                <Grid item xs>\n                <Slider id=\"demo\"\n                            value={typeof value === 'number' ? value : 0}\n                            onChange={handleSliderChange}\n                            // volume={volume} \n                            // onChange={handleVolumeChange} \n                            defaultValue={.5}\n                            step={.1} min={0} max={1} \n                            valueLabelDisplay=\"auto\" />\n                </Grid>\n                <Grid item>\n                <Input\n                    className={classes.input}\n                    value={value}\n                    margin=\"dense\"\n                    onChange={handleInputChange}\n                    onBlur={handleBlur}\n                    // volume={volume}\n                    // onChange={handleVolumeChange}\n                    // onBlur={handleBlur}\n                    inputProps={{step: 10, min: 0, max: 100,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                    }}\n                />\n\n                </Grid>\n            </Grid>\n\n\n\n\n                    <br/>\n                    <br/>\n                    <br/>\n\n\n                        {/* <Grid item>\n                        <VolumeDown />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Slider id=\"demo\"\n                            volume={volume} \n                            onChange={handleVolumeChange} \n                            defaultValue={.5}\n                            step={.1} min={0} max={1} \n                            valueLabelDisplay=\"auto\" />\n                        </Grid>\n                        <Grid item>\n                        <VolumeUp />\n                        </Grid> */}\n        {/* </Grid> */}\n\n      {/* style= { !state.toggle ? { 'font-family': 'Times New Roman'} : { }} > */}\n      <Grid container spacing={3} direction='row-reverse' > \n      {songList.map(flash => {\n                  return (\n                  <Grid item xs={3} >\n                    \n                    <Flashcard flashcard = {flash} key = {flash.id} callBack2={callBack2} callBack3={callBack3} flip={flip}> </Flashcard>\n                    {/* <Flashcard flashcard = {flashcard} key = {flashcard.id}> </Flashcard> */}\n                  </Grid>\n                  )\n        })}\n        \n      </Grid>\n\n    </div>\n    </div>\n\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}